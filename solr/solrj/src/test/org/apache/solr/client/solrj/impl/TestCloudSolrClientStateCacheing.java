begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.client.solrj.impl
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|CollectionAdminRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|UpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|SolrCloudTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|DocCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestCloudSolrClientStateCacheing
specifier|public
class|class
name|TestCloudSolrClientStateCacheing
extends|extends
name|SolrCloudTestCase
block|{
DECL|field|id
specifier|private
specifier|final
name|String
name|id
init|=
literal|"id"
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupCluster
specifier|public
specifier|static
name|void
name|setupCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|configureCluster
argument_list|(
literal|4
argument_list|)
operator|.
name|addConfig
argument_list|(
literal|"conf"
argument_list|,
name|getFile
argument_list|(
literal|"solrj"
argument_list|)
operator|.
name|toPath
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"solr"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"configsets"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"streaming"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"conf"
argument_list|)
argument_list|)
operator|.
name|configure
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheInvalidationOnLeaderChange
specifier|public
name|void
name|testCacheInvalidationOnLeaderChange
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|collectionName
init|=
literal|"cacheInvalidation"
decl_stmt|;
try|try
init|(
name|CloudSolrClient
name|solrClient
init|=
operator|new
name|CloudSolrClient
operator|.
name|Builder
argument_list|()
operator|.
name|withZkHost
argument_list|(
name|cluster
operator|.
name|getZkServer
argument_list|()
operator|.
name|getZkAddress
argument_list|()
argument_list|)
operator|.
name|sendDirectUpdatesToShardLeadersOnly
argument_list|()
operator|.
name|build
argument_list|()
init|)
block|{
name|CollectionAdminRequest
operator|.
name|createCollection
argument_list|(
name|collectionName
argument_list|,
literal|"conf"
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|.
name|process
argument_list|(
name|solrClient
argument_list|)
expr_stmt|;
comment|// send one update that will populate the client's cluster state cache
operator|new
name|UpdateRequest
argument_list|()
operator|.
name|add
argument_list|(
name|id
argument_list|,
literal|"0"
argument_list|,
literal|"a_t"
argument_list|,
literal|"hello1"
argument_list|)
operator|.
name|add
argument_list|(
name|id
argument_list|,
literal|"2"
argument_list|,
literal|"a_t"
argument_list|,
literal|"hello2"
argument_list|)
operator|.
name|add
argument_list|(
name|id
argument_list|,
literal|"3"
argument_list|,
literal|"a_t"
argument_list|,
literal|"hello2"
argument_list|)
operator|.
name|commit
argument_list|(
name|solrClient
argument_list|,
name|collectionName
argument_list|)
expr_stmt|;
comment|// take down a leader node
name|JettySolrRunner
name|leaderJetty
init|=
name|cluster
operator|.
name|getLeaderJetty
argument_list|(
name|collectionName
argument_list|,
literal|"shard1"
argument_list|)
decl_stmt|;
name|leaderJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
comment|// wait for a new leader to be elected
name|solrClient
operator|.
name|waitForState
argument_list|(
name|collectionName
argument_list|,
name|DEFAULT_TIMEOUT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
parameter_list|(
name|n
parameter_list|,
name|c
parameter_list|)
lambda|->
name|DocCollection
operator|.
name|isUpdateable
argument_list|(
name|n
argument_list|,
name|c
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// send another update - this should still succeed, even though the client's
comment|// cached leader will be incorrect
operator|new
name|UpdateRequest
argument_list|()
operator|.
name|add
argument_list|(
name|id
argument_list|,
literal|"4"
argument_list|,
literal|"a_t"
argument_list|,
literal|"hello1"
argument_list|)
operator|.
name|add
argument_list|(
name|id
argument_list|,
literal|"5"
argument_list|,
literal|"a_t"
argument_list|,
literal|"hello2"
argument_list|)
operator|.
name|add
argument_list|(
name|id
argument_list|,
literal|"6"
argument_list|,
literal|"a_t"
argument_list|,
literal|"hello2"
argument_list|)
operator|.
name|commit
argument_list|(
name|solrClient
argument_list|,
name|collectionName
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

