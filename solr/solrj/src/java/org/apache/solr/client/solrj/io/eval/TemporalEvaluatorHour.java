begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.client.solrj.io.eval
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|io
operator|.
name|eval
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|ChronoField
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|TemporalAccessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|io
operator|.
name|stream
operator|.
name|expr
operator|.
name|StreamExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|io
operator|.
name|stream
operator|.
name|expr
operator|.
name|StreamFactory
import|;
end_import

begin_comment
comment|/**  * Provides a hour stream evaluator  */
end_comment

begin_class
DECL|class|TemporalEvaluatorHour
specifier|public
class|class
name|TemporalEvaluatorHour
extends|extends
name|TemporalEvaluator
block|{
DECL|field|FUNCTION_NAME
specifier|public
specifier|static
specifier|final
name|String
name|FUNCTION_NAME
init|=
literal|"hour"
decl_stmt|;
DECL|method|TemporalEvaluatorHour
specifier|public
name|TemporalEvaluatorHour
parameter_list|(
name|StreamExpression
name|expression
parameter_list|,
name|StreamFactory
name|factory
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|expression
argument_list|,
name|factory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFunction
specifier|public
name|String
name|getFunction
parameter_list|()
block|{
return|return
name|FUNCTION_NAME
return|;
block|}
annotation|@
name|Override
DECL|method|evaluateDate
specifier|public
name|Object
name|evaluateDate
parameter_list|(
name|TemporalAccessor
name|aDate
parameter_list|)
block|{
return|return
name|aDate
operator|.
name|get
argument_list|(
name|ChronoField
operator|.
name|HOUR_OF_DAY
argument_list|)
return|;
block|}
block|}
end_class

end_unit

