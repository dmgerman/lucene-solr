begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.cloud.autoscaling
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|autoscaling
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_interface
DECL|interface|ClusterDataProvider
specifier|public
interface|interface
name|ClusterDataProvider
extends|extends
name|Closeable
block|{
comment|/**Get the value of each tag for a given node    *    * @param node node name    * @param tags tag names    * @return a map of tag vs value    */
DECL|method|getNodeValues
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getNodeValues
parameter_list|(
name|String
name|node
parameter_list|,
name|Collection
argument_list|<
name|String
argument_list|>
name|tags
parameter_list|)
function_decl|;
comment|/**    * Get the details of each replica in a node. It attempts to fetch as much details about    * the replica as mentioned in the keys list. It is not necessary to give al details    *<p>    * the format is {collection:shard :[{replicadetails}]}    */
DECL|method|getReplicaInfo
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Policy
operator|.
name|ReplicaInfo
argument_list|>
argument_list|>
argument_list|>
name|getReplicaInfo
parameter_list|(
name|String
name|node
parameter_list|,
name|Collection
argument_list|<
name|String
argument_list|>
name|keys
parameter_list|)
function_decl|;
DECL|method|getNodes
name|Collection
argument_list|<
name|String
argument_list|>
name|getNodes
parameter_list|()
function_decl|;
comment|/**Get the collection-specific policy    */
DECL|method|getPolicyNameByCollection
name|String
name|getPolicyNameByCollection
parameter_list|(
name|String
name|coll
parameter_list|)
function_decl|;
annotation|@
name|Override
DECL|method|close
specifier|default
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{   }
block|}
end_interface

end_unit

