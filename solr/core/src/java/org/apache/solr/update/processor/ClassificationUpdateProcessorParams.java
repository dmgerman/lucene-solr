begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.update.processor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_class
DECL|class|ClassificationUpdateProcessorParams
specifier|public
class|class
name|ClassificationUpdateProcessorParams
block|{
DECL|field|inputFieldNames
specifier|private
name|String
index|[]
name|inputFieldNames
decl_stmt|;
comment|// the array of fields to be sent to the Classifier
DECL|field|trainingFilterQuery
specifier|private
name|Query
name|trainingFilterQuery
decl_stmt|;
comment|// a filter query to reduce the training set to a subset
DECL|field|trainingClassField
specifier|private
name|String
name|trainingClassField
decl_stmt|;
comment|// the field containing the class for the Document
DECL|field|predictedClassField
specifier|private
name|String
name|predictedClassField
decl_stmt|;
comment|// the field that will contain the predicted class
DECL|field|maxPredictedClasses
specifier|private
name|int
name|maxPredictedClasses
decl_stmt|;
comment|// the max number of classes to assign
DECL|field|algorithm
specifier|private
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
name|algorithm
decl_stmt|;
comment|// the Classification Algorithm to use - currently 'knn' or 'bayes'
DECL|field|minTf
specifier|private
name|int
name|minTf
decl_stmt|;
comment|// knn specific - the minimum Term Frequency for considering a term
DECL|field|minDf
specifier|private
name|int
name|minDf
decl_stmt|;
comment|// knn specific - the minimum Document Frequency for considering a term
DECL|field|k
specifier|private
name|int
name|k
decl_stmt|;
comment|// knn specific - thw window of top results to evaluate, when assigning the class
DECL|method|getInputFieldNames
specifier|public
name|String
index|[]
name|getInputFieldNames
parameter_list|()
block|{
return|return
name|inputFieldNames
return|;
block|}
DECL|method|setInputFieldNames
specifier|public
name|void
name|setInputFieldNames
parameter_list|(
name|String
index|[]
name|inputFieldNames
parameter_list|)
block|{
name|this
operator|.
name|inputFieldNames
operator|=
name|inputFieldNames
expr_stmt|;
block|}
DECL|method|getTrainingFilterQuery
specifier|public
name|Query
name|getTrainingFilterQuery
parameter_list|()
block|{
return|return
name|trainingFilterQuery
return|;
block|}
DECL|method|setTrainingFilterQuery
specifier|public
name|void
name|setTrainingFilterQuery
parameter_list|(
name|Query
name|trainingFilterQuery
parameter_list|)
block|{
name|this
operator|.
name|trainingFilterQuery
operator|=
name|trainingFilterQuery
expr_stmt|;
block|}
DECL|method|getTrainingClassField
specifier|public
name|String
name|getTrainingClassField
parameter_list|()
block|{
return|return
name|trainingClassField
return|;
block|}
DECL|method|setTrainingClassField
specifier|public
name|void
name|setTrainingClassField
parameter_list|(
name|String
name|trainingClassField
parameter_list|)
block|{
name|this
operator|.
name|trainingClassField
operator|=
name|trainingClassField
expr_stmt|;
block|}
DECL|method|getPredictedClassField
specifier|public
name|String
name|getPredictedClassField
parameter_list|()
block|{
return|return
name|predictedClassField
return|;
block|}
DECL|method|setPredictedClassField
specifier|public
name|void
name|setPredictedClassField
parameter_list|(
name|String
name|predictedClassField
parameter_list|)
block|{
name|this
operator|.
name|predictedClassField
operator|=
name|predictedClassField
expr_stmt|;
block|}
DECL|method|getMaxPredictedClasses
specifier|public
name|int
name|getMaxPredictedClasses
parameter_list|()
block|{
return|return
name|maxPredictedClasses
return|;
block|}
DECL|method|setMaxPredictedClasses
specifier|public
name|void
name|setMaxPredictedClasses
parameter_list|(
name|int
name|maxPredictedClasses
parameter_list|)
block|{
name|this
operator|.
name|maxPredictedClasses
operator|=
name|maxPredictedClasses
expr_stmt|;
block|}
DECL|method|getAlgorithm
specifier|public
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
name|getAlgorithm
parameter_list|()
block|{
return|return
name|algorithm
return|;
block|}
DECL|method|setAlgorithm
specifier|public
name|void
name|setAlgorithm
parameter_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
name|algorithm
parameter_list|)
block|{
name|this
operator|.
name|algorithm
operator|=
name|algorithm
expr_stmt|;
block|}
DECL|method|getMinTf
specifier|public
name|int
name|getMinTf
parameter_list|()
block|{
return|return
name|minTf
return|;
block|}
DECL|method|setMinTf
specifier|public
name|void
name|setMinTf
parameter_list|(
name|int
name|minTf
parameter_list|)
block|{
name|this
operator|.
name|minTf
operator|=
name|minTf
expr_stmt|;
block|}
DECL|method|getMinDf
specifier|public
name|int
name|getMinDf
parameter_list|()
block|{
return|return
name|minDf
return|;
block|}
DECL|method|setMinDf
specifier|public
name|void
name|setMinDf
parameter_list|(
name|int
name|minDf
parameter_list|)
block|{
name|this
operator|.
name|minDf
operator|=
name|minDf
expr_stmt|;
block|}
DECL|method|getK
specifier|public
name|int
name|getK
parameter_list|()
block|{
return|return
name|k
return|;
block|}
DECL|method|setK
specifier|public
name|void
name|setK
parameter_list|(
name|int
name|k
parameter_list|)
block|{
name|this
operator|.
name|k
operator|=
name|k
expr_stmt|;
block|}
block|}
end_class

end_unit

