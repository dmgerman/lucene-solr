begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.highlight
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|highlight
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|invoke
operator|.
name|MethodHandles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|uhighlight
operator|.
name|UnifiedHighlighter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|HighlightParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|PluginInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|LocalSolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**   * Highlighter impl that uses {@link UnifiedHighlighter} configured to operate as it's ancestor/predecessor, the  * {code PostingsHighlighter}.  *  * @deprecated Use {@link UnifiedSolrHighlighter} instead  */
end_comment

begin_class
annotation|@
name|Deprecated
DECL|class|PostingsSolrHighlighter
specifier|public
class|class
name|PostingsSolrHighlighter
extends|extends
name|UnifiedSolrHighlighter
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MethodHandles
operator|.
name|lookup
argument_list|()
operator|.
name|lookupClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|init
specifier|public
name|void
name|init
parameter_list|(
name|PluginInfo
name|info
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"The PostingsSolrHighlighter is deprecated; use the UnifiedSolrHighlighter instead."
argument_list|)
expr_stmt|;
name|super
operator|.
name|init
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHighlighter
specifier|protected
name|UnifiedHighlighter
name|getHighlighter
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|)
block|{
comment|// Adjust the highlight parameters to match what the old PostingsHighlighter had.
name|ModifiableSolrParams
name|invariants
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|invariants
operator|.
name|set
argument_list|(
name|HighlightParams
operator|.
name|OFFSET_SOURCE
argument_list|,
literal|"POSTINGS"
argument_list|)
expr_stmt|;
name|invariants
operator|.
name|set
argument_list|(
name|HighlightParams
operator|.
name|FIELD_MATCH
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|invariants
operator|.
name|set
argument_list|(
name|HighlightParams
operator|.
name|USE_PHRASE_HIGHLIGHTER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|invariants
operator|.
name|set
argument_list|(
name|HighlightParams
operator|.
name|FRAGSIZE
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|ModifiableSolrParams
name|defaults
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|defaults
operator|.
name|set
argument_list|(
name|HighlightParams
operator|.
name|DEFAULT_SUMMARY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|defaults
operator|.
name|set
argument_list|(
name|HighlightParams
operator|.
name|TAG_ELLIPSIS
argument_list|,
literal|"... "
argument_list|)
expr_stmt|;
name|SolrParams
name|newParams
init|=
name|SolrParams
operator|.
name|wrapDefaults
argument_list|(
name|invariants
argument_list|,
comment|// this takes precedence
name|SolrParams
operator|.
name|wrapDefaults
argument_list|(
name|req
operator|.
name|getParams
argument_list|()
argument_list|,
comment|// then this (original)
name|defaults
comment|// finally our defaults
argument_list|)
argument_list|)
decl_stmt|;
try|try
init|(
name|LocalSolrQueryRequest
name|fakeReq
init|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
name|req
operator|.
name|getCore
argument_list|()
argument_list|,
name|newParams
argument_list|)
init|)
block|{
return|return
name|super
operator|.
name|getHighlighter
argument_list|(
name|fakeReq
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

