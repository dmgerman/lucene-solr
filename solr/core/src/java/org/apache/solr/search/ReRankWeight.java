begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.search
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Explanation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|FilterWeight
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Rescorer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Weight
import|;
end_import

begin_comment
comment|/**  * A {@code Weight} used by reranking queries.  */
end_comment

begin_class
DECL|class|ReRankWeight
specifier|public
class|class
name|ReRankWeight
extends|extends
name|FilterWeight
block|{
DECL|field|searcher
specifier|final
specifier|private
name|IndexSearcher
name|searcher
decl_stmt|;
DECL|field|reRankQueryRescorer
specifier|final
specifier|private
name|Rescorer
name|reRankQueryRescorer
decl_stmt|;
DECL|method|ReRankWeight
specifier|public
name|ReRankWeight
parameter_list|(
name|Query
name|mainQuery
parameter_list|,
name|Rescorer
name|reRankQueryRescorer
parameter_list|,
name|IndexSearcher
name|searcher
parameter_list|,
name|Weight
name|mainWeight
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|mainQuery
argument_list|,
name|mainWeight
argument_list|)
expr_stmt|;
name|this
operator|.
name|searcher
operator|=
name|searcher
expr_stmt|;
name|this
operator|.
name|reRankQueryRescorer
operator|=
name|reRankQueryRescorer
expr_stmt|;
block|}
DECL|method|explain
specifier|public
name|Explanation
name|explain
parameter_list|(
name|LeafReaderContext
name|context
parameter_list|,
name|int
name|doc
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|Explanation
name|mainExplain
init|=
name|in
operator|.
name|explain
argument_list|(
name|context
argument_list|,
name|doc
argument_list|)
decl_stmt|;
return|return
name|reRankQueryRescorer
operator|.
name|explain
argument_list|(
name|searcher
argument_list|,
name|mainExplain
argument_list|,
name|context
operator|.
name|docBase
operator|+
name|doc
argument_list|)
return|;
block|}
block|}
end_class

end_unit

