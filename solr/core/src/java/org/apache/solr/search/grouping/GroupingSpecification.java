begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.search.grouping
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|grouping
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Sort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|Grouping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|SortSpec
import|;
end_import

begin_comment
comment|/**  * Encapsulates the grouping options like fields group sort and more specified by clients.  *  * @lucene.experimental  */
end_comment

begin_class
DECL|class|GroupingSpecification
specifier|public
class|class
name|GroupingSpecification
block|{
DECL|field|fields
specifier|private
name|String
index|[]
name|fields
init|=
operator|new
name|String
index|[]
block|{}
decl_stmt|;
DECL|field|queries
specifier|private
name|String
index|[]
name|queries
init|=
operator|new
name|String
index|[]
block|{}
decl_stmt|;
DECL|field|functions
specifier|private
name|String
index|[]
name|functions
init|=
operator|new
name|String
index|[]
block|{}
decl_stmt|;
DECL|field|groupSortSpec
specifier|private
name|SortSpec
name|groupSortSpec
decl_stmt|;
DECL|field|withinGroupSortSpec
specifier|private
name|SortSpec
name|withinGroupSortSpec
decl_stmt|;
DECL|field|includeGroupCount
specifier|private
name|boolean
name|includeGroupCount
decl_stmt|;
DECL|field|main
specifier|private
name|boolean
name|main
decl_stmt|;
DECL|field|responseFormat
specifier|private
name|Grouping
operator|.
name|Format
name|responseFormat
decl_stmt|;
DECL|field|needScore
specifier|private
name|boolean
name|needScore
decl_stmt|;
DECL|field|truncateGroups
specifier|private
name|boolean
name|truncateGroups
decl_stmt|;
DECL|method|getFields
specifier|public
name|String
index|[]
name|getFields
parameter_list|()
block|{
return|return
name|fields
return|;
block|}
DECL|method|setFields
specifier|public
name|void
name|setFields
parameter_list|(
name|String
index|[]
name|fields
parameter_list|)
block|{
if|if
condition|(
name|fields
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|this
operator|.
name|fields
operator|=
name|fields
expr_stmt|;
block|}
DECL|method|getQueries
specifier|public
name|String
index|[]
name|getQueries
parameter_list|()
block|{
return|return
name|queries
return|;
block|}
DECL|method|setQueries
specifier|public
name|void
name|setQueries
parameter_list|(
name|String
index|[]
name|queries
parameter_list|)
block|{
if|if
condition|(
name|queries
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|this
operator|.
name|queries
operator|=
name|queries
expr_stmt|;
block|}
DECL|method|getFunctions
specifier|public
name|String
index|[]
name|getFunctions
parameter_list|()
block|{
return|return
name|functions
return|;
block|}
DECL|method|setFunctions
specifier|public
name|void
name|setFunctions
parameter_list|(
name|String
index|[]
name|functions
parameter_list|)
block|{
if|if
condition|(
name|functions
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|this
operator|.
name|functions
operator|=
name|functions
expr_stmt|;
block|}
annotation|@
name|Deprecated
DECL|method|getWithinGroupOffset
specifier|public
name|int
name|getWithinGroupOffset
parameter_list|()
block|{
return|return
name|withinGroupSortSpec
operator|.
name|getOffset
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getGroupOffset
specifier|public
name|int
name|getGroupOffset
parameter_list|()
block|{
return|return
name|getWithinGroupOffset
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getWithinGroupLimit
specifier|public
name|int
name|getWithinGroupLimit
parameter_list|()
block|{
return|return
name|withinGroupSortSpec
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getGroupLimit
specifier|public
name|int
name|getGroupLimit
parameter_list|()
block|{
return|return
name|getWithinGroupLimit
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getOffset
specifier|public
name|int
name|getOffset
parameter_list|()
block|{
return|return
name|groupSortSpec
operator|.
name|getOffset
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getLimit
specifier|public
name|int
name|getLimit
parameter_list|()
block|{
return|return
name|groupSortSpec
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getGroupSort
specifier|public
name|Sort
name|getGroupSort
parameter_list|()
block|{
return|return
name|groupSortSpec
operator|.
name|getSort
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
DECL|method|getSortWithinGroup
specifier|public
name|Sort
name|getSortWithinGroup
parameter_list|()
block|{
return|return
name|withinGroupSortSpec
operator|.
name|getSort
argument_list|()
return|;
block|}
DECL|method|isIncludeGroupCount
specifier|public
name|boolean
name|isIncludeGroupCount
parameter_list|()
block|{
return|return
name|includeGroupCount
return|;
block|}
DECL|method|setIncludeGroupCount
specifier|public
name|void
name|setIncludeGroupCount
parameter_list|(
name|boolean
name|includeGroupCount
parameter_list|)
block|{
name|this
operator|.
name|includeGroupCount
operator|=
name|includeGroupCount
expr_stmt|;
block|}
DECL|method|isMain
specifier|public
name|boolean
name|isMain
parameter_list|()
block|{
return|return
name|main
return|;
block|}
DECL|method|setMain
specifier|public
name|void
name|setMain
parameter_list|(
name|boolean
name|main
parameter_list|)
block|{
name|this
operator|.
name|main
operator|=
name|main
expr_stmt|;
block|}
DECL|method|getResponseFormat
specifier|public
name|Grouping
operator|.
name|Format
name|getResponseFormat
parameter_list|()
block|{
return|return
name|responseFormat
return|;
block|}
DECL|method|setResponseFormat
specifier|public
name|void
name|setResponseFormat
parameter_list|(
name|Grouping
operator|.
name|Format
name|responseFormat
parameter_list|)
block|{
name|this
operator|.
name|responseFormat
operator|=
name|responseFormat
expr_stmt|;
block|}
DECL|method|isNeedScore
specifier|public
name|boolean
name|isNeedScore
parameter_list|()
block|{
return|return
name|needScore
return|;
block|}
DECL|method|setNeedScore
specifier|public
name|void
name|setNeedScore
parameter_list|(
name|boolean
name|needScore
parameter_list|)
block|{
name|this
operator|.
name|needScore
operator|=
name|needScore
expr_stmt|;
block|}
DECL|method|isTruncateGroups
specifier|public
name|boolean
name|isTruncateGroups
parameter_list|()
block|{
return|return
name|truncateGroups
return|;
block|}
DECL|method|setTruncateGroups
specifier|public
name|void
name|setTruncateGroups
parameter_list|(
name|boolean
name|truncateGroups
parameter_list|)
block|{
name|this
operator|.
name|truncateGroups
operator|=
name|truncateGroups
expr_stmt|;
block|}
DECL|method|getGroupSortSpec
specifier|public
name|SortSpec
name|getGroupSortSpec
parameter_list|()
block|{
return|return
name|groupSortSpec
return|;
block|}
DECL|method|setGroupSortSpec
specifier|public
name|void
name|setGroupSortSpec
parameter_list|(
name|SortSpec
name|groupSortSpec
parameter_list|)
block|{
name|this
operator|.
name|groupSortSpec
operator|=
name|groupSortSpec
expr_stmt|;
block|}
DECL|method|getWithinGroupSortSpec
specifier|public
name|SortSpec
name|getWithinGroupSortSpec
parameter_list|()
block|{
return|return
name|withinGroupSortSpec
return|;
block|}
DECL|method|setWithinGroupSortSpec
specifier|public
name|void
name|setWithinGroupSortSpec
parameter_list|(
name|SortSpec
name|withinGroupSortSpec
parameter_list|)
block|{
name|this
operator|.
name|withinGroupSortSpec
operator|=
name|withinGroupSortSpec
expr_stmt|;
block|}
block|}
end_class

end_unit

