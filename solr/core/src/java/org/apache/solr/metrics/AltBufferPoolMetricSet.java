begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|BufferPoolMXBean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Gauge
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricSet
import|;
end_import

begin_comment
comment|/**  * This is an alternative implementation of {@link com.codahale.metrics.jvm.BufferPoolMetricSet} that  * doesn't need an MBean server.  */
end_comment

begin_class
DECL|class|AltBufferPoolMetricSet
specifier|public
class|class
name|AltBufferPoolMetricSet
implements|implements
name|MetricSet
block|{
annotation|@
name|Override
DECL|method|getMetrics
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|getMetrics
parameter_list|()
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|metrics
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|BufferPoolMXBean
argument_list|>
name|pools
init|=
name|ManagementFactory
operator|.
name|getPlatformMXBeans
argument_list|(
name|BufferPoolMXBean
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|BufferPoolMXBean
name|pool
range|:
name|pools
control|)
block|{
name|String
name|name
init|=
name|pool
operator|.
name|getName
argument_list|()
decl_stmt|;
name|metrics
operator|.
name|put
argument_list|(
name|name
operator|+
literal|".Count"
argument_list|,
call|(
name|Gauge
argument_list|<
name|Long
argument_list|>
call|)
argument_list|()
operator|->
name|pool
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|put
argument_list|(
name|name
operator|+
literal|".MemoryUsed"
argument_list|,
call|(
name|Gauge
argument_list|<
name|Long
argument_list|>
call|)
argument_list|()
operator|->
name|pool
operator|.
name|getMemoryUsed
argument_list|()
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|put
argument_list|(
name|name
operator|+
literal|".TotalCapacity"
argument_list|,
call|(
name|Gauge
argument_list|<
name|Long
argument_list|>
call|)
argument_list|()
operator|->
name|pool
operator|.
name|getTotalCapacity
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|metrics
return|;
block|}
block|}
end_class

end_unit

