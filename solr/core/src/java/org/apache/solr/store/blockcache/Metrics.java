begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.store.blockcache
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|store
operator|.
name|blockcache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|SimpleOrderedMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrInfoMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|SolrCacheBase
import|;
end_import

begin_comment
comment|/**  * A {@link SolrInfoMBean} that provides metrics on block cache operations.  *  * @lucene.experimental  */
end_comment

begin_class
DECL|class|Metrics
specifier|public
class|class
name|Metrics
extends|extends
name|SolrCacheBase
implements|implements
name|SolrInfoMBean
block|{
DECL|field|blockCacheSize
specifier|public
name|AtomicLong
name|blockCacheSize
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheHit
specifier|public
name|AtomicLong
name|blockCacheHit
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheMiss
specifier|public
name|AtomicLong
name|blockCacheMiss
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheEviction
specifier|public
name|AtomicLong
name|blockCacheEviction
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheStoreFail
specifier|public
name|AtomicLong
name|blockCacheStoreFail
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// since the last call
DECL|field|blockCacheHit_last
specifier|private
name|AtomicLong
name|blockCacheHit_last
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheMiss_last
specifier|private
name|AtomicLong
name|blockCacheMiss_last
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheEviction_last
specifier|private
name|AtomicLong
name|blockCacheEviction_last
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|blockCacheStoreFail_last
specifier|public
name|AtomicLong
name|blockCacheStoreFail_last
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// These are used by the BufferStore (just a generic cache of byte[]).
comment|// TODO: If this (the Store) is a good idea, we should make it more general and use it across more places in Solr.
DECL|field|shardBuffercacheAllocate
specifier|public
name|AtomicLong
name|shardBuffercacheAllocate
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|shardBuffercacheLost
specifier|public
name|AtomicLong
name|shardBuffercacheLost
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|previous
specifier|private
name|long
name|previous
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
DECL|method|getStatistics
specifier|public
name|NamedList
argument_list|<
name|Number
argument_list|>
name|getStatistics
parameter_list|()
block|{
name|NamedList
argument_list|<
name|Number
argument_list|>
name|stats
init|=
operator|new
name|SimpleOrderedMap
argument_list|<>
argument_list|(
literal|21
argument_list|)
decl_stmt|;
comment|// room for one method call before growing
name|long
name|now
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|long
name|delta
init|=
name|Math
operator|.
name|max
argument_list|(
name|now
operator|-
name|previous
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|double
name|seconds
init|=
name|delta
operator|/
literal|1000000000.0
decl_stmt|;
name|long
name|hits_total
init|=
name|blockCacheHit
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|hits_delta
init|=
name|hits_total
operator|-
name|blockCacheHit_last
operator|.
name|get
argument_list|()
decl_stmt|;
name|blockCacheHit_last
operator|.
name|set
argument_list|(
name|hits_total
argument_list|)
expr_stmt|;
name|long
name|miss_total
init|=
name|blockCacheMiss
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|miss_delta
init|=
name|miss_total
operator|-
name|blockCacheMiss_last
operator|.
name|get
argument_list|()
decl_stmt|;
name|blockCacheMiss_last
operator|.
name|set
argument_list|(
name|miss_total
argument_list|)
expr_stmt|;
name|long
name|evict_total
init|=
name|blockCacheEviction
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|evict_delta
init|=
name|evict_total
operator|-
name|blockCacheEviction_last
operator|.
name|get
argument_list|()
decl_stmt|;
name|blockCacheEviction_last
operator|.
name|set
argument_list|(
name|evict_total
argument_list|)
expr_stmt|;
name|long
name|storeFail_total
init|=
name|blockCacheStoreFail
operator|.
name|get
argument_list|()
decl_stmt|;
name|long
name|storeFail_delta
init|=
name|storeFail_total
operator|-
name|blockCacheStoreFail_last
operator|.
name|get
argument_list|()
decl_stmt|;
name|blockCacheStoreFail_last
operator|.
name|set
argument_list|(
name|storeFail_total
argument_list|)
expr_stmt|;
name|long
name|lookups_delta
init|=
name|hits_delta
operator|+
name|miss_delta
decl_stmt|;
name|long
name|lookups_total
init|=
name|hits_total
operator|+
name|miss_total
decl_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"size"
argument_list|,
name|blockCacheSize
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"lookups"
argument_list|,
name|lookups_total
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"hits"
argument_list|,
name|hits_total
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"evictions"
argument_list|,
name|evict_total
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"storeFails"
argument_list|,
name|storeFail_total
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"hitratio_current"
argument_list|,
name|calcHitRatio
argument_list|(
name|lookups_delta
argument_list|,
name|hits_delta
argument_list|)
argument_list|)
expr_stmt|;
comment|// hit ratio since the last call
name|stats
operator|.
name|add
argument_list|(
literal|"lookups_persec"
argument_list|,
name|getPerSecond
argument_list|(
name|lookups_delta
argument_list|,
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
comment|// lookups per second since the last call
name|stats
operator|.
name|add
argument_list|(
literal|"hits_persec"
argument_list|,
name|getPerSecond
argument_list|(
name|hits_delta
argument_list|,
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
comment|// hits per second since the last call
name|stats
operator|.
name|add
argument_list|(
literal|"evictions_persec"
argument_list|,
name|getPerSecond
argument_list|(
name|evict_delta
argument_list|,
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
comment|// evictions per second since the last call
name|stats
operator|.
name|add
argument_list|(
literal|"storeFails_persec"
argument_list|,
name|getPerSecond
argument_list|(
name|storeFail_delta
argument_list|,
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
comment|// evictions per second since the last call
name|stats
operator|.
name|add
argument_list|(
literal|"time_delta"
argument_list|,
name|seconds
argument_list|)
expr_stmt|;
comment|// seconds since last call
comment|// TODO: these aren't really related to the BlockCache
name|stats
operator|.
name|add
argument_list|(
literal|"buffercache.allocations"
argument_list|,
name|getPerSecond
argument_list|(
name|shardBuffercacheAllocate
operator|.
name|getAndSet
argument_list|(
literal|0
argument_list|)
argument_list|,
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|add
argument_list|(
literal|"buffercache.lost"
argument_list|,
name|getPerSecond
argument_list|(
name|shardBuffercacheLost
operator|.
name|getAndSet
argument_list|(
literal|0
argument_list|)
argument_list|,
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
name|previous
operator|=
name|now
expr_stmt|;
return|return
name|stats
return|;
block|}
DECL|method|getPerSecond
specifier|private
name|float
name|getPerSecond
parameter_list|(
name|long
name|value
parameter_list|,
name|double
name|seconds
parameter_list|)
block|{
return|return
call|(
name|float
call|)
argument_list|(
name|value
operator|/
name|seconds
argument_list|)
return|;
block|}
comment|// SolrInfoMBean methods
annotation|@
name|Override
DECL|method|getName
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"HdfsBlockCache"
return|;
block|}
annotation|@
name|Override
DECL|method|getDescription
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"Provides metrics for the HdfsDirectoryFactory BlockCache."
return|;
block|}
annotation|@
name|Override
DECL|method|getSource
specifier|public
name|String
name|getSource
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getDocs
specifier|public
name|URL
index|[]
name|getDocs
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

