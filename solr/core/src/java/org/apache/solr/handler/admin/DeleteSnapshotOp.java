begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CoreAdminParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import

begin_class
DECL|class|DeleteSnapshotOp
class|class
name|DeleteSnapshotOp
implements|implements
name|CoreAdminHandler
operator|.
name|CoreAdminOp
block|{
annotation|@
name|Override
DECL|method|execute
specifier|public
name|void
name|execute
parameter_list|(
name|CoreAdminHandler
operator|.
name|CallInfo
name|it
parameter_list|)
throws|throws
name|Exception
block|{
name|CoreContainer
name|cc
init|=
name|it
operator|.
name|handler
operator|.
name|getCoreContainer
argument_list|()
decl_stmt|;
specifier|final
name|SolrParams
name|params
init|=
name|it
operator|.
name|req
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|String
name|commitName
init|=
name|params
operator|.
name|required
argument_list|()
operator|.
name|get
argument_list|(
name|CoreAdminParams
operator|.
name|COMMIT_NAME
argument_list|)
decl_stmt|;
name|String
name|cname
init|=
name|params
operator|.
name|required
argument_list|()
operator|.
name|get
argument_list|(
name|CoreAdminParams
operator|.
name|CORE
argument_list|)
decl_stmt|;
name|SolrCore
name|core
init|=
name|cc
operator|.
name|getCore
argument_list|(
name|cname
argument_list|)
decl_stmt|;
if|if
condition|(
name|core
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|BAD_REQUEST
argument_list|,
literal|"Unable to locate core "
operator|+
name|cname
argument_list|)
throw|;
block|}
try|try
block|{
name|core
operator|.
name|deleteNamedSnapshot
argument_list|(
name|commitName
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|core
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

