begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|CollectionApiMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|CollectionApiMapping
operator|.
name|Meta
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|CollectionApiMapping
operator|.
name|V2EndPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CollectionsHandler
operator|.
name|CollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CollectionsHandler
operator|.
name|CollectionOperation
operator|.
name|*
import|;
end_import

begin_class
DECL|class|CollectionHandlerApi
specifier|public
class|class
name|CollectionHandlerApi
extends|extends
name|BaseHandlerApiSupport
block|{
DECL|field|handler
specifier|final
name|CollectionsHandler
name|handler
decl_stmt|;
DECL|method|CollectionHandlerApi
specifier|public
name|CollectionHandlerApi
parameter_list|(
name|CollectionsHandler
name|handler
parameter_list|)
block|{
name|this
operator|.
name|handler
operator|=
name|handler
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCommands
specifier|protected
name|List
argument_list|<
name|ApiCommand
argument_list|>
name|getCommands
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Cmd
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getEndPoints
specifier|protected
name|List
argument_list|<
name|V2EndPoint
argument_list|>
name|getEndPoints
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|CollectionApiMapping
operator|.
name|EndPoint
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
DECL|enum|Cmd
enum|enum
name|Cmd
implements|implements
name|ApiCommand
block|{
DECL|enum constant|GET_COLLECTIONS
name|GET_COLLECTIONS
parameter_list|(
name|Meta
operator|.
name|GET_COLLECTIONS
parameter_list|,
name|LIST_OP
parameter_list|)
operator|,
DECL|enum constant|GET_CLUSTER
constructor|GET_CLUSTER(Meta.GET_CLUSTER
operator|,
constructor|LIST_OP
block|)
enum|,
DECL|enum constant|GET_CLUSTER_OVERSEER
name|GET_CLUSTER_OVERSEER
parameter_list|(
name|Meta
operator|.
name|GET_CLUSTER_OVERSEER
parameter_list|,
name|OVERSEERSTATUS_OP
parameter_list|)
operator|,
DECL|enum constant|GET_CLUSTER_STATUS_CMD
constructor|GET_CLUSTER_STATUS_CMD(Meta.GET_CLUSTER_STATUS_CMD
operator|,
constructor|REQUESTSTATUS_OP
block|)
operator|,
DECL|enum constant|DELETE_CLUSTER_STATUS
name|DELETE_CLUSTER_STATUS
argument_list|(
name|Meta
operator|.
name|DELETE_CLUSTER_STATUS
argument_list|,
name|DELETESTATUS_OP
argument_list|)
operator|,
DECL|enum constant|GET_A_COLLECTION
name|GET_A_COLLECTION
argument_list|(
name|Meta
operator|.
name|GET_A_COLLECTION
argument_list|,
name|CLUSTERSTATUS_OP
argument_list|)
operator|,
DECL|enum constant|LIST_ALIASES
name|LIST_ALIASES
argument_list|(
name|Meta
operator|.
name|LIST_ALIASES
argument_list|,
name|LISTALIASES_OP
argument_list|)
operator|,
DECL|enum constant|CREATE_COLLECTION
name|CREATE_COLLECTION
argument_list|(
name|Meta
operator|.
name|CREATE_COLLECTION
argument_list|,
name|CREATE_OP
argument_list|)
operator|,
DECL|enum constant|DELETE_COLL
name|DELETE_COLL
argument_list|(
name|Meta
operator|.
name|DELETE_COLL
argument_list|,
name|DELETE_OP
argument_list|)
operator|,
DECL|enum constant|RELOAD_COLL
name|RELOAD_COLL
argument_list|(
name|Meta
operator|.
name|RELOAD_COLL
argument_list|,
name|RELOAD_OP
argument_list|)
operator|,
DECL|enum constant|MODIFYCOLLECTION
name|MODIFYCOLLECTION
argument_list|(
name|Meta
operator|.
name|MODIFYCOLLECTION
argument_list|,
name|MODIFYCOLLECTION_OP
argument_list|)
operator|,
DECL|enum constant|MIGRATE_DOCS
name|MIGRATE_DOCS
argument_list|(
name|Meta
operator|.
name|MIGRATE_DOCS
argument_list|,
name|MIGRATE_OP
argument_list|)
operator|,
DECL|enum constant|REBALANCELEADERS
name|REBALANCELEADERS
argument_list|(
name|Meta
operator|.
name|REBALANCELEADERS
argument_list|,
name|REBALANCELEADERS_OP
argument_list|)
operator|,
DECL|enum constant|CREATE_ALIAS
name|CREATE_ALIAS
argument_list|(
name|Meta
operator|.
name|CREATE_ALIAS
argument_list|,
name|CREATEALIAS_OP
argument_list|)
operator|,
DECL|enum constant|DELETE_ALIAS
name|DELETE_ALIAS
argument_list|(
name|Meta
operator|.
name|DELETE_ALIAS
argument_list|,
name|DELETEALIAS_OP
argument_list|)
operator|,
DECL|enum constant|CREATE_SHARD
name|CREATE_SHARD
argument_list|(
name|Meta
operator|.
name|CREATE_SHARD
argument_list|,
name|CREATESHARD_OP
argument_list|)
operator|,
DECL|enum constant|SPLIT_SHARD
name|SPLIT_SHARD
argument_list|(
name|Meta
operator|.
name|SPLIT_SHARD
argument_list|,
name|SPLITSHARD_OP
argument_list|)
operator|,
DECL|enum constant|DELETE_SHARD
name|DELETE_SHARD
argument_list|(
name|Meta
operator|.
name|DELETE_SHARD
argument_list|,
name|DELETESHARD_OP
argument_list|)
operator|,
DECL|enum constant|CREATE_REPLICA
name|CREATE_REPLICA
argument_list|(
name|Meta
operator|.
name|CREATE_REPLICA
argument_list|,
name|ADDREPLICA_OP
argument_list|)
operator|,
DECL|enum constant|DELETE_REPLICA
name|DELETE_REPLICA
argument_list|(
name|Meta
operator|.
name|DELETE_REPLICA
argument_list|,
name|DELETEREPLICA_OP
argument_list|)
operator|,
DECL|enum constant|SYNC_SHARD
name|SYNC_SHARD
argument_list|(
name|Meta
operator|.
name|SYNC_SHARD
argument_list|,
name|SYNCSHARD_OP
argument_list|)
operator|,
DECL|enum constant|ADDREPLICAPROP
name|ADDREPLICAPROP
argument_list|(
name|Meta
operator|.
name|ADDREPLICAPROP
argument_list|,
name|ADDREPLICAPROP_OP
argument_list|)
operator|,
DECL|enum constant|DELETEREPLICAPROP
name|DELETEREPLICAPROP
argument_list|(
name|Meta
operator|.
name|DELETEREPLICAPROP
argument_list|,
name|DELETEREPLICAPROP_OP
argument_list|)
operator|,
DECL|enum constant|ADDROLE
name|ADDROLE
argument_list|(
name|Meta
operator|.
name|ADDROLE
argument_list|,
name|ADDROLE_OP
argument_list|)
operator|,
DECL|enum constant|REMOVEROLE
name|REMOVEROLE
argument_list|(
name|Meta
operator|.
name|REMOVEROLE
argument_list|,
name|REMOVEROLE_OP
argument_list|)
operator|,
DECL|enum constant|CLUSTERPROP
name|CLUSTERPROP
argument_list|(
name|Meta
operator|.
name|CLUSTERPROP
argument_list|,
name|CLUSTERPROP_OP
argument_list|)
operator|,
DECL|enum constant|BACKUP
name|BACKUP
argument_list|(
name|Meta
operator|.
name|BACKUP
argument_list|,
name|BACKUP_OP
argument_list|)
operator|,
DECL|enum constant|RESTORE
name|RESTORE
argument_list|(
name|Meta
operator|.
name|RESTORE
argument_list|,
name|RESTORE_OP
argument_list|)
operator|,
DECL|method|GET_NODES
DECL|method|GET_NODES
name|GET_NODES
argument_list|(
name|Meta
operator|.
name|GET_NODES
argument_list|,
literal|null
argument_list|)
block|{       @
name|Override
specifier|public
name|void
name|invoke
argument_list|(
name|SolrQueryRequest
name|req
argument_list|,
name|SolrQueryResponse
name|rsp
argument_list|,
name|BaseHandlerApiSupport
name|apiHandler
argument_list|)
throws|throws
name|Exception
block|{
name|rsp
operator|.
name|add
argument_list|(
literal|"nodes"
argument_list|,
operator|(
operator|(
name|CollectionHandlerApi
operator|)
name|apiHandler
operator|)
operator|.
name|handler
operator|.
name|coreContainer
operator|.
name|getZkController
argument_list|()
operator|.
name|getClusterState
argument_list|()
operator|.
name|getLiveNodes
argument_list|()
argument_list|)
block|;       }
end_class

begin_expr_stmt
unit|},
DECL|enum constant|FORCELEADER
name|FORCELEADER
argument_list|(
name|Meta
operator|.
name|FORCELEADER
argument_list|,
name|FORCELEADER_OP
argument_list|)
operator|,
DECL|enum constant|SYNCSHARD
name|SYNCSHARD
argument_list|(
name|Meta
operator|.
name|SYNCSHARD
argument_list|,
name|SYNCSHARD_OP
argument_list|)
operator|,
DECL|enum constant|BALANCESHARDUNIQUE
name|BALANCESHARDUNIQUE
argument_list|(
name|Meta
operator|.
name|BALANCESHARDUNIQUE
argument_list|,
name|BALANCESHARDUNIQUE_OP
argument_list|)
expr_stmt|;
end_expr_stmt

begin_decl_stmt
DECL|field|meta
specifier|public
specifier|final
name|CollectionApiMapping
operator|.
name|CommandMeta
name|meta
decl_stmt|;
end_decl_stmt

begin_decl_stmt
DECL|field|target
specifier|public
specifier|final
name|CollectionOperation
name|target
decl_stmt|;
end_decl_stmt

begin_expr_stmt
DECL|method|Cmd
name|Cmd
argument_list|(
name|CollectionApiMapping
operator|.
name|CommandMeta
name|meta
argument_list|,
name|CollectionOperation
name|target
argument_list|)
block|{
name|this
operator|.
name|meta
operator|=
name|meta
block|;
name|this
operator|.
name|target
operator|=
name|target
block|;     }
expr|@
name|Override
DECL|method|meta
specifier|public
name|CollectionApiMapping
operator|.
name|CommandMeta
name|meta
argument_list|()
block|{
return|return
name|meta
return|;
block|}
end_expr_stmt

begin_function
DECL|method|invoke
specifier|public
name|void
name|invoke
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|,
name|BaseHandlerApiSupport
name|apiHandler
parameter_list|)
throws|throws
name|Exception
block|{
operator|(
operator|(
name|CollectionHandlerApi
operator|)
name|apiHandler
operator|)
operator|.
name|handler
operator|.
name|invokeAction
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|(
operator|(
name|CollectionHandlerApi
operator|)
name|apiHandler
operator|)
operator|.
name|handler
operator|.
name|coreContainer
argument_list|,
name|target
operator|.
name|action
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
end_function

unit|}  }
end_unit

