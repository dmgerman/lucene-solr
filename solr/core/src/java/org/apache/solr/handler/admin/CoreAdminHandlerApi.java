begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
operator|.
name|METHOD
operator|.
name|GET
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminHandlerApi
operator|.
name|EndPoint
operator|.
name|CORES_COMMANDS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminHandlerApi
operator|.
name|EndPoint
operator|.
name|CORES_STATUS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminHandlerApi
operator|.
name|EndPoint
operator|.
name|NODEAPIS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminHandlerApi
operator|.
name|EndPoint
operator|.
name|NODEINVOKE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminHandlerApi
operator|.
name|EndPoint
operator|.
name|PER_CORE_COMMANDS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|CREATE_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|FORCEPREPAREFORLEADERSHIP_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|INVOKE_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|MERGEINDEXES_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|OVERSEEROP_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|PREPRECOVERY_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|REJOINLEADERELECTION_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|RELOAD_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|RENAME_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|REQUESTAPPLYUPDATES_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|REQUESTBUFFERUPDATES_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|REQUESTRECOVERY_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|REQUESTSTATUS_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|REQUESTSYNCSHARD_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|SPLIT_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|STATUS_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|SWAP_OP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|CoreAdminOperation
operator|.
name|UNLOAD_OP
import|;
end_import

begin_class
DECL|class|CoreAdminHandlerApi
specifier|public
class|class
name|CoreAdminHandlerApi
extends|extends
name|BaseHandlerApiSupport
block|{
DECL|field|handler
specifier|private
specifier|final
name|CoreAdminHandler
name|handler
decl_stmt|;
DECL|method|CoreAdminHandlerApi
specifier|public
name|CoreAdminHandlerApi
parameter_list|(
name|CoreAdminHandler
name|handler
parameter_list|)
block|{
name|this
operator|.
name|handler
operator|=
name|handler
expr_stmt|;
block|}
DECL|enum|Cmd
enum|enum
name|Cmd
implements|implements
name|ApiCommand
block|{
DECL|enum constant|CREATE
name|CREATE
argument_list|(
name|CORES_COMMANDS
argument_list|,
name|POST
argument_list|,
name|CREATE_OP
argument_list|,
literal|null
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"config"
argument_list|,
literal|"configSet"
argument_list|)
argument_list|)
block|,
DECL|enum constant|UNLOAD
name|UNLOAD
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|UNLOAD_OP
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
block|,
DECL|enum constant|RELOAD
name|RELOAD
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|RELOAD_OP
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
block|,
DECL|enum constant|STATUS
name|STATUS
parameter_list|(
name|CORES_STATUS
parameter_list|,
name|GET
parameter_list|,
name|STATUS_OP
parameter_list|)
operator|,
DECL|enum constant|SWAP
constructor|SWAP(PER_CORE_COMMANDS
operator|,
constructor|POST
operator|,
constructor|SWAP_OP
operator|,
constructor|null
operator|,
constructor|ImmutableMap.of("other"
operator|,
constructor|"with"
block|)
block|)
operator|,
DECL|enum constant|RENAME
name|RENAME
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|RENAME_OP
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|MERGEINDEXES
name|MERGEINDEXES
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|MERGEINDEXES_OP
argument_list|,
literal|"merge-indexes"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|SPLIT
name|SPLIT
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|SPLIT_OP
argument_list|,
literal|null
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"split.key"
argument_list|,
literal|"splitKey"
argument_list|)
argument_list|)
operator|,
DECL|enum constant|PREPRECOVERY
name|PREPRECOVERY
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|PREPRECOVERY_OP
argument_list|,
literal|"prep-recovery"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|REQUESTRECOVERY
name|REQUESTRECOVERY
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|REQUESTRECOVERY_OP
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|REQUESTSYNCSHARD
name|REQUESTSYNCSHARD
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|REQUESTSYNCSHARD_OP
argument_list|,
literal|"request-sync-shard"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|REQUESTBUFFERUPDATES
name|REQUESTBUFFERUPDATES
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|REQUESTBUFFERUPDATES_OP
argument_list|,
literal|"request-buffer-updates"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|REQUESTAPPLYUPDATES
name|REQUESTAPPLYUPDATES
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|REQUESTAPPLYUPDATES_OP
argument_list|,
literal|"request-apply-updates"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|REQUESTSTATUS
name|REQUESTSTATUS
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|REQUESTSTATUS_OP
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|OVERSEEROP
name|OVERSEEROP
argument_list|(
name|NODEAPIS
argument_list|,
name|POST
argument_list|,
name|OVERSEEROP_OP
argument_list|,
literal|"overseer-op"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|REJOINLEADERELECTION
name|REJOINLEADERELECTION
argument_list|(
name|NODEAPIS
argument_list|,
name|POST
argument_list|,
name|REJOINLEADERELECTION_OP
argument_list|,
literal|"rejoin-leader-election"
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|INVOKE
name|INVOKE
argument_list|(
name|NODEINVOKE
argument_list|,
name|GET
argument_list|,
name|INVOKE_OP
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|,
DECL|enum constant|FORCEPREPAREFORLEADERSHIP
name|FORCEPREPAREFORLEADERSHIP
argument_list|(
name|PER_CORE_COMMANDS
argument_list|,
name|POST
argument_list|,
name|FORCEPREPAREFORLEADERSHIP_OP
argument_list|,
literal|"force-prepare-for-leadership"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
end_class

begin_decl_stmt
DECL|field|commandName
specifier|public
specifier|final
name|String
name|commandName
decl_stmt|;
end_decl_stmt

begin_decl_stmt
DECL|field|endPoint
specifier|public
specifier|final
name|BaseHandlerApiSupport
operator|.
name|V2EndPoint
name|endPoint
decl_stmt|;
end_decl_stmt

begin_decl_stmt
DECL|field|method
specifier|public
specifier|final
name|SolrRequest
operator|.
name|METHOD
name|method
decl_stmt|;
end_decl_stmt

begin_decl_stmt
DECL|field|paramstoAttr
specifier|public
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramstoAttr
decl_stmt|;
end_decl_stmt

begin_decl_stmt
DECL|field|target
specifier|final
name|CoreAdminOperation
name|target
decl_stmt|;
end_decl_stmt

begin_expr_stmt
DECL|method|Cmd
name|Cmd
argument_list|(
name|EndPoint
name|endPoint
argument_list|,
name|SolrRequest
operator|.
name|METHOD
name|method
argument_list|,
name|CoreAdminOperation
name|target
argument_list|)
block|{
name|this
operator|.
name|endPoint
operator|=
name|endPoint
block|;
name|this
operator|.
name|method
operator|=
name|method
block|;
name|this
operator|.
name|target
operator|=
name|target
block|;
name|commandName
operator|=
literal|null
block|;
name|paramstoAttr
operator|=
name|Collections
operator|.
name|EMPTY_MAP
block|;      }
DECL|method|Cmd
name|Cmd
argument_list|(
name|EndPoint
name|endPoint
argument_list|,
name|SolrRequest
operator|.
name|METHOD
name|method
argument_list|,
name|CoreAdminOperation
name|target
argument_list|,
name|String
name|commandName
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramstoAttr
argument_list|)
block|{
name|this
operator|.
name|commandName
operator|=
name|commandName
operator|==
literal|null
operator|?
name|target
operator|.
name|action
operator|.
name|toString
argument_list|()
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
operator|:
name|commandName
block|;
name|this
operator|.
name|endPoint
operator|=
name|endPoint
block|;
name|this
operator|.
name|method
operator|=
name|method
block|;
name|this
operator|.
name|target
operator|=
name|target
block|;
name|this
operator|.
name|paramstoAttr
operator|=
name|paramstoAttr
operator|==
literal|null
condition|?
name|Collections
operator|.
name|EMPTY_MAP
else|:
name|paramstoAttr
block|;     }
expr|@
name|Override
DECL|method|getName
specifier|public
name|String
name|getName
argument_list|()
block|{
return|return
name|commandName
return|;
block|}
end_expr_stmt

begin_function
annotation|@
name|Override
DECL|method|getHttpMethod
specifier|public
name|SolrRequest
operator|.
name|METHOD
name|getHttpMethod
parameter_list|()
block|{
return|return
name|method
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|getEndPoint
specifier|public
name|V2EndPoint
name|getEndPoint
parameter_list|()
block|{
return|return
name|endPoint
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|getParamSubstitute
specifier|public
name|String
name|getParamSubstitute
parameter_list|(
name|String
name|param
parameter_list|)
block|{
return|return
name|paramstoAttr
operator|.
name|containsKey
argument_list|(
name|param
argument_list|)
condition|?
name|paramstoAttr
operator|.
name|get
argument_list|(
name|param
argument_list|)
else|:
name|param
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|invoke
specifier|public
name|void
name|invoke
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|,
name|BaseHandlerApiSupport
name|apiHandler
parameter_list|)
throws|throws
name|Exception
block|{
name|target
operator|.
name|execute
argument_list|(
operator|new
name|CoreAdminHandler
operator|.
name|CallInfo
argument_list|(
operator|(
operator|(
name|CoreAdminHandlerApi
operator|)
name|apiHandler
operator|)
operator|.
name|handler
argument_list|,
name|req
argument_list|,
name|rsp
argument_list|,
name|target
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_expr_stmt
unit|}      enum
DECL|enum|EndPoint
name|EndPoint
expr|implements
name|BaseHandlerApiSupport
operator|.
name|V2EndPoint
block|{
DECL|enum constant|CORES_STATUS
name|CORES_STATUS
argument_list|(
literal|"cores.Status"
argument_list|)
block|,
DECL|enum constant|CORES_COMMANDS
name|CORES_COMMANDS
argument_list|(
literal|"cores.Commands"
argument_list|)
block|,
DECL|enum constant|PER_CORE_COMMANDS
name|PER_CORE_COMMANDS
argument_list|(
literal|"cores.core.Commands"
argument_list|)
block|,
DECL|enum constant|NODEINVOKE
name|NODEINVOKE
argument_list|(
literal|"node.invoke"
argument_list|)
block|,
DECL|enum constant|NODEAPIS
name|NODEAPIS
argument_list|(
literal|"node.Commands"
argument_list|)
block|;
DECL|field|specName
name|final
name|String
name|specName
block|;
DECL|method|EndPoint
name|EndPoint
argument_list|(
name|String
name|specName
argument_list|)
block|{
name|this
operator|.
name|specName
operator|=
name|specName
block|;     }
expr|@
name|Override
DECL|method|getSpecName
specifier|public
name|String
name|getSpecName
argument_list|()
block|{
return|return
name|specName
return|;
block|}
end_expr_stmt

begin_function
unit|}     @
name|Override
DECL|method|getCommands
specifier|protected
name|List
argument_list|<
name|ApiCommand
argument_list|>
name|getCommands
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Cmd
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|getEndPoints
specifier|protected
name|List
argument_list|<
name|V2EndPoint
argument_list|>
name|getEndPoints
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|EndPoint
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
end_function

unit|}
end_unit

