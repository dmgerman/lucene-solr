begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.api
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SpecProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ValidatingJsonMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|JsonSchemaValidator
import|;
end_import

begin_comment
comment|/** Every version 2 API must extend the this class. It's mostly like a request handler  * but it has extra methods to provide the json schema of the end point  *  */
end_comment

begin_class
DECL|class|Api
specifier|public
specifier|abstract
class|class
name|Api
implements|implements
name|SpecProvider
block|{
DECL|field|spec
specifier|protected
name|SpecProvider
name|spec
decl_stmt|;
DECL|field|commandSchema
specifier|protected
specifier|volatile
name|Map
argument_list|<
name|String
argument_list|,
name|JsonSchemaValidator
argument_list|>
name|commandSchema
decl_stmt|;
DECL|method|Api
specifier|protected
name|Api
parameter_list|(
name|SpecProvider
name|spec
parameter_list|)
block|{
name|this
operator|.
name|spec
operator|=
name|spec
expr_stmt|;
block|}
comment|/**This method helps to cache the schema validator object    */
DECL|method|getCommandSchema
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|JsonSchemaValidator
argument_list|>
name|getCommandSchema
parameter_list|()
block|{
if|if
condition|(
name|commandSchema
operator|==
literal|null
condition|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
if|if
condition|(
name|commandSchema
operator|==
literal|null
condition|)
block|{
name|ValidatingJsonMap
name|commands
init|=
name|getSpec
argument_list|()
operator|.
name|getMap
argument_list|(
literal|"commands"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|commandSchema
operator|=
name|commands
operator|!=
literal|null
condition|?
name|ImmutableMap
operator|.
name|copyOf
argument_list|(
name|ApiBag
operator|.
name|getParsedSchema
argument_list|(
name|commands
argument_list|)
argument_list|)
else|:
name|ImmutableMap
operator|.
name|of
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return
name|commandSchema
return|;
block|}
comment|/** The method that gets called for each request    */
DECL|method|call
specifier|public
specifier|abstract
name|void
name|call
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
function_decl|;
comment|/**Get the specification of the API as a Map    */
annotation|@
name|Override
DECL|method|getSpec
specifier|public
name|ValidatingJsonMap
name|getSpec
parameter_list|()
block|{
return|return
name|spec
operator|.
name|getSpec
argument_list|()
return|;
block|}
block|}
end_class

end_unit

