begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.index
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|DocValuesProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|BinaryDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|CodecReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DocValuesType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|FieldInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|FieldInfos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|FilterCodecReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NumericDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|OneMergeWrappingMergePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentCommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedNumericDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedSetDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrResourceLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|IndexSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|SchemaField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|uninverting
operator|.
name|UninvertingReader
import|;
end_import

begin_comment
comment|/**  * A merge policy that can detect schema changes and  write docvalues into merging segments when a field has docvalues enabled  * Using UninvertingReader.  *   * This merge policy will delegate to the wrapped merge policy for selecting merge segments  *   */
end_comment

begin_class
DECL|class|UninvertDocValuesMergePolicyFactory
specifier|public
class|class
name|UninvertDocValuesMergePolicyFactory
extends|extends
name|WrapperMergePolicyFactory
block|{
DECL|field|skipIntegrityCheck
specifier|final
specifier|private
name|boolean
name|skipIntegrityCheck
decl_stmt|;
comment|/**    * Whether or not the wrapped docValues producer should check consistency     */
DECL|method|getSkipIntegrityCheck
specifier|public
name|boolean
name|getSkipIntegrityCheck
parameter_list|()
block|{
return|return
name|skipIntegrityCheck
return|;
block|}
DECL|method|UninvertDocValuesMergePolicyFactory
specifier|public
name|UninvertDocValuesMergePolicyFactory
parameter_list|(
name|SolrResourceLoader
name|resourceLoader
parameter_list|,
name|MergePolicyFactoryArgs
name|args
parameter_list|,
name|IndexSchema
name|schema
parameter_list|)
block|{
name|super
argument_list|(
name|resourceLoader
argument_list|,
name|args
argument_list|,
name|schema
argument_list|)
expr_stmt|;
specifier|final
name|Boolean
name|sic
init|=
operator|(
name|Boolean
operator|)
name|args
operator|.
name|remove
argument_list|(
literal|"skipIntegrityCheck"
argument_list|)
decl_stmt|;
if|if
condition|(
name|sic
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|skipIntegrityCheck
operator|=
name|sic
operator|.
name|booleanValue
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|skipIntegrityCheck
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|args
operator|.
name|keys
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Arguments were "
operator|+
name|args
operator|+
literal|" but "
operator|+
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|" takes no arguments."
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getMergePolicyInstance
specifier|protected
name|MergePolicy
name|getMergePolicyInstance
parameter_list|(
name|MergePolicy
name|wrappedMP
parameter_list|)
block|{
return|return
operator|new
name|OneMergeWrappingMergePolicy
argument_list|(
name|wrappedMP
argument_list|,
parameter_list|(
name|merge
parameter_list|)
lambda|->
operator|new
name|UninvertDocValuesOneMerge
argument_list|(
name|merge
operator|.
name|segments
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getUninversionType
specifier|private
name|UninvertingReader
operator|.
name|Type
name|getUninversionType
parameter_list|(
name|FieldInfo
name|fi
parameter_list|)
block|{
name|SchemaField
name|sf
init|=
name|schema
operator|.
name|getFieldOrNull
argument_list|(
name|fi
operator|.
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|sf
operator|&&
name|sf
operator|.
name|hasDocValues
argument_list|()
operator|&&
name|fi
operator|.
name|getDocValuesType
argument_list|()
operator|==
name|DocValuesType
operator|.
name|NONE
operator|&&
name|fi
operator|.
name|getIndexOptions
argument_list|()
operator|!=
name|IndexOptions
operator|.
name|NONE
condition|)
block|{
return|return
name|sf
operator|.
name|getType
argument_list|()
operator|.
name|getUninversionType
argument_list|(
name|sf
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|class|UninvertDocValuesOneMerge
specifier|private
class|class
name|UninvertDocValuesOneMerge
extends|extends
name|MergePolicy
operator|.
name|OneMerge
block|{
DECL|method|UninvertDocValuesOneMerge
specifier|public
name|UninvertDocValuesOneMerge
parameter_list|(
name|List
argument_list|<
name|SegmentCommitInfo
argument_list|>
name|segments
parameter_list|)
block|{
name|super
argument_list|(
name|segments
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|wrapForMerge
specifier|public
name|CodecReader
name|wrapForMerge
parameter_list|(
name|CodecReader
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Wrap the reader with an uninverting reader if any of the fields have no docvalues but the
comment|// Schema says there should be
name|Map
argument_list|<
name|String
argument_list|,
name|UninvertingReader
operator|.
name|Type
argument_list|>
name|uninversionMap
init|=
literal|null
decl_stmt|;
for|for
control|(
name|FieldInfo
name|fi
range|:
name|reader
operator|.
name|getFieldInfos
argument_list|()
control|)
block|{
specifier|final
name|UninvertingReader
operator|.
name|Type
name|type
init|=
name|getUninversionType
argument_list|(
name|fi
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|uninversionMap
operator|==
literal|null
condition|)
block|{
name|uninversionMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|uninversionMap
operator|.
name|put
argument_list|(
name|fi
operator|.
name|name
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|uninversionMap
operator|==
literal|null
condition|)
block|{
return|return
name|reader
return|;
comment|// Default to normal reader if nothing to uninvert
block|}
else|else
block|{
return|return
operator|new
name|UninvertingFilterCodecReader
argument_list|(
name|reader
argument_list|,
name|uninversionMap
argument_list|)
return|;
block|}
block|}
block|}
comment|/**    * Delegates to an Uninverting for fields with docvalues    *     * This is going to blow up FieldCache, look into an alternative implementation that uninverts without    * fieldcache    */
DECL|class|UninvertingFilterCodecReader
specifier|private
class|class
name|UninvertingFilterCodecReader
extends|extends
name|FilterCodecReader
block|{
DECL|field|uninvertingReader
specifier|private
specifier|final
name|UninvertingReader
name|uninvertingReader
decl_stmt|;
DECL|field|docValuesProducer
specifier|private
specifier|final
name|DocValuesProducer
name|docValuesProducer
decl_stmt|;
DECL|method|UninvertingFilterCodecReader
specifier|public
name|UninvertingFilterCodecReader
parameter_list|(
name|CodecReader
name|in
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|UninvertingReader
operator|.
name|Type
argument_list|>
name|uninversionMap
parameter_list|)
block|{
name|super
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|uninvertingReader
operator|=
operator|new
name|UninvertingReader
argument_list|(
name|in
argument_list|,
name|uninversionMap
argument_list|)
expr_stmt|;
name|this
operator|.
name|docValuesProducer
operator|=
operator|new
name|DocValuesProducer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|NumericDocValues
name|getNumeric
parameter_list|(
name|FieldInfo
name|field
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|uninvertingReader
operator|.
name|getNumericDocValues
argument_list|(
name|field
operator|.
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|BinaryDocValues
name|getBinary
parameter_list|(
name|FieldInfo
name|field
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|uninvertingReader
operator|.
name|getBinaryDocValues
argument_list|(
name|field
operator|.
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SortedDocValues
name|getSorted
parameter_list|(
name|FieldInfo
name|field
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|uninvertingReader
operator|.
name|getSortedDocValues
argument_list|(
name|field
operator|.
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SortedNumericDocValues
name|getSortedNumeric
parameter_list|(
name|FieldInfo
name|field
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|uninvertingReader
operator|.
name|getSortedNumericDocValues
argument_list|(
name|field
operator|.
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SortedSetDocValues
name|getSortedSet
parameter_list|(
name|FieldInfo
name|field
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|uninvertingReader
operator|.
name|getSortedSetDocValues
argument_list|(
name|field
operator|.
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkIntegrity
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|skipIntegrityCheck
condition|)
block|{
name|uninvertingReader
operator|.
name|checkIntegrity
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{         }
annotation|@
name|Override
specifier|public
name|long
name|ramBytesUsed
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
block|}
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doClose
specifier|protected
name|void
name|doClose
parameter_list|()
throws|throws
name|IOException
block|{
name|docValuesProducer
operator|.
name|close
argument_list|()
expr_stmt|;
name|uninvertingReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|doClose
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDocValuesReader
specifier|public
name|DocValuesProducer
name|getDocValuesReader
parameter_list|()
block|{
return|return
name|docValuesProducer
return|;
block|}
annotation|@
name|Override
DECL|method|getFieldInfos
specifier|public
name|FieldInfos
name|getFieldInfos
parameter_list|()
block|{
return|return
name|uninvertingReader
operator|.
name|getFieldInfos
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCoreCacheHelper
specifier|public
name|CacheHelper
name|getCoreCacheHelper
parameter_list|()
block|{
return|return
name|in
operator|.
name|getCoreCacheHelper
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getReaderCacheHelper
specifier|public
name|CacheHelper
name|getReaderCacheHelper
parameter_list|()
block|{
return|return
name|in
operator|.
name|getReaderCacheHelper
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

