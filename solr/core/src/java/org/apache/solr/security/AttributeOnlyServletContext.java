begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.security
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EventListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterRegistration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|RequestDispatcher
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Servlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRegistration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|SessionCookieConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|SessionTrackingMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterRegistration
operator|.
name|Dynamic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|descriptor
operator|.
name|JspConfigDescriptor
import|;
end_import

begin_comment
comment|/**  * A concrete implementation of {@linkplain ServletContext} which support only attributes.  */
end_comment

begin_class
DECL|class|AttributeOnlyServletContext
class|class
name|AttributeOnlyServletContext
implements|implements
name|ServletContext
block|{
DECL|field|attributes
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|attributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|setSessionTrackingModes
specifier|public
name|void
name|setSessionTrackingModes
parameter_list|(
name|Set
argument_list|<
name|SessionTrackingMode
argument_list|>
name|sessionTrackingModes
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|setInitParameter
specifier|public
name|boolean
name|setInitParameter
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|setAttribute
specifier|public
name|void
name|setAttribute
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|attributes
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeAttribute
specifier|public
name|void
name|removeAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|attributes
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|log
specifier|public
name|void
name|log
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|log
specifier|public
name|void
name|log
parameter_list|(
name|Exception
name|exception
parameter_list|,
name|String
name|msg
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|log
specifier|public
name|void
name|log
parameter_list|(
name|String
name|msg
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|getVirtualServerName
specifier|public
name|String
name|getVirtualServerName
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getSessionCookieConfig
specifier|public
name|SessionCookieConfig
name|getSessionCookieConfig
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServlets
specifier|public
name|Enumeration
argument_list|<
name|Servlet
argument_list|>
name|getServlets
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServletRegistrations
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|?
extends|extends
name|ServletRegistration
argument_list|>
name|getServletRegistrations
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServletRegistration
specifier|public
name|ServletRegistration
name|getServletRegistration
parameter_list|(
name|String
name|servletName
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServletNames
specifier|public
name|Enumeration
argument_list|<
name|String
argument_list|>
name|getServletNames
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServletContextName
specifier|public
name|String
name|getServletContextName
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServlet
specifier|public
name|Servlet
name|getServlet
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|ServletException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServerInfo
specifier|public
name|String
name|getServerInfo
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResourcePaths
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getResourcePaths
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceAsStream
specifier|public
name|InputStream
name|getResourceAsStream
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResource
specifier|public
name|URL
name|getResource
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|MalformedURLException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getRequestDispatcher
specifier|public
name|RequestDispatcher
name|getRequestDispatcher
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getRealPath
specifier|public
name|String
name|getRealPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getNamedDispatcher
specifier|public
name|RequestDispatcher
name|getNamedDispatcher
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getMinorVersion
specifier|public
name|int
name|getMinorVersion
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getMimeType
specifier|public
name|String
name|getMimeType
parameter_list|(
name|String
name|file
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getMajorVersion
specifier|public
name|int
name|getMajorVersion
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getJspConfigDescriptor
specifier|public
name|JspConfigDescriptor
name|getJspConfigDescriptor
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getInitParameterNames
specifier|public
name|Enumeration
argument_list|<
name|String
argument_list|>
name|getInitParameterNames
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getInitParameter
specifier|public
name|String
name|getInitParameter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getFilterRegistrations
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|?
extends|extends
name|FilterRegistration
argument_list|>
name|getFilterRegistrations
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getFilterRegistration
specifier|public
name|FilterRegistration
name|getFilterRegistration
parameter_list|(
name|String
name|filterName
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getEffectiveSessionTrackingModes
specifier|public
name|Set
argument_list|<
name|SessionTrackingMode
argument_list|>
name|getEffectiveSessionTrackingModes
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getEffectiveMinorVersion
specifier|public
name|int
name|getEffectiveMinorVersion
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getEffectiveMajorVersion
specifier|public
name|int
name|getEffectiveMajorVersion
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getDefaultSessionTrackingModes
specifier|public
name|Set
argument_list|<
name|SessionTrackingMode
argument_list|>
name|getDefaultSessionTrackingModes
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getContextPath
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getContext
specifier|public
name|ServletContext
name|getContext
parameter_list|(
name|String
name|uripath
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getClassLoader
specifier|public
name|ClassLoader
name|getClassLoader
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeNames
specifier|public
name|Enumeration
argument_list|<
name|String
argument_list|>
name|getAttributeNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|enumeration
argument_list|(
name|attributes
operator|.
name|keySet
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttribute
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|attributes
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|declareRoles
specifier|public
name|void
name|declareRoles
parameter_list|(
name|String
modifier|...
name|roleNames
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|createServlet
specifier|public
parameter_list|<
name|T
extends|extends
name|Servlet
parameter_list|>
name|T
name|createServlet
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|ServletException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createListener
specifier|public
parameter_list|<
name|T
extends|extends
name|EventListener
parameter_list|>
name|T
name|createListener
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|ServletException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createFilter
specifier|public
parameter_list|<
name|T
extends|extends
name|Filter
parameter_list|>
name|T
name|createFilter
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|ServletException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|addServlet
specifier|public
name|javax
operator|.
name|servlet
operator|.
name|ServletRegistration
operator|.
name|Dynamic
name|addServlet
parameter_list|(
name|String
name|servletName
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Servlet
argument_list|>
name|servletClass
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|addServlet
specifier|public
name|javax
operator|.
name|servlet
operator|.
name|ServletRegistration
operator|.
name|Dynamic
name|addServlet
parameter_list|(
name|String
name|servletName
parameter_list|,
name|Servlet
name|servlet
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|addServlet
specifier|public
name|javax
operator|.
name|servlet
operator|.
name|ServletRegistration
operator|.
name|Dynamic
name|addServlet
parameter_list|(
name|String
name|servletName
parameter_list|,
name|String
name|className
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|addListener
specifier|public
name|void
name|addListener
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|EventListener
argument_list|>
name|listenerClass
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|addListener
specifier|public
parameter_list|<
name|T
extends|extends
name|EventListener
parameter_list|>
name|void
name|addListener
parameter_list|(
name|T
name|t
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|addListener
specifier|public
name|void
name|addListener
parameter_list|(
name|String
name|className
parameter_list|)
block|{}
annotation|@
name|Override
DECL|method|addFilter
specifier|public
name|Dynamic
name|addFilter
parameter_list|(
name|String
name|filterName
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Filter
argument_list|>
name|filterClass
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|addFilter
specifier|public
name|Dynamic
name|addFilter
parameter_list|(
name|String
name|filterName
parameter_list|,
name|Filter
name|filter
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|addFilter
specifier|public
name|Dynamic
name|addFilter
parameter_list|(
name|String
name|filterName
parameter_list|,
name|String
name|className
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

