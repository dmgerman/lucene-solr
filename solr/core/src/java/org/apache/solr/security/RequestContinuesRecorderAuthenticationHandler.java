begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.security
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationToken
import|;
end_import

begin_comment
comment|/*  * {@link AuthenticationHandler} that delegates to another {@link AuthenticationHandler}  * and records the response of managementOperation (which indicates whether the request  * should continue or not).  */
end_comment

begin_class
DECL|class|RequestContinuesRecorderAuthenticationHandler
specifier|public
class|class
name|RequestContinuesRecorderAuthenticationHandler
implements|implements
name|AuthenticationHandler
block|{
comment|// filled in by Plugin/Filter
DECL|field|REQUEST_CONTINUES_ATTR
specifier|static
specifier|final
name|String
name|REQUEST_CONTINUES_ATTR
init|=
literal|"org.apache.solr.security.authentication.requestcontinues"
decl_stmt|;
DECL|field|authHandler
specifier|private
name|AuthenticationHandler
name|authHandler
decl_stmt|;
DECL|method|setAuthHandler
specifier|public
name|void
name|setAuthHandler
parameter_list|(
name|AuthenticationHandler
name|authHandler
parameter_list|)
block|{
name|this
operator|.
name|authHandler
operator|=
name|authHandler
expr_stmt|;
block|}
DECL|method|getType
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|authHandler
operator|.
name|getType
argument_list|()
return|;
block|}
DECL|method|init
specifier|public
name|void
name|init
parameter_list|(
name|Properties
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
comment|// authHandler has already been init'ed, nothing to do here
block|}
DECL|method|destroy
specifier|public
name|void
name|destroy
parameter_list|()
block|{
name|authHandler
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
DECL|method|managementOperation
specifier|public
name|boolean
name|managementOperation
parameter_list|(
name|AuthenticationToken
name|token
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|AuthenticationException
block|{
name|boolean
name|result
init|=
name|authHandler
operator|.
name|managementOperation
argument_list|(
name|token
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
decl_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
name|RequestContinuesRecorderAuthenticationHandler
operator|.
name|REQUEST_CONTINUES_ATTR
argument_list|,
operator|new
name|Boolean
argument_list|(
name|result
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|authenticate
specifier|public
name|AuthenticationToken
name|authenticate
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|AuthenticationException
block|{
return|return
name|authHandler
operator|.
name|authenticate
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
return|;
block|}
block|}
end_class

end_unit

