begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.util.configuration
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|invoke
operator|.
name|MethodHandles
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Dedicated object to handle Solr configurations  */
end_comment

begin_class
DECL|class|SSLConfigurations
specifier|public
class|class
name|SSLConfigurations
block|{
DECL|field|envVars
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|envVars
decl_stmt|;
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MethodHandles
operator|.
name|lookup
argument_list|()
operator|.
name|lookupClass
argument_list|()
argument_list|)
decl_stmt|;
DECL|class|SysProps
specifier|public
specifier|static
class|class
name|SysProps
block|{
DECL|field|SSL_KEY_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SSL_KEY_STORE_PASSWORD
init|=
literal|"javax.net.ssl.keyStorePassword"
decl_stmt|;
DECL|field|SSL_TRUST_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SSL_TRUST_STORE_PASSWORD
init|=
literal|"javax.net.ssl.trustStorePassword"
decl_stmt|;
block|}
DECL|class|EnvVars
specifier|public
specifier|static
class|class
name|EnvVars
block|{
DECL|field|SOLR_SSL_CLIENT_KEY_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_SSL_CLIENT_KEY_STORE_PASSWORD
init|=
literal|"SOLR_SSL_CLIENT_KEY_STORE_PASSWORD"
decl_stmt|;
DECL|field|SOLR_SSL_KEY_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_SSL_KEY_STORE_PASSWORD
init|=
literal|"SOLR_SSL_KEY_STORE_PASSWORD"
decl_stmt|;
DECL|field|SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD
init|=
literal|"SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD"
decl_stmt|;
DECL|field|SOLR_SSL_TRUST_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_SSL_TRUST_STORE_PASSWORD
init|=
literal|"SOLR_SSL_TRUST_STORE_PASSWORD"
decl_stmt|;
block|}
comment|/**    * @param envVars Map of environment variables to use    */
DECL|method|SSLConfigurations
specifier|public
name|SSLConfigurations
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|envVars
parameter_list|)
block|{
name|this
operator|.
name|envVars
operator|=
name|envVars
expr_stmt|;
block|}
comment|/** Initiates javax.net.ssl.* system properties from the proper sources. */
DECL|method|init
specifier|public
name|void
name|init
parameter_list|()
block|{
name|String
name|clientKeystorePassword
init|=
name|envVars
operator|.
name|get
argument_list|(
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_KEY_STORE_PASSWORD
argument_list|)
decl_stmt|;
name|String
name|keystorePassword
init|=
name|envVars
operator|.
name|get
argument_list|(
name|EnvVars
operator|.
name|SOLR_SSL_KEY_STORE_PASSWORD
argument_list|)
decl_stmt|;
name|String
name|clientTruststorePassword
init|=
name|envVars
operator|.
name|get
argument_list|(
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD
argument_list|)
decl_stmt|;
name|String
name|truststorePassword
init|=
name|envVars
operator|.
name|get
argument_list|(
name|EnvVars
operator|.
name|SOLR_SSL_TRUST_STORE_PASSWORD
argument_list|)
decl_stmt|;
if|if
condition|(
name|isEmpty
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SysProps
operator|.
name|SSL_KEY_STORE_PASSWORD
argument_list|)
argument_list|)
operator|&&
operator|!
operator|(
name|isEmpty
argument_list|(
name|clientKeystorePassword
argument_list|)
operator|&&
name|isEmpty
argument_list|(
name|keystorePassword
argument_list|)
operator|)
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Setting {} based on env var"
argument_list|,
name|SysProps
operator|.
name|SSL_KEY_STORE_PASSWORD
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|SysProps
operator|.
name|SSL_KEY_STORE_PASSWORD
argument_list|,
name|clientKeystorePassword
operator|!=
literal|null
condition|?
name|clientKeystorePassword
else|:
name|keystorePassword
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isEmpty
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SysProps
operator|.
name|SSL_TRUST_STORE_PASSWORD
argument_list|)
argument_list|)
operator|&&
operator|!
operator|(
name|isEmpty
argument_list|(
name|clientTruststorePassword
argument_list|)
operator|&&
name|isEmpty
argument_list|(
name|truststorePassword
argument_list|)
operator|)
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Setting {} based on env var"
argument_list|,
name|SysProps
operator|.
name|SSL_TRUST_STORE_PASSWORD
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|SysProps
operator|.
name|SSL_TRUST_STORE_PASSWORD
argument_list|,
name|clientTruststorePassword
operator|!=
literal|null
condition|?
name|clientTruststorePassword
else|:
name|truststorePassword
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|isEmpty
specifier|private
name|boolean
name|isEmpty
parameter_list|(
name|String
name|str
parameter_list|)
block|{
return|return
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|str
argument_list|)
return|;
block|}
block|}
end_class

end_unit

