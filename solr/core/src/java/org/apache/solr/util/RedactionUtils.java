begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_class
DECL|class|RedactionUtils
specifier|public
class|class
name|RedactionUtils
block|{
DECL|field|SOLR_REDACTION_SYSTEM_PATTERN_PROP
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_REDACTION_SYSTEM_PATTERN_PROP
init|=
literal|"solr.redaction.system.pattern"
decl_stmt|;
DECL|field|pattern
specifier|private
specifier|static
name|Pattern
name|pattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SOLR_REDACTION_SYSTEM_PATTERN_PROP
argument_list|,
literal|".*password.*"
argument_list|)
argument_list|,
name|Pattern
operator|.
name|CASE_INSENSITIVE
argument_list|)
decl_stmt|;
DECL|field|REDACT_STRING
specifier|private
specifier|static
specifier|final
name|String
name|REDACT_STRING
init|=
literal|"--REDACTED--"
decl_stmt|;
DECL|field|redactSystemProperty
specifier|private
specifier|static
name|boolean
name|redactSystemProperty
init|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"solr.redaction.system.enabled"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Returns if the given system property should be redacted.    *    * @param name The system property that is being checked.    * @return true if property should be redacted.    */
DECL|method|isSystemPropertySensitive
specifier|static
specifier|public
name|boolean
name|isSystemPropertySensitive
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|redactSystemProperty
operator|&&
name|pattern
operator|.
name|matcher
argument_list|(
name|name
argument_list|)
operator|.
name|matches
argument_list|()
return|;
block|}
comment|/**    * @return redaction string to be used instead of the value.    */
DECL|method|getRedactString
specifier|static
specifier|public
name|String
name|getRedactString
parameter_list|()
block|{
return|return
name|REDACT_STRING
return|;
block|}
DECL|method|setRedactSystemProperty
specifier|public
specifier|static
name|void
name|setRedactSystemProperty
parameter_list|(
name|boolean
name|redactSystemProperty
parameter_list|)
block|{
name|RedactionUtils
operator|.
name|redactSystemProperty
operator|=
name|redactSystemProperty
expr_stmt|;
block|}
block|}
end_class

end_unit

