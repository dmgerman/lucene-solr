begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.cloud.autoscaling
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|autoscaling
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CloudSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|CollectionAdminRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|V2Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|CollectionAdminResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|SolrCloudTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|ZkNodeProps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStreamBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|ZkStateReader
operator|.
name|SOLR_AUTOSCALING_CONF_PATH
import|;
end_import

begin_comment
comment|/**  * Test for AutoScalingHandler  */
end_comment

begin_class
DECL|class|AutoScalingHandlerTest
specifier|public
class|class
name|AutoScalingHandlerTest
extends|extends
name|SolrCloudTestCase
block|{
annotation|@
name|BeforeClass
DECL|method|setupCluster
specifier|public
specifier|static
name|void
name|setupCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|configureCluster
argument_list|(
literal|2
argument_list|)
operator|.
name|addConfig
argument_list|(
literal|"conf"
argument_list|,
name|configset
argument_list|(
literal|"cloud-minimal"
argument_list|)
argument_list|)
operator|.
name|configure
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|beforeTest
specifier|public
name|void
name|beforeTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|// clear any persisted auto scaling configuration
name|zkClient
argument_list|()
operator|.
name|setData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
name|Utils
operator|.
name|toJSON
argument_list|(
operator|new
name|ZkNodeProps
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolicyAndPreferences
specifier|public
name|void
name|testPolicyAndPreferences
parameter_list|()
throws|throws
name|Exception
block|{
name|CloudSolrClient
name|solrClient
init|=
name|cluster
operator|.
name|getSolrClient
argument_list|()
decl_stmt|;
comment|// add multiple policies
name|String
name|setPolicyCommand
init|=
literal|"{'set-policy': {"
operator|+
literal|"    'xyz':["
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'},"
operator|+
literal|"      {'nodeRole':'!overseer', 'replica':0}"
operator|+
literal|"    ],"
operator|+
literal|"    'policy1':["
operator|+
literal|"      {'cores':'<2', 'node':'#ANY'},"
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'}"
operator|+
literal|"    ]"
operator|+
literal|"}}"
decl_stmt|;
name|SolrRequest
name|req
init|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPolicyCommand
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
init|=
literal|null
decl_stmt|;
try|try
block|{
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Adding a policy with 'cores' attribute should not have succeeded."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrServerException
name|e
parameter_list|)
block|{
comment|// todo one of these catch blocks should not be needed after SOLR-10768
if|if
condition|(
name|e
operator|.
name|getRootCause
argument_list|()
operator|instanceof
name|HttpSolrClient
operator|.
name|RemoteSolrException
condition|)
block|{
name|HttpSolrClient
operator|.
name|RemoteSolrException
name|rootCause
init|=
operator|(
name|HttpSolrClient
operator|.
name|RemoteSolrException
operator|)
name|e
operator|.
name|getRootCause
argument_list|()
decl_stmt|;
comment|// expected
name|assertTrue
argument_list|(
name|rootCause
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"cores is only allowed in 'cluster-policy'"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
name|e
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|HttpSolrClient
operator|.
name|RemoteSolrException
name|e
parameter_list|)
block|{
comment|// expected
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"cores is only allowed in 'cluster-policy'"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
name|setPolicyCommand
operator|=
literal|"{'set-policy': {"
operator|+
literal|"    'xyz':["
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'},"
operator|+
literal|"      {'nodeRole':'!overseer', 'replica':0}"
operator|+
literal|"    ],"
operator|+
literal|"    'policy1':["
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'}"
operator|+
literal|"    ]"
operator|+
literal|"}}"
expr_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPolicyCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data
init|=
name|zkClient
argument_list|()
operator|.
name|getData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ZkNodeProps
name|loaded
init|=
name|ZkNodeProps
operator|.
name|load
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|policies
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|loaded
operator|.
name|get
argument_list|(
literal|"policies"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|policies
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|policies
operator|.
name|get
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|policies
operator|.
name|get
argument_list|(
literal|"policy1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// update default policy
name|setPolicyCommand
operator|=
literal|"{'set-policy': {"
operator|+
literal|"    'xyz':["
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'}"
operator|+
literal|"    ]"
operator|+
literal|"}}"
expr_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPolicyCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|data
operator|=
name|zkClient
argument_list|()
operator|.
name|getData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loaded
operator|=
name|ZkNodeProps
operator|.
name|load
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|policies
operator|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|loaded
operator|.
name|get
argument_list|(
literal|"policies"
argument_list|)
expr_stmt|;
name|List
name|conditions
init|=
operator|(
name|List
operator|)
name|policies
operator|.
name|get
argument_list|(
literal|"xyz"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|conditions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// remove policy
name|String
name|removePolicyCommand
init|=
literal|"{remove-policy : policy1}"
decl_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|removePolicyCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|data
operator|=
name|zkClient
argument_list|()
operator|.
name|getData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loaded
operator|=
name|ZkNodeProps
operator|.
name|load
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|policies
operator|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|loaded
operator|.
name|get
argument_list|(
literal|"policies"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|policies
operator|.
name|get
argument_list|(
literal|"policy1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// set preferences
name|String
name|setPreferencesCommand
init|=
literal|"{"
operator|+
literal|" 'set-cluster-preferences': ["
operator|+
literal|"        {'minimize': 'cores', 'precision': 3},"
operator|+
literal|"        {'maximize': 'freedisk','precision': 100},"
operator|+
literal|"        {'minimize': 'sysLoadAvg','precision': 10}]"
operator|+
literal|"}"
decl_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPreferencesCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|data
operator|=
name|zkClient
argument_list|()
operator|.
name|getData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loaded
operator|=
name|ZkNodeProps
operator|.
name|load
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|List
name|preferences
init|=
operator|(
name|List
operator|)
name|loaded
operator|.
name|get
argument_list|(
literal|"cluster-preferences"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|preferences
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// set preferences
name|setPreferencesCommand
operator|=
literal|"{"
operator|+
literal|" 'set-cluster-preferences': ["
operator|+
literal|"        {'minimize': 'sysLoadAvg','precision': 10}]"
operator|+
literal|"}"
expr_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPreferencesCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|data
operator|=
name|zkClient
argument_list|()
operator|.
name|getData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loaded
operator|=
name|ZkNodeProps
operator|.
name|load
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|preferences
operator|=
operator|(
name|List
operator|)
name|loaded
operator|.
name|get
argument_list|(
literal|"cluster-preferences"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|preferences
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|setClusterPolicyCommand
init|=
literal|"{"
operator|+
literal|" 'set-cluster-policy': ["
operator|+
literal|"      {'cores':'<10', 'node':'#ANY'},"
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'},"
operator|+
literal|"      {'nodeRole':'!overseer', 'replica':0}"
operator|+
literal|"    ]"
operator|+
literal|"}"
decl_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setClusterPolicyCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|data
operator|=
name|zkClient
argument_list|()
operator|.
name|getData
argument_list|(
name|SOLR_AUTOSCALING_CONF_PATH
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loaded
operator|=
name|ZkNodeProps
operator|.
name|load
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|List
name|clusterPolicy
init|=
operator|(
name|List
operator|)
name|loaded
operator|.
name|get
argument_list|(
literal|"cluster-policy"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|clusterPolicy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|clusterPolicy
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadApi
specifier|public
name|void
name|testReadApi
parameter_list|()
throws|throws
name|Exception
block|{
name|CloudSolrClient
name|solrClient
init|=
name|cluster
operator|.
name|getSolrClient
argument_list|()
decl_stmt|;
name|String
name|setClusterPolicyCommand
init|=
literal|"{"
operator|+
literal|" 'set-cluster-policy': ["
operator|+
literal|"      {'cores':'<10', 'node':'#ANY'},"
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'},"
operator|+
literal|"      {'nodeRole':'overseer', 'replica':0}"
operator|+
literal|"    ]"
operator|+
literal|"}"
decl_stmt|;
name|SolrRequest
name|req
init|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setClusterPolicyCommand
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
init|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|String
name|setPreferencesCommand
init|=
literal|"{"
operator|+
literal|" 'set-cluster-preferences': ["
operator|+
literal|"        {'minimize': 'cores', 'precision': 3},"
operator|+
literal|"        {'maximize': 'freedisk','precision': 100},"
operator|+
literal|"        {'minimize': 'sysLoadAvg','precision': 10},"
operator|+
literal|"        {'minimize': 'heapUsage','precision': 10}]"
operator|+
literal|"}"
decl_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPreferencesCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
name|String
name|setPolicyCommand
init|=
literal|"{'set-policy': {"
operator|+
literal|"    'xyz':["
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'},"
operator|+
literal|"      {'nodeRole':'overseer', 'replica':0}"
operator|+
literal|"    ],"
operator|+
literal|"    'policy1':["
operator|+
literal|"      {'replica':'<2', 'shard': '#EACH', 'node': '#ANY'}"
operator|+
literal|"    ]"
operator|+
literal|"}}"
decl_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|POST
argument_list|,
name|setPolicyCommand
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|get
argument_list|(
literal|"result"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"success"
argument_list|)
expr_stmt|;
comment|//    SolrQuery query = new SolrQuery().setParam(CommonParams.QT, path);
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|GET
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|>
name|clusterPrefs
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"cluster-preferences"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|clusterPrefs
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|clusterPrefs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|>
name|clusterPolicy
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"cluster-policy"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|clusterPolicy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|clusterPolicy
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
name|policies
init|=
operator|(
name|Map
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"policies"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|policies
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|policies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|policies
operator|.
name|get
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|policies
operator|.
name|get
argument_list|(
literal|"policy1"
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|GET
argument_list|,
literal|"/diagnostics"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|diagnostics
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"diagnostics"
argument_list|)
decl_stmt|;
name|List
name|sortedNodes
init|=
operator|(
name|List
operator|)
name|diagnostics
operator|.
name|get
argument_list|(
literal|"sortedNodes"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|sortedNodes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|sortedNodes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|sortedNodeNames
init|=
operator|new
name|String
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|Map
name|node
init|=
operator|(
name|Map
operator|)
name|sortedNodes
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|node
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sortedNodeNames
index|[
name|i
index|]
operator|=
operator|(
name|String
operator|)
name|node
operator|.
name|get
argument_list|(
literal|"node"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|node
operator|.
name|get
argument_list|(
literal|"cores"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|node
operator|.
name|get
argument_list|(
literal|"cores"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|node
operator|.
name|get
argument_list|(
literal|"freedisk"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|node
operator|.
name|get
argument_list|(
literal|"sysLoadAvg"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|node
operator|.
name|get
argument_list|(
literal|"heapUsage"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|violations
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|diagnostics
operator|.
name|get
argument_list|(
literal|"violations"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|violations
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|violations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|violations
operator|=
operator|(
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|diagnostics
operator|.
name|get
argument_list|(
literal|"violations"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|violations
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|violations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// lets create a collection which violates the rule replicas< 2
name|CollectionAdminRequest
operator|.
name|Create
name|create
init|=
name|CollectionAdminRequest
operator|.
name|Create
operator|.
name|createCollection
argument_list|(
literal|"readApiTestViolations"
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|create
operator|.
name|setMaxShardsPerNode
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|CollectionAdminResponse
name|adminResponse
init|=
name|create
operator|.
name|process
argument_list|(
name|solrClient
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|adminResponse
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
comment|// get the diagnostics output again
name|req
operator|=
name|createAutoScalingRequest
argument_list|(
name|SolrRequest
operator|.
name|METHOD
operator|.
name|GET
argument_list|,
literal|"/diagnostics"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|response
operator|=
name|solrClient
operator|.
name|request
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|diagnostics
operator|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"diagnostics"
argument_list|)
expr_stmt|;
name|sortedNodes
operator|=
operator|(
name|List
operator|)
name|diagnostics
operator|.
name|get
argument_list|(
literal|"sortedNodes"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sortedNodes
argument_list|)
expr_stmt|;
name|violations
operator|=
operator|(
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|diagnostics
operator|.
name|get
argument_list|(
literal|"violations"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|violations
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|violations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|violation
range|:
name|violations
control|)
block|{
name|assertEquals
argument_list|(
literal|"readApiTestViolations"
argument_list|,
name|violation
operator|.
name|get
argument_list|(
literal|"collection"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"shard1"
argument_list|,
name|violation
operator|.
name|get
argument_list|(
literal|"shard"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"replica"
argument_list|,
literal|"3"
argument_list|,
literal|"delta"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|violation
operator|.
name|get
argument_list|(
literal|"violation"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|violation
operator|.
name|get
argument_list|(
literal|"clause"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createAutoScalingRequest
specifier|static
name|SolrRequest
name|createAutoScalingRequest
parameter_list|(
name|SolrRequest
operator|.
name|METHOD
name|m
parameter_list|,
name|String
name|message
parameter_list|)
block|{
return|return
name|createAutoScalingRequest
argument_list|(
name|m
argument_list|,
literal|null
argument_list|,
name|message
argument_list|)
return|;
block|}
DECL|method|createAutoScalingRequest
specifier|static
name|SolrRequest
name|createAutoScalingRequest
parameter_list|(
name|SolrRequest
operator|.
name|METHOD
name|m
parameter_list|,
name|String
name|subPath
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|boolean
name|useV1
init|=
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
decl_stmt|;
name|String
name|path
init|=
name|useV1
condition|?
literal|"/admin/autoscaling"
else|:
literal|"/cluster/autoscaling"
decl_stmt|;
name|path
operator|+=
name|subPath
operator|!=
literal|null
condition|?
name|subPath
else|:
literal|""
expr_stmt|;
return|return
name|useV1
condition|?
operator|new
name|AutoScalingRequest
argument_list|(
name|m
argument_list|,
name|path
argument_list|,
name|message
argument_list|)
else|:
operator|new
name|V2Request
operator|.
name|Builder
argument_list|(
name|path
argument_list|)
operator|.
name|withMethod
argument_list|(
name|m
argument_list|)
operator|.
name|withPayload
argument_list|(
name|message
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|class|AutoScalingRequest
specifier|static
class|class
name|AutoScalingRequest
extends|extends
name|SolrRequest
block|{
DECL|field|message
specifier|protected
specifier|final
name|String
name|message
decl_stmt|;
DECL|method|AutoScalingRequest
specifier|public
name|AutoScalingRequest
parameter_list|(
name|METHOD
name|m
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|m
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getContentStreams
specifier|public
name|Collection
argument_list|<
name|ContentStream
argument_list|>
name|getContentStreams
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|message
operator|!=
literal|null
condition|?
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|message
argument_list|)
argument_list|)
else|:
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createResponse
specifier|protected
name|SolrResponse
name|createResponse
parameter_list|(
name|SolrClient
name|client
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

