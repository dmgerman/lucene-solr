begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.solr.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|invoke
operator|.
name|MethodHandles
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|annotations
operator|.
name|ThreadLeakFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DistributedFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|SafeModeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|hdfs
operator|.
name|HdfsTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|BadHdfsThreadsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/**  * This class implements the tests for HDFS integration for Solr backup/restore capability.  */
end_comment

begin_class
annotation|@
name|ThreadLeakFilters
argument_list|(
name|defaultFilters
operator|=
literal|true
argument_list|,
name|filters
operator|=
block|{
name|BadHdfsThreadsFilter
operator|.
name|class
comment|// hdfs currently leaks thread(s)
block|}
argument_list|)
DECL|class|TestHdfsCloudBackupRestore
specifier|public
class|class
name|TestHdfsCloudBackupRestore
extends|extends
name|AbstractCloudBackupRestoreTestCase
block|{
DECL|field|SOLR_XML
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_XML
init|=
literal|"<solr>\n"
operator|+
literal|"\n"
operator|+
literal|"<str name=\"shareSchema\">${shareSchema:false}</str>\n"
operator|+
literal|"<str name=\"configSetBaseDir\">${configSetBaseDir:configsets}</str>\n"
operator|+
literal|"<str name=\"coreRootDirectory\">${coreRootDirectory:.}</str>\n"
operator|+
literal|"\n"
operator|+
literal|"<shardHandlerFactory name=\"shardHandlerFactory\" class=\"HttpShardHandlerFactory\">\n"
operator|+
literal|"<str name=\"urlScheme\">${urlScheme:}</str>\n"
operator|+
literal|"<int name=\"socketTimeout\">${socketTimeout:90000}</int>\n"
operator|+
literal|"<int name=\"connTimeout\">${connTimeout:15000}</int>\n"
operator|+
literal|"</shardHandlerFactory>\n"
operator|+
literal|"\n"
operator|+
literal|"<solrcloud>\n"
operator|+
literal|"<str name=\"host\">127.0.0.1</str>\n"
operator|+
literal|"<int name=\"hostPort\">${hostPort:8983}</int>\n"
operator|+
literal|"<str name=\"hostContext\">${hostContext:solr}</str>\n"
operator|+
literal|"<int name=\"zkClientTimeout\">${solr.zkclienttimeout:30000}</int>\n"
operator|+
literal|"<bool name=\"genericCoreNodeNames\">${genericCoreNodeNames:true}</bool>\n"
operator|+
literal|"<int name=\"leaderVoteWait\">10000</int>\n"
operator|+
literal|"<int name=\"distribUpdateConnTimeout\">${distribUpdateConnTimeout:45000}</int>\n"
operator|+
literal|"<int name=\"distribUpdateSoTimeout\">${distribUpdateSoTimeout:340000}</int>\n"
operator|+
literal|"</solrcloud>\n"
operator|+
literal|"  \n"
operator|+
literal|"<backup>\n"
operator|+
literal|"<repository  name=\"hdfs\" class=\"org.apache.solr.core.backup.repository.HdfsBackupRepository\"> \n"
operator|+
literal|"<str name=\"location\">${solr.hdfs.default.backup.path}</str>\n"
operator|+
literal|"<str name=\"solr.hdfs.home\">${solr.hdfs.home:}</str>\n"
operator|+
literal|"<str name=\"solr.hdfs.confdir\">${solr.hdfs.confdir:}</str>\n"
operator|+
literal|"</repository>\n"
operator|+
literal|"</backup>\n"
operator|+
literal|"  \n"
operator|+
literal|"</solr>\n"
decl_stmt|;
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MethodHandles
operator|.
name|lookup
argument_list|()
operator|.
name|lookupClass
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|dfsCluster
specifier|private
specifier|static
name|MiniDFSCluster
name|dfsCluster
decl_stmt|;
DECL|field|hdfsUri
specifier|private
specifier|static
name|String
name|hdfsUri
decl_stmt|;
DECL|field|fs
specifier|private
specifier|static
name|FileSystem
name|fs
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupClass
specifier|public
specifier|static
name|void
name|setupClass
parameter_list|()
throws|throws
name|Exception
block|{
name|dfsCluster
operator|=
name|HdfsTestUtil
operator|.
name|setupClass
argument_list|(
name|createTempDir
argument_list|()
operator|.
name|toFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|hdfsUri
operator|=
name|HdfsTestUtil
operator|.
name|getURI
argument_list|(
name|dfsCluster
argument_list|)
expr_stmt|;
try|try
block|{
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
name|hdfsUri
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
name|HdfsTestUtil
operator|.
name|getClientConfiguration
argument_list|(
name|dfsCluster
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
literal|"fs.hdfs.impl.disable.cache"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|uri
argument_list|,
name|conf
argument_list|)
expr_stmt|;
if|if
condition|(
name|fs
operator|instanceof
name|DistributedFileSystem
condition|)
block|{
comment|// Make sure dfs is not in safe mode
while|while
condition|(
operator|(
operator|(
name|DistributedFileSystem
operator|)
name|fs
operator|)
operator|.
name|setSafeMode
argument_list|(
name|SafeModeAction
operator|.
name|SAFEMODE_GET
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"The NameNode is in SafeMode - Solr will wait 5 seconds and try again."
argument_list|)
expr_stmt|;
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|interrupted
argument_list|()
expr_stmt|;
comment|// continue
block|}
block|}
block|}
name|fs
operator|.
name|mkdirs
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
argument_list|(
literal|"/backup"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
decl||
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.hdfs.default.backup.path"
argument_list|,
literal|"/backup"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.hdfs.home"
argument_list|,
name|hdfsUri
operator|+
literal|"/solr"
argument_list|)
expr_stmt|;
name|useFactory
argument_list|(
literal|"solr.StandardDirectoryFactory"
argument_list|)
expr_stmt|;
name|configureCluster
argument_list|(
name|NUM_SHARDS
argument_list|)
comment|// nodes
operator|.
name|addConfig
argument_list|(
literal|"conf1"
argument_list|,
name|TEST_PATH
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"configsets"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"cloud-minimal"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"conf"
argument_list|)
argument_list|)
operator|.
name|withSolrXml
argument_list|(
name|SOLR_XML
argument_list|)
operator|.
name|configure
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|teardownClass
specifier|public
specifier|static
name|void
name|teardownClass
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|clearProperty
argument_list|(
literal|"solr.hdfs.home"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"solr.hdfs.default.backup.path"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"test.build.data"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"test.cache.data"
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|fs
operator|=
literal|null
expr_stmt|;
name|HdfsTestUtil
operator|.
name|teardownClass
argument_list|(
name|dfsCluster
argument_list|)
expr_stmt|;
name|dfsCluster
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCollectionName
specifier|public
name|String
name|getCollectionName
parameter_list|()
block|{
return|return
literal|"hdfsbackuprestore"
return|;
block|}
annotation|@
name|Override
DECL|method|getBackupRepoName
specifier|public
name|String
name|getBackupRepoName
parameter_list|()
block|{
return|return
literal|"hdfs"
return|;
block|}
annotation|@
name|Override
DECL|method|getBackupLocation
specifier|public
name|String
name|getBackupLocation
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

