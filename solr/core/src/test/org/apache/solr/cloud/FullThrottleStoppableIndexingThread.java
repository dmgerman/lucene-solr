begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|invoke
operator|.
name|MethodHandles
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ConnectException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CloudSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|ConcurrentUpdateSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpClientUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|FullThrottleStoppableIndexingThread
class|class
name|FullThrottleStoppableIndexingThread
extends|extends
name|StoppableIndexingThread
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MethodHandles
operator|.
name|lookup
argument_list|()
operator|.
name|lookupClass
argument_list|()
argument_list|)
decl_stmt|;
comment|/**    *     */
DECL|field|httpClient
specifier|private
name|CloseableHttpClient
name|httpClient
init|=
name|HttpClientUtil
operator|.
name|createClient
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|stop
specifier|private
specifier|volatile
name|boolean
name|stop
init|=
literal|false
decl_stmt|;
DECL|field|clientIndex
name|int
name|clientIndex
init|=
literal|0
decl_stmt|;
DECL|field|cusc
specifier|private
name|ConcurrentUpdateSolrClient
name|cusc
decl_stmt|;
DECL|field|clients
specifier|private
name|List
argument_list|<
name|SolrClient
argument_list|>
name|clients
decl_stmt|;
DECL|field|fails
specifier|private
name|AtomicInteger
name|fails
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
DECL|method|FullThrottleStoppableIndexingThread
specifier|public
name|FullThrottleStoppableIndexingThread
parameter_list|(
name|SolrClient
name|controlClient
parameter_list|,
name|CloudSolrClient
name|cloudClient
parameter_list|,
name|List
argument_list|<
name|SolrClient
argument_list|>
name|clients
parameter_list|,
name|String
name|id
parameter_list|,
name|boolean
name|doDeletes
parameter_list|,
name|int
name|clientSoTimeout
parameter_list|)
block|{
name|super
argument_list|(
name|controlClient
argument_list|,
name|cloudClient
argument_list|,
name|id
argument_list|,
name|doDeletes
argument_list|)
expr_stmt|;
name|setName
argument_list|(
literal|"FullThrottleStopableIndexingThread"
argument_list|)
expr_stmt|;
name|setDaemon
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|clients
operator|=
name|clients
expr_stmt|;
name|cusc
operator|=
operator|new
name|ErrorLoggingConcurrentUpdateSolrClient
argument_list|(
operator|(
operator|(
name|HttpSolrClient
operator|)
name|clients
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getBaseURL
argument_list|()
argument_list|,
name|httpClient
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cusc
operator|.
name|setConnectionTimeout
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|cusc
operator|.
name|setSoTimeout
argument_list|(
name|clientSoTimeout
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run
specifier|public
name|void
name|run
parameter_list|()
block|{
name|int
name|i
init|=
literal|0
decl_stmt|;
name|int
name|numDeletes
init|=
literal|0
decl_stmt|;
name|int
name|numAdds
init|=
literal|0
decl_stmt|;
while|while
condition|(
literal|true
operator|&&
operator|!
name|stop
condition|)
block|{
name|String
name|id
init|=
name|this
operator|.
name|id
operator|+
literal|"-"
operator|+
name|i
decl_stmt|;
operator|++
name|i
expr_stmt|;
if|if
condition|(
name|doDeletes
operator|&&
name|LuceneTestCase
operator|.
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
operator|&&
name|deletes
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|String
name|delete
init|=
name|deletes
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
decl_stmt|;
try|try
block|{
name|numDeletes
operator|++
expr_stmt|;
name|cusc
operator|.
name|deleteById
argument_list|(
name|delete
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|changeUrlOnError
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|fails
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
block|}
block|}
try|try
block|{
name|numAdds
operator|++
expr_stmt|;
if|if
condition|(
name|numAdds
operator|>
operator|(
name|LuceneTestCase
operator|.
name|TEST_NIGHTLY
condition|?
literal|4002
else|:
literal|197
operator|)
condition|)
continue|continue;
name|SolrInputDocument
name|doc
init|=
name|AbstractFullDistribZkTestBase
operator|.
name|getDoc
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|,
name|i1
argument_list|,
literal|50
argument_list|,
name|t1
argument_list|,
literal|"Saxon heptarchies that used to rip around so in old times and raise Cain.  My, you ought to seen old Henry the Eight when he was in bloom.  He WAS a blossom.  He used to marry a new wife every day, and chop off her head next morning.  And he would do it just as indifferent as if "
argument_list|)
decl_stmt|;
name|cusc
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|changeUrlOnError
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|fails
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|doDeletes
operator|&&
name|LuceneTestCase
operator|.
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|deletes
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
name|log
operator|.
name|info
argument_list|(
literal|"FT added docs:"
operator|+
name|numAdds
operator|+
literal|" with "
operator|+
name|fails
operator|+
literal|" fails"
operator|+
literal|" deletes:"
operator|+
name|numDeletes
argument_list|)
expr_stmt|;
block|}
DECL|method|changeUrlOnError
specifier|private
name|void
name|changeUrlOnError
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|instanceof
name|ConnectException
condition|)
block|{
name|clientIndex
operator|++
expr_stmt|;
if|if
condition|(
name|clientIndex
operator|>
name|clients
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
block|{
name|clientIndex
operator|=
literal|0
expr_stmt|;
block|}
name|cusc
operator|.
name|shutdownNow
argument_list|()
expr_stmt|;
name|cusc
operator|=
operator|new
name|ErrorLoggingConcurrentUpdateSolrClient
argument_list|(
operator|(
operator|(
name|HttpSolrClient
operator|)
name|clients
operator|.
name|get
argument_list|(
name|clientIndex
argument_list|)
operator|)
operator|.
name|getBaseURL
argument_list|()
argument_list|,
name|httpClient
argument_list|,
literal|30
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|safeStop
specifier|public
name|void
name|safeStop
parameter_list|()
block|{
name|stop
operator|=
literal|true
expr_stmt|;
name|cusc
operator|.
name|blockUntilFinished
argument_list|()
expr_stmt|;
name|cusc
operator|.
name|shutdownNow
argument_list|()
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|httpClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFailCount
specifier|public
name|int
name|getFailCount
parameter_list|()
block|{
return|return
name|fails
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getAddFails
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getAddFails
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|getDeleteFails
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getDeleteFails
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
DECL|class|ErrorLoggingConcurrentUpdateSolrClient
specifier|static
class|class
name|ErrorLoggingConcurrentUpdateSolrClient
extends|extends
name|ConcurrentUpdateSolrClient
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|ErrorLoggingConcurrentUpdateSolrClient
specifier|public
name|ErrorLoggingConcurrentUpdateSolrClient
parameter_list|(
name|String
name|serverUrl
parameter_list|,
name|HttpClient
name|httpClient
parameter_list|,
name|int
name|queueSize
parameter_list|,
name|int
name|threadCount
parameter_list|)
block|{
name|super
argument_list|(
name|serverUrl
argument_list|,
name|httpClient
argument_list|,
name|queueSize
argument_list|,
name|threadCount
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handleError
specifier|public
name|void
name|handleError
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"cusc error"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

