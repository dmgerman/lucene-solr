begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.security
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
operator|.
name|Slow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|BaseDistributedSearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|QueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|SecurityConfHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|SecurityConfHandlerLocalForTesting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|LogLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests basicAuth in a multi shard env  */
end_comment

begin_class
annotation|@
name|Slow
DECL|class|BasicAuthDistributedTest
specifier|public
class|class
name|BasicAuthDistributedTest
extends|extends
name|BaseDistributedSearchTestCase
block|{
DECL|method|BasicAuthDistributedTest
specifier|public
name|BasicAuthDistributedTest
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|schemaString
operator|=
literal|"schema.xml"
expr_stmt|;
block|}
DECL|field|securityConfHandler
specifier|private
name|SecurityConfHandlerLocalForTesting
name|securityConfHandler
decl_stmt|;
annotation|@
name|Test
annotation|@
name|LogLevel
argument_list|(
literal|"org.apache.solr=DEBUG"
argument_list|)
DECL|method|test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|index
argument_list|()
expr_stmt|;
name|testAuth
argument_list|()
expr_stmt|;
block|}
DECL|method|index
specifier|private
name|void
name|index
parameter_list|()
throws|throws
name|Exception
block|{
name|del
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"1"
argument_list|,
literal|"text"
argument_list|,
literal|"doc one"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"2"
argument_list|,
literal|"text"
argument_list|,
literal|"doc two"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"3"
argument_list|,
literal|"text"
argument_list|,
literal|"doc three"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"4"
argument_list|,
literal|"text"
argument_list|,
literal|"doc four"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"5"
argument_list|,
literal|"text"
argument_list|,
literal|"doc five"
argument_list|)
expr_stmt|;
name|commit
argument_list|()
expr_stmt|;
comment|// try to ensure there's more than one segment
name|indexr
argument_list|(
name|id
argument_list|,
literal|"6"
argument_list|,
literal|"text"
argument_list|,
literal|"doc six"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"7"
argument_list|,
literal|"text"
argument_list|,
literal|"doc seven"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"8"
argument_list|,
literal|"text"
argument_list|,
literal|"doc eight"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"9"
argument_list|,
literal|"text"
argument_list|,
literal|"doc nine"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"10"
argument_list|,
literal|"text"
argument_list|,
literal|"doc ten"
argument_list|)
expr_stmt|;
name|commit
argument_list|()
expr_stmt|;
name|handle
operator|.
name|clear
argument_list|()
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"QTime"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"timestamp"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"maxScore"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"_version_"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
block|}
DECL|method|testAuth
specifier|private
name|void
name|testAuth
parameter_list|()
throws|throws
name|Exception
block|{
name|QueryResponse
name|rsp
init|=
name|query
argument_list|(
literal|"q"
argument_list|,
literal|"text:doc"
argument_list|,
literal|"fl"
argument_list|,
literal|"id,text"
argument_list|,
literal|"sort"
argument_list|,
literal|"id asc"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rsp
operator|.
name|getResults
argument_list|()
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// Enable authentication
for|for
control|(
name|JettySolrRunner
name|j
range|:
name|jettys
control|)
block|{
name|writeSecurityJson
argument_list|(
name|j
operator|.
name|getCoreContainer
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|HttpSolrClient
operator|.
name|RemoteSolrException
name|expected
init|=
name|expectThrows
argument_list|(
name|HttpSolrClient
operator|.
name|RemoteSolrException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|query
argument_list|(
literal|"q"
argument_list|,
literal|"text:doc-fail"
argument_list|,
literal|"fl"
argument_list|,
literal|"id,text"
argument_list|,
literal|"sort"
argument_list|,
literal|"id asc"
argument_list|)
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|401
argument_list|,
name|expected
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
comment|// Add auth
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"q"
argument_list|,
literal|"text:doc"
argument_list|)
operator|.
name|add
argument_list|(
literal|"fl"
argument_list|,
literal|"id,text"
argument_list|)
operator|.
name|add
argument_list|(
literal|"sort"
argument_list|,
literal|"id asc"
argument_list|)
expr_stmt|;
name|QueryRequest
name|req
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|req
operator|.
name|setBasicAuthCredentials
argument_list|(
literal|"solr"
argument_list|,
literal|"SolrRocks"
argument_list|)
expr_stmt|;
name|rsp
operator|=
name|req
operator|.
name|process
argument_list|(
name|clients
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|jettys
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|assertTrue
argument_list|(
name|rsp
operator|.
name|getResults
argument_list|()
operator|.
name|getNumFound
argument_list|()
operator|<
literal|10
argument_list|)
expr_stmt|;
name|rsp
operator|=
name|query
argument_list|(
literal|true
argument_list|,
name|params
argument_list|,
literal|"solr"
argument_list|,
literal|"SolrRocks"
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rsp
operator|.
name|getResults
argument_list|()
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// Disable auth
for|for
control|(
name|JettySolrRunner
name|j
range|:
name|jettys
control|)
block|{
name|deleteSecurityJson
argument_list|(
name|j
operator|.
name|getCoreContainer
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|deleteSecurityJson
specifier|private
name|void
name|deleteSecurityJson
parameter_list|(
name|CoreContainer
name|coreContainer
parameter_list|)
throws|throws
name|IOException
block|{
name|securityConfHandler
operator|=
operator|new
name|SecurityConfHandlerLocalForTesting
argument_list|(
name|coreContainer
argument_list|)
expr_stmt|;
name|Files
operator|.
name|delete
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|coreContainer
operator|.
name|getSolrHome
argument_list|()
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"security.json"
argument_list|)
argument_list|)
expr_stmt|;
name|coreContainer
operator|.
name|securityNodeChanged
argument_list|()
expr_stmt|;
block|}
DECL|method|writeSecurityJson
specifier|private
name|void
name|writeSecurityJson
parameter_list|(
name|CoreContainer
name|coreContainer
parameter_list|)
throws|throws
name|IOException
block|{
name|securityConfHandler
operator|=
operator|new
name|SecurityConfHandlerLocalForTesting
argument_list|(
name|coreContainer
argument_list|)
expr_stmt|;
name|securityConfHandler
operator|.
name|persistConf
argument_list|(
operator|new
name|SecurityConfHandler
operator|.
name|SecurityConfig
argument_list|()
operator|.
name|setData
argument_list|(
name|Utils
operator|.
name|fromJSONString
argument_list|(
name|ALL_CONF
operator|.
name|replaceAll
argument_list|(
literal|"'"
argument_list|,
literal|"\""
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|coreContainer
operator|.
name|securityNodeChanged
argument_list|()
expr_stmt|;
block|}
DECL|field|ALL_CONF
specifier|protected
specifier|static
specifier|final
name|String
name|ALL_CONF
init|=
literal|"{\n"
operator|+
literal|"  'authentication':{\n"
operator|+
literal|"    'blockUnknown':true,\n"
operator|+
literal|"    'class':'solr.BasicAuthPlugin',\n"
operator|+
literal|"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\n"
operator|+
literal|"  'authorization':{\n"
operator|+
literal|"    'class':'solr.RuleBasedAuthorizationPlugin',\n"
operator|+
literal|"    'user-role':{'solr':'admin'},\n"
operator|+
literal|"    'permissions':[{'name':'all','role':'admin'}]}}"
decl_stmt|;
block|}
end_class

end_unit

