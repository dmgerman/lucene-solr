begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|api
operator|.
name|ApiBag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|api
operator|.
name|V2HttpCall
operator|.
name|CompositeApi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|MapSolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|StrUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ValidatingJsonMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|PluginBag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|PingRequestHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|SchemaHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|SolrConfigHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|LocalSolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrRequestHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|api
operator|.
name|Api
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|api
operator|.
name|V2HttpCall
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|CommandOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|PathTrie
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|api
operator|.
name|ApiBag
operator|.
name|EMPTY_SPEC
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
operator|.
name|METHOD
operator|.
name|GET
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CommonParams
operator|.
name|COLLECTIONS_HANDLER_PATH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CommonParams
operator|.
name|CONFIGSETS_HANDLER_PATH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CommonParams
operator|.
name|CORES_HANDLER_PATH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ValidatingJsonMap
operator|.
name|NOT_NULL
import|;
end_import

begin_class
DECL|class|TestApiFramework
specifier|public
class|class
name|TestApiFramework
extends|extends
name|SolrTestCaseJ4
block|{
DECL|method|testFramework
specifier|public
name|void
name|testFramework
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
index|[]
argument_list|>
name|calls
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|out
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|CoreContainer
name|mockCC
init|=
name|TestCoreAdminApis
operator|.
name|getCoreContainerMock
argument_list|(
name|calls
argument_list|,
name|out
argument_list|)
decl_stmt|;
name|PluginBag
argument_list|<
name|SolrRequestHandler
argument_list|>
name|containerHandlers
init|=
operator|new
name|PluginBag
argument_list|<>
argument_list|(
name|SolrRequestHandler
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|containerHandlers
operator|.
name|put
argument_list|(
name|COLLECTIONS_HANDLER_PATH
argument_list|,
operator|new
name|TestCollectionAPIs
operator|.
name|MockCollectionsHandler
argument_list|()
argument_list|)
expr_stmt|;
name|containerHandlers
operator|.
name|put
argument_list|(
name|CORES_HANDLER_PATH
argument_list|,
operator|new
name|CoreAdminHandler
argument_list|(
name|mockCC
argument_list|)
argument_list|)
expr_stmt|;
name|containerHandlers
operator|.
name|put
argument_list|(
name|CONFIGSETS_HANDLER_PATH
argument_list|,
operator|new
name|ConfigSetsHandler
argument_list|(
name|mockCC
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|put
argument_list|(
literal|"getRequestHandlers"
argument_list|,
name|containerHandlers
argument_list|)
expr_stmt|;
name|PluginBag
argument_list|<
name|SolrRequestHandler
argument_list|>
name|coreHandlers
init|=
operator|new
name|PluginBag
argument_list|<>
argument_list|(
name|SolrRequestHandler
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|coreHandlers
operator|.
name|put
argument_list|(
literal|"/schema"
argument_list|,
operator|new
name|SchemaHandler
argument_list|()
argument_list|)
expr_stmt|;
name|coreHandlers
operator|.
name|put
argument_list|(
literal|"/config"
argument_list|,
operator|new
name|SolrConfigHandler
argument_list|()
argument_list|)
expr_stmt|;
name|coreHandlers
operator|.
name|put
argument_list|(
literal|"/admin/ping"
argument_list|,
operator|new
name|PingRequestHandler
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fullPath
init|=
literal|"/collections/hello/shards"
decl_stmt|;
name|Api
name|api
init|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|containerHandlers
argument_list|,
name|fullPath
argument_list|,
literal|"POST"
argument_list|,
name|fullPath
argument_list|,
name|parts
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|api
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|api
operator|.
name|getSpec
argument_list|()
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/methods[0]"
argument_list|,
literal|"POST"
argument_list|,
literal|"/commands/create"
argument_list|,
name|NOT_NULL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"collection"
argument_list|)
argument_list|)
expr_stmt|;
name|parts
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|containerHandlers
argument_list|,
literal|"/collections/hello/shards"
argument_list|,
literal|"POST"
argument_list|,
literal|null
argument_list|,
name|parts
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|api
operator|.
name|getSpec
argument_list|()
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/methods[0]"
argument_list|,
literal|"POST"
argument_list|,
literal|"/commands/split"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"/commands/add-replica"
argument_list|,
name|NOT_NULL
argument_list|)
argument_list|)
expr_stmt|;
name|parts
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|containerHandlers
argument_list|,
literal|"/collections/hello/shards/shard1"
argument_list|,
literal|"POST"
argument_list|,
literal|null
argument_list|,
name|parts
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|api
operator|.
name|getSpec
argument_list|()
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/methods[0]"
argument_list|,
literal|"POST"
argument_list|,
literal|"/commands/force-leader"
argument_list|,
name|NOT_NULL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"collection"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"shard1"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"shard"
argument_list|)
argument_list|)
expr_stmt|;
name|parts
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|containerHandlers
argument_list|,
literal|"/collections/hello"
argument_list|,
literal|"POST"
argument_list|,
literal|null
argument_list|,
name|parts
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|api
operator|.
name|getSpec
argument_list|()
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/methods[0]"
argument_list|,
literal|"POST"
argument_list|,
literal|"/commands/add-replica-property"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"/commands/delete-replica-property"
argument_list|,
name|NOT_NULL
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"collection"
argument_list|)
argument_list|)
expr_stmt|;
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|containerHandlers
argument_list|,
literal|"/collections/hello/shards/shard1/replica1"
argument_list|,
literal|"DELETE"
argument_list|,
literal|null
argument_list|,
name|parts
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|api
operator|.
name|getSpec
argument_list|()
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/methods[0]"
argument_list|,
literal|"DELETE"
argument_list|,
literal|"/url/params/onlyIfDown/type"
argument_list|,
literal|"boolean"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"collection"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"shard1"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"shard"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"replica1"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"replica"
argument_list|)
argument_list|)
expr_stmt|;
name|SolrQueryResponse
name|rsp
init|=
name|invoke
argument_list|(
name|containerHandlers
argument_list|,
literal|null
argument_list|,
literal|"/collections/_introspect"
argument_list|,
name|GET
argument_list|,
name|mockCC
argument_list|)
decl_stmt|;
name|assertConditions
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|asMap
argument_list|(
literal|2
argument_list|)
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/spec[0]/methods[0]"
argument_list|,
literal|"DELETE"
argument_list|,
literal|"/spec[1]/methods[0]"
argument_list|,
literal|"POST"
argument_list|,
literal|"/spec[2]/methods[0]"
argument_list|,
literal|"GET"
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
name|invoke
argument_list|(
name|coreHandlers
argument_list|,
literal|"/schema/_introspect"
argument_list|,
literal|"/collections/hello/schema/_introspect"
argument_list|,
name|GET
argument_list|,
name|mockCC
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|asMap
argument_list|(
literal|2
argument_list|)
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/spec[0]/methods[0]"
argument_list|,
literal|"POST"
argument_list|,
literal|"/spec[0]/commands"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"/spec[1]/methods[0]"
argument_list|,
literal|"GET"
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
name|invoke
argument_list|(
name|coreHandlers
argument_list|,
literal|"/"
argument_list|,
literal|"/collections/hello/_introspect"
argument_list|,
name|GET
argument_list|,
name|mockCC
argument_list|)
expr_stmt|;
name|assertConditions
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|asMap
argument_list|(
literal|2
argument_list|)
argument_list|,
name|Utils
operator|.
name|makeMap
argument_list|(
literal|"/availableSubPaths"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"availableSubPaths /collections/hello/config/jmx"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"availableSubPaths /collections/hello/schema"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"availableSubPaths /collections/hello/shards"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"availableSubPaths /collections/hello/shards/{shard}"
argument_list|,
name|NOT_NULL
argument_list|,
literal|"availableSubPaths /collections/hello/shards/{shard}/{replica}"
argument_list|,
name|NOT_NULL
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testTrailingTemplatePaths
specifier|public
name|void
name|testTrailingTemplatePaths
parameter_list|()
block|{
name|PathTrie
argument_list|<
name|Api
argument_list|>
name|registry
init|=
operator|new
name|PathTrie
argument_list|<>
argument_list|()
decl_stmt|;
name|Api
name|api
init|=
operator|new
name|Api
argument_list|(
name|EMPTY_SPEC
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
block|{        }
block|}
decl_stmt|;
name|Api
name|intropsect
init|=
operator|new
name|ApiBag
operator|.
name|IntrospectApi
argument_list|(
name|api
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ApiBag
operator|.
name|registerIntrospect
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|registry
argument_list|,
literal|"/c/.system/blob/{name}"
argument_list|,
name|intropsect
argument_list|)
expr_stmt|;
name|ApiBag
operator|.
name|registerIntrospect
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|registry
argument_list|,
literal|"/c/.system/{x}/{name}"
argument_list|,
name|intropsect
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|intropsect
argument_list|,
name|registry
operator|.
name|lookup
argument_list|(
literal|"/c/.system/blob/random_string/_introspect"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|intropsect
argument_list|,
name|registry
operator|.
name|lookup
argument_list|(
literal|"/c/.system/blob/_introspect"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|intropsect
argument_list|,
name|registry
operator|.
name|lookup
argument_list|(
literal|"/c/.system/_introspect"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|intropsect
argument_list|,
name|registry
operator|.
name|lookup
argument_list|(
literal|"/c/.system/v1/_introspect"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|intropsect
argument_list|,
name|registry
operator|.
name|lookup
argument_list|(
literal|"/c/.system/v1/v2/_introspect"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|invoke
specifier|private
name|SolrQueryResponse
name|invoke
parameter_list|(
name|PluginBag
argument_list|<
name|SolrRequestHandler
argument_list|>
name|reqHandlers
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|fullPath
parameter_list|,
name|SolrRequest
operator|.
name|METHOD
name|method
parameter_list|,
name|CoreContainer
name|mockCC
parameter_list|)
block|{
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|boolean
name|containerHandlerLookup
init|=
name|mockCC
operator|.
name|getRequestHandlers
argument_list|()
operator|==
name|reqHandlers
decl_stmt|;
name|path
operator|=
name|path
operator|==
literal|null
condition|?
name|fullPath
else|:
name|path
expr_stmt|;
name|Api
name|api
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|containerHandlerLookup
condition|)
block|{
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|reqHandlers
argument_list|,
name|path
argument_list|,
literal|"GET"
argument_list|,
name|fullPath
argument_list|,
name|parts
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|mockCC
operator|.
name|getRequestHandlers
argument_list|()
argument_list|,
name|fullPath
argument_list|,
literal|"GET"
argument_list|,
name|fullPath
argument_list|,
name|parts
argument_list|)
expr_stmt|;
if|if
condition|(
name|api
operator|==
literal|null
condition|)
name|api
operator|=
operator|new
name|CompositeApi
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|api
operator|instanceof
name|CompositeApi
condition|)
block|{
name|CompositeApi
name|compositeApi
init|=
operator|(
name|CompositeApi
operator|)
name|api
decl_stmt|;
name|api
operator|=
name|V2HttpCall
operator|.
name|getApiInfo
argument_list|(
name|reqHandlers
argument_list|,
name|path
argument_list|,
literal|"GET"
argument_list|,
name|fullPath
argument_list|,
name|parts
argument_list|)
expr_stmt|;
name|compositeApi
operator|.
name|add
argument_list|(
name|api
argument_list|)
expr_stmt|;
name|api
operator|=
name|compositeApi
expr_stmt|;
block|}
block|}
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|LocalSolrQueryRequest
name|req
init|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|MapSolrParams
argument_list|(
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|CommandOperation
argument_list|>
name|getCommands
parameter_list|(
name|boolean
name|validateInput
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
block|}
decl_stmt|;
name|api
operator|.
name|call
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
return|return
name|rsp
return|;
block|}
DECL|method|assertConditions
specifier|private
name|void
name|assertConditions
parameter_list|(
name|Map
name|root
parameter_list|,
name|Map
name|conditions
parameter_list|)
block|{
for|for
control|(
name|Object
name|o
range|:
name|conditions
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Map
operator|.
name|Entry
name|e
init|=
operator|(
name|Map
operator|.
name|Entry
operator|)
name|o
decl_stmt|;
name|String
name|path
init|=
operator|(
name|String
operator|)
name|e
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|parts
init|=
name|StrUtils
operator|.
name|splitSmart
argument_list|(
name|path
argument_list|,
name|path
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'/'
condition|?
literal|'/'
else|:
literal|' '
argument_list|)
decl_stmt|;
if|if
condition|(
name|parts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isEmpty
argument_list|()
condition|)
name|parts
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Object
name|val
init|=
name|Utils
operator|.
name|getObjectByPath
argument_list|(
name|root
argument_list|,
literal|false
argument_list|,
name|parts
argument_list|)
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|getValue
argument_list|()
operator|instanceof
name|ValidatingJsonMap
operator|.
name|PredicateWithErrMsg
condition|)
block|{
name|ValidatingJsonMap
operator|.
name|PredicateWithErrMsg
name|value
init|=
operator|(
name|ValidatingJsonMap
operator|.
name|PredicateWithErrMsg
operator|)
name|e
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|err
init|=
name|value
operator|.
name|test
argument_list|(
name|val
argument_list|)
decl_stmt|;
if|if
condition|(
name|err
operator|!=
literal|null
condition|)
block|{
name|assertEquals
argument_list|(
name|err
operator|+
literal|" for "
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|" in :"
operator|+
name|Utils
operator|.
name|toJSONString
argument_list|(
name|root
argument_list|)
argument_list|,
name|e
operator|.
name|getValue
argument_list|()
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"incorrect value for path "
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|" in :"
operator|+
name|Utils
operator|.
name|toJSONString
argument_list|(
name|root
argument_list|)
argument_list|,
name|e
operator|.
name|getValue
argument_list|()
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

