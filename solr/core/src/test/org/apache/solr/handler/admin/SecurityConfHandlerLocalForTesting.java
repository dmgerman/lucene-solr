begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import

begin_comment
comment|/**  * Wrapper for use in tests  */
end_comment

begin_class
DECL|class|SecurityConfHandlerLocalForTesting
specifier|public
class|class
name|SecurityConfHandlerLocalForTesting
extends|extends
name|SecurityConfHandlerLocal
block|{
DECL|method|SecurityConfHandlerLocalForTesting
specifier|public
name|SecurityConfHandlerLocalForTesting
parameter_list|(
name|CoreContainer
name|coreContainer
parameter_list|)
block|{
name|super
argument_list|(
name|coreContainer
argument_list|)
expr_stmt|;
block|}
DECL|method|persistConf
specifier|public
name|boolean
name|persistConf
parameter_list|(
name|SecurityConfig
name|securityConfig
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|super
operator|.
name|persistConf
argument_list|(
name|securityConfig
argument_list|)
return|;
block|}
DECL|method|securityConfEdited
specifier|public
name|void
name|securityConfEdited
parameter_list|()
block|{
name|super
operator|.
name|securityConfEdited
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

