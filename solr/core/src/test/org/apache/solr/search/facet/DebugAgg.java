begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.search.facet
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|facet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|ValueSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|SimpleOrderedMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|DocSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|FunctionQParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|SyntaxError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|ValueSourceParser
import|;
end_import

begin_class
DECL|class|DebugAgg
specifier|public
class|class
name|DebugAgg
extends|extends
name|AggValueSource
block|{
DECL|class|Parser
specifier|public
specifier|static
class|class
name|Parser
extends|extends
name|ValueSourceParser
block|{
annotation|@
name|Override
DECL|method|parse
specifier|public
name|ValueSource
name|parse
parameter_list|(
name|FunctionQParser
name|fp
parameter_list|)
throws|throws
name|SyntaxError
block|{
return|return
operator|new
name|DebugAgg
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|init
specifier|public
name|void
name|init
parameter_list|(
name|NamedList
name|args
parameter_list|)
block|{     }
block|}
DECL|method|DebugAgg
specifier|public
name|DebugAgg
parameter_list|()
block|{
name|super
argument_list|(
literal|"debug"
argument_list|)
expr_stmt|;
block|}
DECL|method|DebugAgg
specifier|public
name|DebugAgg
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createSlotAcc
specifier|public
name|SlotAcc
name|createSlotAcc
parameter_list|(
name|FacetContext
name|fcontext
parameter_list|,
name|int
name|numDocs
parameter_list|,
name|int
name|numSlots
parameter_list|)
block|{
return|return
operator|new
name|Acc
argument_list|(
name|fcontext
argument_list|,
name|numDocs
argument_list|,
name|numSlots
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|description
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
literal|"debug()"
return|;
block|}
DECL|class|Acc
specifier|public
specifier|static
class|class
name|Acc
extends|extends
name|SlotAcc
block|{
DECL|field|creates
specifier|public
specifier|static
name|AtomicLong
name|creates
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|resets
specifier|public
specifier|static
name|AtomicLong
name|resets
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|resizes
specifier|public
specifier|static
name|AtomicLong
name|resizes
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|last
specifier|public
specifier|static
name|Acc
name|last
decl_stmt|;
DECL|field|sub
specifier|public
name|CountSlotAcc
name|sub
decl_stmt|;
DECL|field|numDocs
specifier|public
name|int
name|numDocs
decl_stmt|;
DECL|field|numSlots
specifier|public
name|int
name|numSlots
decl_stmt|;
DECL|method|Acc
specifier|public
name|Acc
parameter_list|(
name|FacetContext
name|fcontext
parameter_list|,
name|int
name|numDocs
parameter_list|,
name|int
name|numSlots
parameter_list|)
block|{
name|super
argument_list|(
name|fcontext
argument_list|)
expr_stmt|;
name|this
operator|.
name|last
operator|=
name|this
expr_stmt|;
name|this
operator|.
name|numDocs
operator|=
name|numDocs
expr_stmt|;
name|this
operator|.
name|numSlots
operator|=
name|numSlots
expr_stmt|;
name|creates
operator|.
name|addAndGet
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|sub
operator|=
operator|new
name|CountSlotArrAcc
argument_list|(
name|fcontext
argument_list|,
name|numSlots
argument_list|)
expr_stmt|;
operator|new
name|RuntimeException
argument_list|(
literal|"DEBUG Acc numSlots="
operator|+
name|numSlots
argument_list|)
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|collect
specifier|public
name|void
name|collect
parameter_list|(
name|int
name|doc
parameter_list|,
name|int
name|slot
parameter_list|)
throws|throws
name|IOException
block|{
name|sub
operator|.
name|collect
argument_list|(
name|doc
argument_list|,
name|slot
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|compare
specifier|public
name|int
name|compare
parameter_list|(
name|int
name|slotA
parameter_list|,
name|int
name|slotB
parameter_list|)
block|{
return|return
name|sub
operator|.
name|compare
argument_list|(
name|slotA
argument_list|,
name|slotB
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getValue
specifier|public
name|Object
name|getValue
parameter_list|(
name|int
name|slotNum
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|sub
operator|.
name|getValue
argument_list|(
name|slotNum
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|reset
specifier|public
name|void
name|reset
parameter_list|()
throws|throws
name|IOException
block|{
name|resets
operator|.
name|addAndGet
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|sub
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|resize
specifier|public
name|void
name|resize
parameter_list|(
name|Resizer
name|resizer
parameter_list|)
block|{
name|resizes
operator|.
name|addAndGet
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|this
operator|.
name|numSlots
operator|=
name|resizer
operator|.
name|getNewSize
argument_list|()
expr_stmt|;
name|sub
operator|.
name|resize
argument_list|(
name|resizer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setNextReader
specifier|public
name|void
name|setNextReader
parameter_list|(
name|LeafReaderContext
name|readerContext
parameter_list|)
throws|throws
name|IOException
block|{
name|sub
operator|.
name|setNextReader
argument_list|(
name|readerContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|collect
specifier|public
name|int
name|collect
parameter_list|(
name|DocSet
name|docs
parameter_list|,
name|int
name|slot
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|sub
operator|.
name|collect
argument_list|(
name|docs
argument_list|,
name|slot
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setValues
specifier|public
name|void
name|setValues
parameter_list|(
name|SimpleOrderedMap
argument_list|<
name|Object
argument_list|>
name|bucket
parameter_list|,
name|int
name|slotNum
parameter_list|)
throws|throws
name|IOException
block|{
name|sub
operator|.
name|key
operator|=
name|this
operator|.
name|key
expr_stmt|;
comment|// TODO: Blech... this should be fixed
name|sub
operator|.
name|setValues
argument_list|(
name|bucket
argument_list|,
name|slotNum
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|sub
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createFacetMerger
specifier|public
name|FacetMerger
name|createFacetMerger
parameter_list|(
name|Object
name|prototype
parameter_list|)
block|{
return|return
operator|new
name|FacetLongMerger
argument_list|()
return|;
block|}
block|}
end_class

end_unit

