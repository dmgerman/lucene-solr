begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.util.configuration
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestRuleRestoreSystemProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|SSLConfigurationsTest
specifier|public
class|class
name|SSLConfigurationsTest
block|{
DECL|field|envs
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|envs
decl_stmt|;
DECL|field|sut
specifier|private
name|SSLConfigurations
name|sut
decl_stmt|;
DECL|field|SAMPLE_PW1
specifier|public
specifier|static
specifier|final
name|String
name|SAMPLE_PW1
init|=
literal|"pw123"
decl_stmt|;
DECL|field|SAMPLE_PW2
specifier|public
specifier|static
specifier|final
name|String
name|SAMPLE_PW2
init|=
literal|"pw456"
decl_stmt|;
DECL|field|SAMPLE_PW3
specifier|public
specifier|static
specifier|final
name|String
name|SAMPLE_PW3
init|=
literal|"pw789"
decl_stmt|;
DECL|field|KEY_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|KEY_STORE_PASSWORD
init|=
name|SSLConfigurations
operator|.
name|SysProps
operator|.
name|SSL_KEY_STORE_PASSWORD
decl_stmt|;
DECL|field|TRUST_STORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|TRUST_STORE_PASSWORD
init|=
name|SSLConfigurations
operator|.
name|SysProps
operator|.
name|SSL_TRUST_STORE_PASSWORD
decl_stmt|;
annotation|@
name|Rule
DECL|field|syspropRestore
specifier|public
name|TestRule
name|syspropRestore
init|=
operator|new
name|TestRuleRestoreSystemProperties
argument_list|(
name|SSLConfigurations
operator|.
name|SysProps
operator|.
name|SSL_KEY_STORE_PASSWORD
argument_list|,
name|SSLConfigurations
operator|.
name|SysProps
operator|.
name|SSL_TRUST_STORE_PASSWORD
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|envs
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|createSut
specifier|private
name|SSLConfigurations
name|createSut
parameter_list|()
block|{
name|sut
operator|=
operator|new
name|SSLConfigurations
argument_list|(
name|envs
argument_list|)
expr_stmt|;
return|return
name|sut
return|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigKeystorePwFromKeystoreEnvVar
specifier|public
name|void
name|testSslConfigKeystorePwFromKeystoreEnvVar
parameter_list|()
block|{
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW1
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|KEY_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigKeystorePwFromClientKeystoreEnvVar
specifier|public
name|void
name|testSslConfigKeystorePwFromClientKeystoreEnvVar
parameter_list|()
block|{
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW2
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|KEY_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigKeystorePwFromBothEnvVars
specifier|public
name|void
name|testSslConfigKeystorePwFromBothEnvVars
parameter_list|()
block|{
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW1
argument_list|)
expr_stmt|;
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW2
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|KEY_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigKeystorePwNotOverwrittenIfExists
specifier|public
name|void
name|testSslConfigKeystorePwNotOverwrittenIfExists
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW3
argument_list|)
expr_stmt|;
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW1
argument_list|)
expr_stmt|;
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_KEY_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW2
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|KEY_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW3
argument_list|)
argument_list|)
expr_stmt|;
comment|// unchanged
block|}
annotation|@
name|Test
DECL|method|testSslConfigTruststorePwFromKeystoreEnvVar
specifier|public
name|void
name|testSslConfigTruststorePwFromKeystoreEnvVar
parameter_list|()
block|{
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW1
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|TRUST_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigTruststorePwFromClientKeystoreEnvVar
specifier|public
name|void
name|testSslConfigTruststorePwFromClientKeystoreEnvVar
parameter_list|()
block|{
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW2
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|TRUST_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigTruststorePwFromBothEnvVars
specifier|public
name|void
name|testSslConfigTruststorePwFromBothEnvVars
parameter_list|()
block|{
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW1
argument_list|)
expr_stmt|;
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW2
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|TRUST_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSslConfigTruststorePwNotOverwrittenIfExists
specifier|public
name|void
name|testSslConfigTruststorePwNotOverwrittenIfExists
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW3
argument_list|)
expr_stmt|;
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW1
argument_list|)
expr_stmt|;
name|envs
operator|.
name|put
argument_list|(
name|SSLConfigurations
operator|.
name|EnvVars
operator|.
name|SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD
argument_list|,
name|SAMPLE_PW2
argument_list|)
expr_stmt|;
name|createSut
argument_list|()
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|TRUST_STORE_PASSWORD
argument_list|)
argument_list|,
name|is
argument_list|(
name|SAMPLE_PW3
argument_list|)
argument_list|)
expr_stmt|;
comment|// unchanged
block|}
block|}
end_class

end_unit

