begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|FileTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Period
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|CommandLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|SolrCLI
operator|.
name|findTool
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|SolrCLI
operator|.
name|parseCmdLine
import|;
end_import

begin_comment
comment|/**  * Unit test for SolrCLI's UtilsTool  */
end_comment

begin_class
DECL|class|UtilsToolTest
specifier|public
class|class
name|UtilsToolTest
extends|extends
name|SolrTestCaseJ4
block|{
DECL|field|dir
specifier|private
name|Path
name|dir
decl_stmt|;
DECL|field|tool
specifier|private
name|SolrCLI
operator|.
name|UtilsTool
name|tool
decl_stmt|;
DECL|field|files
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|files
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"solr.log"
argument_list|,
literal|"solr.log.1"
argument_list|,
literal|"solr.log.2"
argument_list|,
literal|"solr.log.3"
argument_list|,
literal|"solr.log.9"
argument_list|,
literal|"solr.log.10"
argument_list|,
literal|"solr.log.11"
argument_list|,
literal|"solr_log_20160102"
argument_list|,
literal|"solr_log_20160304"
argument_list|,
literal|"solr-8983-console.log"
argument_list|,
literal|"solr_gc_log_20160102"
argument_list|,
literal|"solr_gc_log_2"
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|dir
operator|=
name|createTempDir
argument_list|(
literal|"Utils Tool Test"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
expr_stmt|;
name|files
operator|.
name|forEach
argument_list|(
name|f
lambda|->
block|{
try|try
block|{
name|Files
operator|.
name|createFile
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Error when creating temporary file "
operator|+
name|dir
operator|.
name|resolve
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|dir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyAndQuiet
specifier|public
name|void
name|testEmptyAndQuiet
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-remove_old_solr_logs"
block|,
literal|"7"
block|,
literal|"-rotate_solr_logs"
block|,
literal|"9"
block|,
literal|"-archive_gc_logs"
block|,
literal|"-archive_console_logs"
block|,
literal|"-q"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNonexisting
specifier|public
name|void
name|testNonexisting
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nonexisting
init|=
name|dir
operator|.
name|resolve
argument_list|(
literal|"non-existing"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-remove_old_solr_logs"
block|,
literal|"7"
block|,
literal|"-rotate_solr_logs"
block|,
literal|"9"
block|,
literal|"-archive_gc_logs"
block|,
literal|"-archive_console_logs"
block|,
literal|"-l"
block|,
name|nonexisting
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveOldSolrLogs
specifier|public
name|void
name|testRemoveOldSolrLogs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-remove_old_solr_logs"
block|,
literal|"1"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// No logs older than 1 day
name|Files
operator|.
name|setLastModifiedTime
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"solr_log_20160102"
argument_list|)
argument_list|,
name|FileTime
operator|.
name|from
argument_list|(
name|Instant
operator|.
name|now
argument_list|()
operator|.
name|minus
argument_list|(
name|Period
operator|.
name|ofDays
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// One logs older than 1 day
name|Files
operator|.
name|setLastModifiedTime
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"solr_log_20160304"
argument_list|)
argument_list|,
name|FileTime
operator|.
name|from
argument_list|(
name|Instant
operator|.
name|now
argument_list|()
operator|.
name|minus
argument_list|(
name|Period
operator|.
name|ofDays
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|-
literal|2
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// Two logs older than 1 day
block|}
annotation|@
name|Test
DECL|method|testRelativePath
specifier|public
name|void
name|testRelativePath
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-remove_old_solr_logs"
block|,
literal|"0"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
block|,
literal|"-s"
block|,
name|dir
operator|.
name|getParent
argument_list|()
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|-
literal|2
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelativePathError
specifier|public
name|void
name|testRelativePathError
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-remove_old_solr_logs"
block|,
literal|"0"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
try|try
block|{
name|runTool
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return;
block|}
name|fail
argument_list|(
literal|"Should have thrown exception if using relative path without -s"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveOldGcLogs
specifier|public
name|void
name|testRemoveOldGcLogs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-archive_gc_logs"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|-
literal|2
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr_gc_log_2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"archived"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"solr_gc_log_2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"archived"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"solr_gc_log_2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testArchiveConsoleLogs
specifier|public
name|void
name|testArchiveConsoleLogs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-archive_console_logs"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr-8983-console.log"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"archived"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"solr-8983-console.log"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|Files
operator|.
name|exists
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"archived"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"solr-8983-console.log"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRotateSolrLogs
specifier|public
name|void
name|testRotateSolrLogs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
block|{
literal|"utils"
block|,
literal|"-rotate_solr_logs"
block|,
literal|"9"
block|,
literal|"-l"
block|,
name|dir
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr.log"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|-
literal|3
argument_list|,
name|fileCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr.log.4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr.log"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr.log.9"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr.log.10"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|listFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"solr.log.11"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|listFiles
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|listFiles
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|Files
operator|.
name|find
argument_list|(
name|dir
argument_list|,
literal|1
argument_list|,
parameter_list|(
name|p
parameter_list|,
name|a
parameter_list|)
lambda|->
name|a
operator|.
name|isRegularFile
argument_list|()
argument_list|)
operator|.
name|map
argument_list|(
name|p
lambda|->
name|p
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
DECL|method|fileCount
specifier|private
name|long
name|fileCount
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|listFiles
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|runTool
specifier|private
name|int
name|runTool
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|SolrCLI
operator|.
name|Tool
name|tool
init|=
name|findTool
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|CommandLine
name|cli
init|=
name|parseCmdLine
argument_list|(
name|args
argument_list|,
name|tool
operator|.
name|getOptions
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|tool
operator|.
name|runTool
argument_list|(
name|cli
argument_list|)
return|;
block|}
block|}
end_class

end_unit

