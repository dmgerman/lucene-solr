begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.update
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
operator|.
name|DistributingUpdateProcessorFactory
operator|.
name|DISTRIB_UPDATE_PARAM
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|BaseDistributedSearchTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
operator|.
name|SuppressSSL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|QueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|StrUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
operator|.
name|DistributedUpdateProcessor
operator|.
name|DistribPhase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * This test is deliberately kept in different class as we don't want segment merging to kick in after deleting documents.  * This ensures that first check the cached IndexFingerprint and   * recompute it only if any documents in the segment were deleted since caching the fingerprint first time around    *     *    */
end_comment

begin_class
annotation|@
name|SuppressSSL
argument_list|(
name|bugUrl
operator|=
literal|"https://issues.apache.org/jira/browse/SOLR-5776"
argument_list|)
DECL|class|PeerSyncWithIndexFingerprintCachingTest
specifier|public
class|class
name|PeerSyncWithIndexFingerprintCachingTest
extends|extends
name|BaseDistributedSearchTestCase
block|{
DECL|field|numVersions
specifier|private
specifier|static
name|int
name|numVersions
init|=
literal|100
decl_stmt|;
comment|// number of versions to use when syncing
DECL|field|FROM_LEADER
specifier|private
specifier|final
name|String
name|FROM_LEADER
init|=
name|DistribPhase
operator|.
name|FROMLEADER
operator|.
name|toString
argument_list|()
decl_stmt|;
DECL|field|seenLeader
specifier|private
name|ModifiableSolrParams
name|seenLeader
init|=
name|params
argument_list|(
name|DISTRIB_UPDATE_PARAM
argument_list|,
name|FROM_LEADER
argument_list|)
decl_stmt|;
DECL|method|PeerSyncWithIndexFingerprintCachingTest
specifier|public
name|PeerSyncWithIndexFingerprintCachingTest
parameter_list|()
block|{
name|stress
operator|=
literal|0
expr_stmt|;
comment|// TODO: a better way to do this?
name|configString
operator|=
literal|"solrconfig-tlog.xml"
expr_stmt|;
name|schemaString
operator|=
literal|"schema.xml"
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|ShardsFixed
argument_list|(
name|num
operator|=
literal|3
argument_list|)
DECL|method|test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|handle
operator|.
name|clear
argument_list|()
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"timestamp"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"score"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
name|handle
operator|.
name|put
argument_list|(
literal|"maxScore"
argument_list|,
name|SKIPVAL
argument_list|)
expr_stmt|;
name|SolrClient
name|client0
init|=
name|clients
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrClient
name|client1
init|=
name|clients
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|long
name|v
init|=
literal|1
decl_stmt|;
for|for
control|(
init|;
name|v
operator|<
literal|8
condition|;
operator|++
name|v
control|)
block|{
name|add
argument_list|(
name|client0
argument_list|,
name|seenLeader
argument_list|,
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|v
argument_list|,
literal|"_version_"
argument_list|,
name|v
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|client1
argument_list|,
name|seenLeader
argument_list|,
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|v
argument_list|,
literal|"_version_"
argument_list|,
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|client0
operator|.
name|commit
argument_list|()
expr_stmt|;
name|client1
operator|.
name|commit
argument_list|()
expr_stmt|;
name|IndexFingerprint
name|before
init|=
name|getFingerprint
argument_list|(
name|client0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|del
argument_list|(
name|client0
argument_list|,
name|params
argument_list|(
name|DISTRIB_UPDATE_PARAM
argument_list|,
name|FROM_LEADER
argument_list|,
literal|"_version_"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
operator|-
operator|++
name|v
argument_list|)
argument_list|)
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|client0
operator|.
name|commit
argument_list|()
expr_stmt|;
name|IndexFingerprint
name|after
init|=
name|getFingerprint
argument_list|(
name|client0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
comment|// make sure fingerprint before and after deleting are not the same
name|Assert
operator|.
name|assertTrue
argument_list|(
name|IndexFingerprint
operator|.
name|compare
argument_list|(
name|before
argument_list|,
name|after
argument_list|)
operator|!=
literal|0
argument_list|)
expr_stmt|;
comment|// replica which missed the delete should be able to sync
name|assertSync
argument_list|(
name|client1
argument_list|,
name|numVersions
argument_list|,
literal|true
argument_list|,
name|shardsArr
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|client0
operator|.
name|commit
argument_list|()
expr_stmt|;
name|client1
operator|.
name|commit
argument_list|()
expr_stmt|;
name|queryAndCompare
argument_list|(
name|params
argument_list|(
literal|"q"
argument_list|,
literal|"*:*"
argument_list|,
literal|"sort"
argument_list|,
literal|"_version_ desc"
argument_list|)
argument_list|,
name|client0
argument_list|,
name|client1
argument_list|)
expr_stmt|;
block|}
DECL|method|getFingerprint
name|IndexFingerprint
name|getFingerprint
parameter_list|(
name|SolrClient
name|client
parameter_list|,
name|long
name|maxVersion
parameter_list|)
throws|throws
name|IOException
throws|,
name|SolrServerException
block|{
name|QueryRequest
name|qr
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"getFingerprint"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|maxVersion
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|NamedList
name|rsp
init|=
name|client
operator|.
name|request
argument_list|(
name|qr
argument_list|)
decl_stmt|;
return|return
name|IndexFingerprint
operator|.
name|fromObject
argument_list|(
name|rsp
operator|.
name|get
argument_list|(
literal|"fingerprint"
argument_list|)
argument_list|)
return|;
block|}
DECL|method|assertSync
name|void
name|assertSync
parameter_list|(
name|SolrClient
name|client
parameter_list|,
name|int
name|numVersions
parameter_list|,
name|boolean
name|expectedResult
parameter_list|,
name|String
modifier|...
name|syncWith
parameter_list|)
throws|throws
name|IOException
throws|,
name|SolrServerException
block|{
name|QueryRequest
name|qr
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"getVersions"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|numVersions
argument_list|)
argument_list|,
literal|"sync"
argument_list|,
name|StrUtils
operator|.
name|join
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|syncWith
argument_list|)
argument_list|,
literal|','
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|NamedList
name|rsp
init|=
name|client
operator|.
name|request
argument_list|(
name|qr
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedResult
argument_list|,
operator|(
name|Boolean
operator|)
name|rsp
operator|.
name|get
argument_list|(
literal|"sync"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

