begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.update
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Meter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test proper registration and collection of index and directory metrics.  */
end_comment

begin_class
DECL|class|SolrIndexMetricsTest
specifier|public
class|class
name|SolrIndexMetricsTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|After
DECL|method|afterMethod
specifier|public
name|void
name|afterMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|deleteCore
argument_list|()
expr_stmt|;
block|}
DECL|method|addDocs
specifier|private
name|void
name|addDocs
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrQueryRequest
name|req
init|=
name|lrf
operator|.
name|makeRequest
argument_list|()
decl_stmt|;
name|UpdateHandler
name|uh
init|=
name|req
operator|.
name|getCore
argument_list|()
operator|.
name|getUpdateHandler
argument_list|()
decl_stmt|;
name|AddUpdateCommand
name|add
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|add
operator|.
name|clear
argument_list|()
expr_stmt|;
name|add
operator|.
name|solrDoc
operator|=
operator|new
name|SolrInputDocument
argument_list|()
expr_stmt|;
name|add
operator|.
name|solrDoc
operator|.
name|addField
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
expr_stmt|;
name|add
operator|.
name|solrDoc
operator|.
name|addField
argument_list|(
literal|"foo_s"
argument_list|,
literal|"foo-"
operator|+
name|i
argument_list|)
expr_stmt|;
name|uh
operator|.
name|addDoc
argument_list|(
name|add
argument_list|)
expr_stmt|;
block|}
name|uh
operator|.
name|commit
argument_list|(
operator|new
name|CommitUpdateCommand
argument_list|(
name|req
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure all merges are finished
name|h
operator|.
name|reload
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIndexMetricsNoDetails
specifier|public
name|void
name|testIndexMetricsNoDetails
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.merge"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.mergeDetails"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.directory"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.directoryDetails"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|initCore
argument_list|(
literal|"solrconfig-indexmetrics.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
name|addDocs
argument_list|()
expr_stmt|;
name|MetricRegistry
name|registry
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|getMetricManager
argument_list|()
operator|.
name|registry
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getCoreMetricManager
argument_list|()
operator|.
name|getRegistryName
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|registry
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|metrics
init|=
name|registry
operator|.
name|getMetrics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|metrics
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"INDEX"
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|metrics
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"DIRECTORY"
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// check basic index meters
name|Timer
name|timer
init|=
operator|(
name|Timer
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.merge.minor"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"minorMerge: "
operator|+
name|timer
operator|.
name|getCount
argument_list|()
argument_list|,
name|timer
operator|.
name|getCount
argument_list|()
operator|>=
literal|3
argument_list|)
expr_stmt|;
name|timer
operator|=
operator|(
name|Timer
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.merge.major"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"majorMerge: "
operator|+
name|timer
operator|.
name|getCount
argument_list|()
argument_list|,
literal|0
argument_list|,
name|timer
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// check detailed meters
name|assertNull
argument_list|(
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.merge.major.docs"
argument_list|)
argument_list|)
expr_stmt|;
name|Meter
name|meter
init|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.flush"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"flush: "
operator|+
name|meter
operator|.
name|getCount
argument_list|()
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|10
argument_list|)
expr_stmt|;
comment|// check basic directory meters
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.reads"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"totalReads"
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.writes"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"totalWrites"
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// check detailed meters
name|Histogram
name|histogram
init|=
operator|(
name|Histogram
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.readSizes"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"readSizes"
argument_list|,
name|histogram
argument_list|)
expr_stmt|;
name|histogram
operator|=
operator|(
name|Histogram
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.writeSizes"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"writeSizes"
argument_list|,
name|histogram
argument_list|)
expr_stmt|;
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.segments.writes"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"segmentsWrites"
argument_list|,
name|meter
argument_list|)
expr_stmt|;
name|histogram
operator|=
operator|(
name|Histogram
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.segments.writeSizes"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"segmentsWriteSizes"
argument_list|,
name|histogram
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIndexNoMetrics
specifier|public
name|void
name|testIndexNoMetrics
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.merge"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.mergeDetails"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.directory"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.directoryDetails"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|initCore
argument_list|(
literal|"solrconfig-indexmetrics.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
name|addDocs
argument_list|()
expr_stmt|;
name|MetricRegistry
name|registry
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|getMetricManager
argument_list|()
operator|.
name|registry
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getCoreMetricManager
argument_list|()
operator|.
name|getRegistryName
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|registry
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|metrics
init|=
name|registry
operator|.
name|getMetrics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|metrics
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"INDEX"
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// this is variable, depending on the codec and the number of created files
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|metrics
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"DIRECTORY"
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIndexMetricsWithDetails
specifier|public
name|void
name|testIndexMetricsWithDetails
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.merge"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
comment|// test mergeDetails override too
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.mergeDetails"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.directory"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.tests.metrics.directoryDetails"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|initCore
argument_list|(
literal|"solrconfig-indexmetrics.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
name|addDocs
argument_list|()
expr_stmt|;
name|MetricRegistry
name|registry
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|getMetricManager
argument_list|()
operator|.
name|registry
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getCoreMetricManager
argument_list|()
operator|.
name|getRegistryName
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|registry
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|metrics
init|=
name|registry
operator|.
name|getMetrics
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|metrics
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"INDEX"
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
operator|>=
literal|12
argument_list|)
expr_stmt|;
comment|// this is variable, depending on the codec and the number of created files
name|assertTrue
argument_list|(
name|metrics
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"DIRECTORY"
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
operator|>
literal|20
argument_list|)
expr_stmt|;
comment|// check basic index meters
name|Timer
name|timer
init|=
operator|(
name|Timer
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.merge.minor"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"minorMerge: "
operator|+
name|timer
operator|.
name|getCount
argument_list|()
argument_list|,
name|timer
operator|.
name|getCount
argument_list|()
operator|>=
literal|3
argument_list|)
expr_stmt|;
name|timer
operator|=
operator|(
name|Timer
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.merge.major"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"majorMerge: "
operator|+
name|timer
operator|.
name|getCount
argument_list|()
argument_list|,
literal|0
argument_list|,
name|timer
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// check detailed meters
name|Meter
name|meter
init|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.merge.major.docs"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"majorMergeDocs: "
operator|+
name|meter
operator|.
name|getCount
argument_list|()
argument_list|,
literal|0
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"INDEX.flush"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"flush: "
operator|+
name|meter
operator|.
name|getCount
argument_list|()
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|10
argument_list|)
expr_stmt|;
comment|// check basic directory meters
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.reads"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"totalReads"
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.writes"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"totalWrites"
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// check detailed meters
name|Histogram
name|histogram
init|=
operator|(
name|Histogram
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.readSizes"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"readSizes"
argument_list|,
name|histogram
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|histogram
operator|=
operator|(
name|Histogram
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.total.writeSizes"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"writeSizes"
argument_list|,
name|histogram
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|meter
operator|=
operator|(
name|Meter
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.segments.writes"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"segmentsWrites"
argument_list|,
name|meter
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|histogram
operator|=
operator|(
name|Histogram
operator|)
name|metrics
operator|.
name|get
argument_list|(
literal|"DIRECTORY.segments.writeSizes"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"segmentsWriteSizes"
argument_list|,
name|histogram
operator|.
name|getCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

