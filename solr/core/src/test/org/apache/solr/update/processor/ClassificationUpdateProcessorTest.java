begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.update.processor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockTokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|AddUpdateCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_comment
comment|/**  * Tests for {@link ClassificationUpdateProcessor}  */
end_comment

begin_class
DECL|class|ClassificationUpdateProcessorTest
specifier|public
class|class
name|ClassificationUpdateProcessorTest
extends|extends
name|SolrTestCaseJ4
block|{
comment|/* field names are used in accordance with the solrconfig and schema supplied */
DECL|field|ID
specifier|private
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"id"
decl_stmt|;
DECL|field|TITLE
specifier|private
specifier|static
specifier|final
name|String
name|TITLE
init|=
literal|"title"
decl_stmt|;
DECL|field|CONTENT
specifier|private
specifier|static
specifier|final
name|String
name|CONTENT
init|=
literal|"content"
decl_stmt|;
DECL|field|AUTHOR
specifier|private
specifier|static
specifier|final
name|String
name|AUTHOR
init|=
literal|"author"
decl_stmt|;
DECL|field|TRAINING_CLASS
specifier|private
specifier|static
specifier|final
name|String
name|TRAINING_CLASS
init|=
literal|"cat"
decl_stmt|;
DECL|field|PREDICTED_CLASS
specifier|private
specifier|static
specifier|final
name|String
name|PREDICTED_CLASS
init|=
literal|"predicted"
decl_stmt|;
DECL|field|KNN
specifier|public
specifier|static
specifier|final
name|String
name|KNN
init|=
literal|"knn"
decl_stmt|;
DECL|field|directory
specifier|protected
name|Directory
name|directory
decl_stmt|;
DECL|field|reader
specifier|protected
name|IndexReader
name|reader
decl_stmt|;
DECL|field|searcher
specifier|protected
name|IndexSearcher
name|searcher
decl_stmt|;
DECL|field|analyzer
specifier|protected
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|,
name|MockTokenizer
operator|.
name|WHITESPACE
argument_list|,
literal|false
argument_list|)
decl_stmt|;
DECL|field|updateProcessorToTest
specifier|private
name|ClassificationUpdateProcessor
name|updateProcessorToTest
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"enable.update.log"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|initCore
argument_list|(
literal|"solrconfig-classification.xml"
argument_list|,
literal|"schema-classification.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|directory
operator|.
name|close
argument_list|()
expr_stmt|;
name|analyzer
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|classificationMonoClass_predictedClassFieldSet_shouldAssignClassInPredictedClassField
specifier|public
name|void
name|classificationMonoClass_predictedClassFieldSet_shouldAssignClassInPredictedClassField
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMonoClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|params
operator|.
name|setPredictedClassField
argument_list|(
name|PREDICTED_CLASS
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unseenDocument1
operator|.
name|getFieldValue
argument_list|(
name|PREDICTED_CLASS
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|knnMonoClass_sampleParams_shouldAssignCorrectClass
specifier|public
name|void
name|knnMonoClass_sampleParams_shouldAssignCorrectClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMonoClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unseenDocument1
operator|.
name|getFieldValue
argument_list|(
name|TRAINING_CLASS
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|knnMonoClass_boostFields_shouldAssignCorrectClass
specifier|public
name|void
name|knnMonoClass_boostFields_shouldAssignCorrectClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMonoClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|params
operator|.
name|setInputFieldNames
argument_list|(
operator|new
name|String
index|[]
block|{
name|TITLE
operator|+
literal|"^1.5"
block|,
name|CONTENT
operator|+
literal|"^0.5"
block|,
name|AUTHOR
operator|+
literal|"^2.5"
block|}
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unseenDocument1
operator|.
name|getFieldValue
argument_list|(
name|TRAINING_CLASS
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|bayesMonoClass_sampleParams_shouldAssignCorrectClass
specifier|public
name|void
name|bayesMonoClass_sampleParams_shouldAssignCorrectClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMonoClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|BAYES
argument_list|)
decl_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unseenDocument1
operator|.
name|getFieldValue
argument_list|(
name|TRAINING_CLASS
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|knnMonoClass_contextQueryFiltered_shouldAssignCorrectClass
specifier|public
name|void
name|knnMonoClass_contextQueryFiltered_shouldAssignCorrectClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMonoClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|Query
name|class3DocsChunk
init|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|TITLE
argument_list|,
literal|"word6"
argument_list|)
argument_list|)
decl_stmt|;
name|params
operator|.
name|setTrainingFilterQuery
argument_list|(
name|class3DocsChunk
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unseenDocument1
operator|.
name|getFieldValue
argument_list|(
name|TRAINING_CLASS
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|bayesMonoClass_boostFields_shouldAssignCorrectClass
specifier|public
name|void
name|bayesMonoClass_boostFields_shouldAssignCorrectClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMonoClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|BAYES
argument_list|)
decl_stmt|;
name|params
operator|.
name|setInputFieldNames
argument_list|(
operator|new
name|String
index|[]
block|{
name|TITLE
operator|+
literal|"^1.5"
block|,
name|CONTENT
operator|+
literal|"^0.5"
block|,
name|AUTHOR
operator|+
literal|"^2.5"
block|}
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unseenDocument1
operator|.
name|getFieldValue
argument_list|(
name|TRAINING_CLASS
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass
specifier|public
name|void
name|knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMultiClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|params
operator|.
name|setMaxPredictedClasses
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|assignedClasses
init|=
operator|(
name|ArrayList
operator|)
name|unseenDocument1
operator|.
name|getFieldValues
argument_list|(
name|TRAINING_CLASS
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes
specifier|public
name|void
name|knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMultiClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|params
operator|.
name|setMaxPredictedClasses
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|assignedClasses
init|=
operator|(
name|ArrayList
operator|)
name|unseenDocument1
operator|.
name|getFieldValues
argument_list|(
name|TRAINING_CLASS
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|bayesMultiClass_maxOutputClasses2_shouldAssignMax2Classes
specifier|public
name|void
name|bayesMultiClass_maxOutputClasses2_shouldAssignMax2Classes
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMultiClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|BAYES
argument_list|)
decl_stmt|;
name|params
operator|.
name|setMaxPredictedClasses
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|assignedClasses
init|=
operator|(
name|ArrayList
operator|)
name|unseenDocument1
operator|.
name|getFieldValues
argument_list|(
name|TRAINING_CLASS
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|knnMultiClass_boostFieldsMaxOutputClasses2_shouldAssignMax2Classes
specifier|public
name|void
name|knnMultiClass_boostFieldsMaxOutputClasses2_shouldAssignMax2Classes
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMultiClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|KNN
argument_list|)
decl_stmt|;
name|params
operator|.
name|setInputFieldNames
argument_list|(
operator|new
name|String
index|[]
block|{
name|TITLE
operator|+
literal|"^1.5"
block|,
name|CONTENT
operator|+
literal|"^0.5"
block|,
name|AUTHOR
operator|+
literal|"^2.5"
block|}
argument_list|)
expr_stmt|;
name|params
operator|.
name|setMaxPredictedClasses
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|assignedClasses
init|=
operator|(
name|ArrayList
operator|)
name|unseenDocument1
operator|.
name|getFieldValues
argument_list|(
name|TRAINING_CLASS
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class6"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|bayesMultiClass_boostFieldsMaxOutputClasses2_shouldAssignMax2Classes
specifier|public
name|void
name|bayesMultiClass_boostFieldsMaxOutputClasses2_shouldAssignMax2Classes
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateRequestProcessor
name|mockProcessor
init|=
name|mock
argument_list|(
name|UpdateRequestProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|prepareTrainedIndexMultiClass
argument_list|()
expr_stmt|;
name|AddUpdateCommand
name|update
init|=
operator|new
name|AddUpdateCommand
argument_list|(
name|req
argument_list|()
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|unseenDocument1
init|=
name|sdoc
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 "
argument_list|,
name|AUTHOR
argument_list|,
literal|"unseenAuthor"
argument_list|)
decl_stmt|;
name|update
operator|.
name|solrDoc
operator|=
name|unseenDocument1
expr_stmt|;
name|ClassificationUpdateProcessorParams
name|params
init|=
name|initParams
argument_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
operator|.
name|BAYES
argument_list|)
decl_stmt|;
name|params
operator|.
name|setInputFieldNames
argument_list|(
operator|new
name|String
index|[]
block|{
name|TITLE
operator|+
literal|"^1.5"
block|,
name|CONTENT
operator|+
literal|"^0.5"
block|,
name|AUTHOR
operator|+
literal|"^2.5"
block|}
argument_list|)
expr_stmt|;
name|params
operator|.
name|setMaxPredictedClasses
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|=
operator|new
name|ClassificationUpdateProcessor
argument_list|(
name|params
argument_list|,
name|mockProcessor
argument_list|,
name|reader
argument_list|,
name|req
argument_list|()
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|updateProcessorToTest
operator|.
name|processAdd
argument_list|(
name|update
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|assignedClasses
init|=
operator|(
name|ArrayList
operator|)
name|unseenDocument1
operator|.
name|getFieldValues
argument_list|(
name|TRAINING_CLASS
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|assignedClasses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"class6"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|initParams
specifier|private
name|ClassificationUpdateProcessorParams
name|initParams
parameter_list|(
name|ClassificationUpdateProcessorFactory
operator|.
name|Algorithm
name|classificationAlgorithm
parameter_list|)
block|{
name|ClassificationUpdateProcessorParams
name|params
init|=
operator|new
name|ClassificationUpdateProcessorParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|setInputFieldNames
argument_list|(
operator|new
name|String
index|[]
block|{
name|TITLE
block|,
name|CONTENT
block|,
name|AUTHOR
block|}
argument_list|)
expr_stmt|;
name|params
operator|.
name|setTrainingClassField
argument_list|(
name|TRAINING_CLASS
argument_list|)
expr_stmt|;
name|params
operator|.
name|setPredictedClassField
argument_list|(
name|TRAINING_CLASS
argument_list|)
expr_stmt|;
name|params
operator|.
name|setMinTf
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|params
operator|.
name|setMinDf
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|params
operator|.
name|setK
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|params
operator|.
name|setAlgorithm
argument_list|(
name|classificationAlgorithm
argument_list|)
expr_stmt|;
name|params
operator|.
name|setMaxPredictedClasses
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
comment|/**    * Index some example documents with a class manually assigned.    * This will be our trained model.    *    * @throws Exception If there is a low-level I/O error    */
DECL|method|prepareTrainedIndexMonoClass
specifier|private
name|void
name|prepareTrainedIndexMonoClass
parameter_list|()
throws|throws
name|Exception
block|{
name|directory
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|RandomIndexWriter
name|writer
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
comment|//class1
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"1"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"2"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"3"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"4"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|)
argument_list|)
expr_stmt|;
comment|//class2
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"5"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5 word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"c"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"6"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"c"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"7"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5 word5 word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"c"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"8"
argument_list|,
name|TITLE
argument_list|,
literal|"word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5 word5 word5 word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"c"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
comment|//class3
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"9"
argument_list|,
name|TITLE
argument_list|,
literal|"word6"
argument_list|,
name|CONTENT
argument_list|,
literal|"word7"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class3"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"10"
argument_list|,
name|TITLE
argument_list|,
literal|"word6"
argument_list|,
name|CONTENT
argument_list|,
literal|"word7"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class3"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"11"
argument_list|,
name|TITLE
argument_list|,
literal|"word6"
argument_list|,
name|CONTENT
argument_list|,
literal|"word7"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class3"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"12"
argument_list|,
name|TITLE
argument_list|,
literal|"word6"
argument_list|,
name|CONTENT
argument_list|,
literal|"word7"
argument_list|,
name|AUTHOR
argument_list|,
literal|"a"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class3"
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|=
name|writer
operator|.
name|getReader
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|searcher
operator|=
name|newSearcher
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
DECL|method|prepareTrainedIndexMultiClass
specifier|private
name|void
name|prepareTrainedIndexMultiClass
parameter_list|()
throws|throws
name|Exception
block|{
name|directory
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|RandomIndexWriter
name|writer
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|directory
argument_list|)
decl_stmt|;
comment|//class1
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"1"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name Surname"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"2"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name Surname"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class3"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"3"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name Surname"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"4"
argument_list|,
name|TITLE
argument_list|,
literal|"word1 word1 word1"
argument_list|,
name|CONTENT
argument_list|,
literal|"word2 word2 word2"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name Surname"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class2"
argument_list|)
argument_list|)
expr_stmt|;
comment|//class2
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"5"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5 word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name1 Surname1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class6"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class4"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"6"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name1 Surname1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class5"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class4"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"7"
argument_list|,
name|TITLE
argument_list|,
literal|"word4 word4 word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5 word5 word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name1 Surname1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class6"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class4"
argument_list|)
argument_list|)
expr_stmt|;
name|addDoc
argument_list|(
name|writer
argument_list|,
name|buildLuceneDocument
argument_list|(
name|ID
argument_list|,
literal|"8"
argument_list|,
name|TITLE
argument_list|,
literal|"word4"
argument_list|,
name|CONTENT
argument_list|,
literal|"word5 word5 word5 word5"
argument_list|,
name|AUTHOR
argument_list|,
literal|"Name1 Surname1"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class6"
argument_list|,
name|TRAINING_CLASS
argument_list|,
literal|"class4"
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|=
name|writer
operator|.
name|getReader
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|searcher
operator|=
name|newSearcher
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
DECL|method|buildLuceneDocument
specifier|public
specifier|static
name|Document
name|buildLuceneDocument
parameter_list|(
name|Object
modifier|...
name|fieldsAndValues
parameter_list|)
block|{
name|Document
name|luceneDoc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fieldsAndValues
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|luceneDoc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
operator|(
name|String
operator|)
name|fieldsAndValues
index|[
name|i
index|]
argument_list|,
operator|(
name|String
operator|)
name|fieldsAndValues
index|[
name|i
operator|+
literal|1
index|]
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|luceneDoc
return|;
block|}
DECL|method|addDoc
specifier|private
name|int
name|addDoc
parameter_list|(
name|RandomIndexWriter
name|writer
parameter_list|,
name|Document
name|doc
parameter_list|)
throws|throws
name|IOException
block|{
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
return|return
name|writer
operator|.
name|numDocs
argument_list|()
operator|-
literal|1
return|;
block|}
block|}
end_class

end_unit

