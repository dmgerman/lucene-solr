begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.metrics.reporters
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
operator|.
name|reporters
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectInstance
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|registry
operator|.
name|LocateRegistry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CoreAdminParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|PluginInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrInfoBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
operator|.
name|SolrCoreMetricManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
operator|.
name|SolrMetricManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
operator|.
name|SolrMetricProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
operator|.
name|SolrMetricReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|metrics
operator|.
name|SolrMetricTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|FieldType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|SolrJmxReporterTest
specifier|public
class|class
name|SolrJmxReporterTest
extends|extends
name|SolrTestCaseJ4
block|{
DECL|field|MAX_ITERATIONS
specifier|private
specifier|static
specifier|final
name|int
name|MAX_ITERATIONS
init|=
literal|20
decl_stmt|;
DECL|field|jmxPort
specifier|private
specifier|static
name|int
name|jmxPort
decl_stmt|;
DECL|field|domain
specifier|private
name|String
name|domain
decl_stmt|;
DECL|field|coreMetricManager
specifier|private
name|SolrCoreMetricManager
name|coreMetricManager
decl_stmt|;
DECL|field|metricManager
specifier|private
name|SolrMetricManager
name|metricManager
decl_stmt|;
DECL|field|reporter
specifier|private
name|SolrJmxReporter
name|reporter
decl_stmt|;
DECL|field|mBeanServer
specifier|private
name|MBeanServer
name|mBeanServer
decl_stmt|;
DECL|field|reporterName
specifier|private
name|String
name|reporterName
decl_stmt|;
DECL|field|rootName
specifier|private
name|String
name|rootName
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|init
specifier|public
specifier|static
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
name|jmxPort
operator|=
name|getNextAvailablePort
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|jmxPort
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
name|LocateRegistry
operator|.
name|createRegistry
argument_list|(
name|jmxPort
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|beforeTest
specifier|public
name|void
name|beforeTest
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig-basic.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
specifier|final
name|SolrCore
name|core
init|=
name|h
operator|.
name|getCore
argument_list|()
decl_stmt|;
name|domain
operator|=
name|core
operator|.
name|getName
argument_list|()
expr_stmt|;
name|rootName
operator|=
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|coreMetricManager
operator|=
name|core
operator|.
name|getCoreMetricManager
argument_list|()
expr_stmt|;
name|metricManager
operator|=
name|core
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|getMetricManager
argument_list|()
expr_stmt|;
name|PluginInfo
name|pluginInfo
init|=
name|createReporterPluginInfo
argument_list|(
name|rootName
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|metricManager
operator|.
name|loadReporter
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|,
name|coreMetricManager
operator|.
name|getCore
argument_list|()
operator|.
name|getResourceLoader
argument_list|()
argument_list|,
name|pluginInfo
argument_list|,
name|coreMetricManager
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|SolrMetricReporter
argument_list|>
name|reporters
init|=
name|metricManager
operator|.
name|getReporters
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"reporters.size should be> 0, but was + "
operator|+
name|reporters
operator|.
name|size
argument_list|()
argument_list|,
name|reporters
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|reporterName
operator|=
name|pluginInfo
operator|.
name|name
expr_stmt|;
name|String
name|taggedName
init|=
name|reporterName
operator|+
literal|"@"
operator|+
name|coreMetricManager
operator|.
name|getTag
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"reporter "
operator|+
name|taggedName
operator|+
literal|" not present among "
operator|+
name|reporters
argument_list|,
name|reporters
operator|.
name|get
argument_list|(
name|taggedName
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"wrong reporter class: "
operator|+
name|reporters
operator|.
name|get
argument_list|(
name|taggedName
argument_list|)
argument_list|,
name|reporters
operator|.
name|get
argument_list|(
name|taggedName
argument_list|)
operator|instanceof
name|SolrJmxReporter
argument_list|)
expr_stmt|;
name|reporter
operator|=
operator|(
name|SolrJmxReporter
operator|)
name|reporters
operator|.
name|get
argument_list|(
name|taggedName
argument_list|)
expr_stmt|;
name|mBeanServer
operator|=
name|reporter
operator|.
name|getMBeanServer
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"MBean server not found."
argument_list|,
name|mBeanServer
argument_list|)
expr_stmt|;
block|}
DECL|method|createReporterPluginInfo
specifier|private
name|PluginInfo
name|createReporterPluginInfo
parameter_list|(
name|String
name|rootName
parameter_list|,
name|boolean
name|enabled
parameter_list|)
block|{
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
name|String
name|className
init|=
name|SolrJmxReporter
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|reporterName
init|=
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|attrs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|attrs
operator|.
name|put
argument_list|(
name|FieldType
operator|.
name|CLASS_NAME
argument_list|,
name|className
argument_list|)
expr_stmt|;
name|attrs
operator|.
name|put
argument_list|(
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
name|reporterName
argument_list|)
expr_stmt|;
name|attrs
operator|.
name|put
argument_list|(
literal|"rootName"
argument_list|,
name|rootName
argument_list|)
expr_stmt|;
name|attrs
operator|.
name|put
argument_list|(
literal|"enabled"
argument_list|,
name|enabled
argument_list|)
expr_stmt|;
name|attrs
operator|.
name|put
argument_list|(
literal|"serviceUrl"
argument_list|,
literal|"service:jmx:rmi:///jndi/rmi://localhost:"
operator|+
name|jmxPort
operator|+
literal|"/solrjmx"
argument_list|)
expr_stmt|;
name|boolean
name|shouldOverrideDomain
init|=
name|random
operator|.
name|nextBoolean
argument_list|()
decl_stmt|;
if|if
condition|(
name|shouldOverrideDomain
condition|)
block|{
name|domain
operator|=
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|)
expr_stmt|;
name|attrs
operator|.
name|put
argument_list|(
literal|"domain"
argument_list|,
name|domain
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|PluginInfo
argument_list|(
name|TestUtil
operator|.
name|randomUnicodeString
argument_list|(
name|random
argument_list|)
argument_list|,
name|attrs
argument_list|)
return|;
block|}
annotation|@
name|After
DECL|method|afterTest
specifier|public
name|void
name|afterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|metricManager
operator|.
name|closeReporters
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|ObjectInstance
argument_list|>
name|objects
init|=
name|mBeanServer
operator|.
name|queryMBeans
argument_list|(
name|ObjectName
operator|.
name|getInstance
argument_list|(
name|domain
operator|+
literal|":*"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|objects
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|coreMetricManager
operator|.
name|close
argument_list|()
expr_stmt|;
name|deleteCore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportMetrics
specifier|public
name|void
name|testReportMetrics
parameter_list|()
throws|throws
name|Exception
block|{
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Counter
argument_list|>
name|registered
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|scope
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomScope
argument_list|(
name|random
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SolrInfoBean
operator|.
name|Category
name|category
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomCategory
argument_list|(
name|random
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|int
name|iterations
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|,
literal|0
argument_list|,
name|MAX_ITERATIONS
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iterations
condition|;
operator|++
name|i
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Counter
argument_list|>
name|metrics
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomMetricsWithReplacements
argument_list|(
name|random
argument_list|,
name|registered
argument_list|)
decl_stmt|;
name|SolrMetricProducer
name|producer
init|=
name|SolrMetricTestUtils
operator|.
name|getProducerOf
argument_list|(
name|metricManager
argument_list|,
name|category
argument_list|,
name|scope
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
name|coreMetricManager
operator|.
name|registerMetricProducer
argument_list|(
name|scope
argument_list|,
name|producer
argument_list|)
expr_stmt|;
name|registered
operator|.
name|putAll
argument_list|(
name|metrics
argument_list|)
expr_stmt|;
comment|//waitForListener();
name|Set
argument_list|<
name|ObjectInstance
argument_list|>
name|objects
init|=
name|mBeanServer
operator|.
name|queryMBeans
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|registered
operator|.
name|size
argument_list|()
argument_list|,
name|objects
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|o
lambda|->
name|scope
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getKeyProperty
argument_list|(
literal|"scope"
argument_list|)
argument_list|)
operator|&&
name|rootName
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getDomain
argument_list|()
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testReloadCore
specifier|public
name|void
name|testReloadCore
parameter_list|()
throws|throws
name|Exception
block|{
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
name|String
name|scope
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomScope
argument_list|(
name|random
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SolrInfoBean
operator|.
name|Category
name|category
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomCategory
argument_list|(
name|random
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Counter
argument_list|>
name|metrics
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomMetrics
argument_list|(
name|random
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SolrMetricProducer
name|producer
init|=
name|SolrMetricTestUtils
operator|.
name|getProducerOf
argument_list|(
name|metricManager
argument_list|,
name|category
argument_list|,
name|scope
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
name|coreMetricManager
operator|.
name|registerMetricProducer
argument_list|(
name|scope
argument_list|,
name|producer
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|ObjectInstance
argument_list|>
name|objects
init|=
name|mBeanServer
operator|.
name|queryMBeans
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|metrics
operator|.
name|size
argument_list|()
argument_list|,
name|objects
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|o
lambda|->
name|scope
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getKeyProperty
argument_list|(
literal|"scope"
argument_list|)
argument_list|)
operator|&&
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getDomain
argument_list|()
operator|.
name|equals
argument_list|(
name|rootName
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|reload
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|PluginInfo
name|pluginInfo
init|=
name|createReporterPluginInfo
argument_list|(
name|rootName
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|metricManager
operator|.
name|loadReporter
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|,
name|coreMetricManager
operator|.
name|getCore
argument_list|()
operator|.
name|getResourceLoader
argument_list|()
argument_list|,
name|pluginInfo
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|coreMetricManager
operator|.
name|getCore
argument_list|()
operator|.
name|hashCode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|coreMetricManager
operator|.
name|registerMetricProducer
argument_list|(
name|scope
argument_list|,
name|producer
argument_list|)
expr_stmt|;
name|objects
operator|=
name|mBeanServer
operator|.
name|queryMBeans
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|metrics
operator|.
name|size
argument_list|()
argument_list|,
name|objects
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|o
lambda|->
name|scope
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getKeyProperty
argument_list|(
literal|"scope"
argument_list|)
argument_list|)
operator|&&
name|rootName
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getDomain
argument_list|()
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEnabled
specifier|public
name|void
name|testEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|root1
init|=
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|PluginInfo
name|pluginInfo1
init|=
name|createReporterPluginInfo
argument_list|(
name|root1
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|metricManager
operator|.
name|loadReporter
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|,
name|coreMetricManager
operator|.
name|getCore
argument_list|()
operator|.
name|getResourceLoader
argument_list|()
argument_list|,
name|pluginInfo1
argument_list|,
name|coreMetricManager
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|root2
init|=
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|root2
operator|.
name|equals
argument_list|(
name|root1
argument_list|)
argument_list|)
expr_stmt|;
name|PluginInfo
name|pluginInfo2
init|=
name|createReporterPluginInfo
argument_list|(
name|root2
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|metricManager
operator|.
name|loadReporter
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|,
name|coreMetricManager
operator|.
name|getCore
argument_list|()
operator|.
name|getResourceLoader
argument_list|()
argument_list|,
name|pluginInfo2
argument_list|,
name|coreMetricManager
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|SolrMetricReporter
argument_list|>
name|reporters
init|=
name|metricManager
operator|.
name|getReporters
argument_list|(
name|coreMetricManager
operator|.
name|getRegistryName
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|reporters
operator|.
name|containsKey
argument_list|(
name|pluginInfo1
operator|.
name|name
operator|+
literal|"@"
operator|+
name|coreMetricManager
operator|.
name|getTag
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|reporters
operator|.
name|containsKey
argument_list|(
name|pluginInfo2
operator|.
name|name
operator|+
literal|"@"
operator|+
name|coreMetricManager
operator|.
name|getTag
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|scope
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomScope
argument_list|(
name|random
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SolrInfoBean
operator|.
name|Category
name|category
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomCategory
argument_list|(
name|random
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Counter
argument_list|>
name|metrics
init|=
name|SolrMetricTestUtils
operator|.
name|getRandomMetrics
argument_list|(
name|random
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SolrMetricProducer
name|producer
init|=
name|SolrMetricTestUtils
operator|.
name|getProducerOf
argument_list|(
name|metricManager
argument_list|,
name|category
argument_list|,
name|scope
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
name|coreMetricManager
operator|.
name|registerMetricProducer
argument_list|(
name|scope
argument_list|,
name|producer
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|ObjectInstance
argument_list|>
name|objects
init|=
name|mBeanServer
operator|.
name|queryMBeans
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|metrics
operator|.
name|size
argument_list|()
argument_list|,
name|objects
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|o
lambda|->
name|scope
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getKeyProperty
argument_list|(
literal|"scope"
argument_list|)
argument_list|)
operator|&&
name|root1
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getDomain
argument_list|()
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|objects
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|o
lambda|->
name|scope
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getKeyProperty
argument_list|(
literal|"scope"
argument_list|)
argument_list|)
operator|&&
name|root2
operator|.
name|equals
argument_list|(
name|o
operator|.
name|getObjectName
argument_list|()
operator|.
name|getDomain
argument_list|()
argument_list|)
argument_list|)
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

