begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|rules
operator|.
name|SystemPropertiesRestoreRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettyConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|RevertDefaultThreadHandlerRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|RuleChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_class
annotation|@
name|LuceneTestCase
operator|.
name|SuppressSysoutChecks
argument_list|(
name|bugUrl
operator|=
literal|"Solr logs to JUL"
argument_list|)
DECL|class|MiniSolrCloudClusterTest
specifier|public
class|class
name|MiniSolrCloudClusterTest
extends|extends
name|LuceneTestCase
block|{
annotation|@
name|ClassRule
DECL|field|solrClassRules
specifier|public
specifier|static
name|TestRule
name|solrClassRules
init|=
name|RuleChain
operator|.
name|outerRule
argument_list|(
operator|new
name|SystemPropertiesRestoreRule
argument_list|()
argument_list|)
operator|.
name|around
argument_list|(
operator|new
name|RevertDefaultThreadHandlerRule
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testErrorsInStartup
specifier|public
name|void
name|testErrorsInStartup
parameter_list|()
throws|throws
name|Exception
block|{
name|AtomicInteger
name|jettyIndex
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|MiniSolrCloudCluster
name|cluster
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cluster
operator|=
operator|new
name|MiniSolrCloudCluster
argument_list|(
literal|3
argument_list|,
name|createTempDir
argument_list|()
argument_list|,
name|JettyConfig
operator|.
name|builder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|JettySolrRunner
name|startJettySolrRunner
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|context
parameter_list|,
name|JettyConfig
name|config
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|jettyIndex
operator|.
name|incrementAndGet
argument_list|()
operator|!=
literal|2
condition|)
return|return
name|super
operator|.
name|startJettySolrRunner
argument_list|(
name|name
argument_list|,
name|context
argument_list|,
name|config
argument_list|)
return|;
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Fake exception on startup!"
argument_list|)
throw|;
block|}
block|}
expr_stmt|;
name|fail
argument_list|(
literal|"Expected an exception to be thrown from MiniSolrCloudCluster"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Error starting up MiniSolrCloudCluster"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected one suppressed exception"
argument_list|,
literal|1
argument_list|,
name|e
operator|.
name|getSuppressed
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fake exception on startup!"
argument_list|,
name|e
operator|.
name|getSuppressed
argument_list|()
index|[
literal|0
index|]
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testErrorsInShutdown
specifier|public
name|void
name|testErrorsInShutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|AtomicInteger
name|jettyIndex
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|MiniSolrCloudCluster
name|cluster
init|=
operator|new
name|MiniSolrCloudCluster
argument_list|(
literal|3
argument_list|,
name|createTempDir
argument_list|()
argument_list|,
name|JettyConfig
operator|.
name|builder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|JettySolrRunner
name|stopJettySolrRunner
parameter_list|(
name|JettySolrRunner
name|jetty
parameter_list|)
throws|throws
name|Exception
block|{
name|JettySolrRunner
name|j
init|=
name|super
operator|.
name|stopJettySolrRunner
argument_list|(
name|jetty
argument_list|)
decl_stmt|;
if|if
condition|(
name|jettyIndex
operator|.
name|incrementAndGet
argument_list|()
operator|==
literal|2
condition|)
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Fake IOException on shutdown!"
argument_list|)
throw|;
return|return
name|j
return|;
block|}
block|}
decl_stmt|;
try|try
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expected an exception to be thrown on MiniSolrCloudCluster shutdown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Error shutting down MiniSolrCloudCluster"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected one suppressed exception"
argument_list|,
literal|1
argument_list|,
name|e
operator|.
name|getSuppressed
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fake IOException on shutdown!"
argument_list|,
name|e
operator|.
name|getSuppressed
argument_list|()
index|[
literal|0
index|]
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testExtraFilters
specifier|public
name|void
name|testExtraFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|JettyConfig
operator|.
name|Builder
name|jettyConfig
init|=
name|JettyConfig
operator|.
name|builder
argument_list|()
decl_stmt|;
name|jettyConfig
operator|.
name|waitForLoadingCoresToFinish
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|jettyConfig
operator|.
name|withFilter
argument_list|(
name|JettySolrRunner
operator|.
name|DebugFilter
operator|.
name|class
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|MiniSolrCloudCluster
name|cluster
init|=
operator|new
name|MiniSolrCloudCluster
argument_list|(
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|3
argument_list|)
operator|+
literal|1
argument_list|,
name|createTempDir
argument_list|()
argument_list|,
name|jettyConfig
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

