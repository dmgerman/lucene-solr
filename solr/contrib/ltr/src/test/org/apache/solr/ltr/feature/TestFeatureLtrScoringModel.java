begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.ltr.feature
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|ltr
operator|.
name|feature
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|ltr
operator|.
name|TestRerankBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|ltr
operator|.
name|store
operator|.
name|rest
operator|.
name|ManagedFeatureStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|ltr
operator|.
name|store
operator|.
name|rest
operator|.
name|TestManagedFeatureStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestFeatureLtrScoringModel
specifier|public
class|class
name|TestFeatureLtrScoringModel
extends|extends
name|TestRerankBase
block|{
DECL|field|store
specifier|static
name|ManagedFeatureStore
name|store
init|=
literal|null
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|setuptest
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|=
name|getManagedFeatureStore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|after
specifier|public
specifier|static
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
name|aftertest
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getInstanceTest
specifier|public
name|void
name|getInstanceTest
parameter_list|()
throws|throws
name|FeatureException
block|{
name|store
operator|.
name|addFeature
argument_list|(
name|TestManagedFeatureStore
operator|.
name|createMap
argument_list|(
literal|"test"
argument_list|,
name|OriginalScoreFeature
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|"testFstore"
argument_list|)
expr_stmt|;
specifier|final
name|Feature
name|feature
init|=
name|store
operator|.
name|getFeatureStore
argument_list|(
literal|"testFstore"
argument_list|)
operator|.
name|get
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|feature
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|feature
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OriginalScoreFeature
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|,
name|feature
operator|.
name|getClass
argument_list|()
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getInvalidInstanceTest
specifier|public
name|void
name|getInvalidInstanceTest
parameter_list|()
block|{
specifier|final
name|String
name|nonExistingClassName
init|=
literal|"org.apache.solr.ltr.feature.LOLFeature"
decl_stmt|;
specifier|final
name|ClassNotFoundException
name|expectedException
init|=
operator|new
name|ClassNotFoundException
argument_list|(
name|nonExistingClassName
argument_list|)
decl_stmt|;
try|try
block|{
name|store
operator|.
name|addFeature
argument_list|(
name|TestManagedFeatureStore
operator|.
name|createMap
argument_list|(
literal|"test"
argument_list|,
name|nonExistingClassName
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|"testFstore2"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"getInvalidInstanceTest failed to throw exception: "
operator|+
name|expectedException
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|actualException
parameter_list|)
block|{
name|Throwable
name|rootError
init|=
name|getRootCause
argument_list|(
name|actualException
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedException
operator|.
name|toString
argument_list|()
argument_list|,
name|rootError
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

