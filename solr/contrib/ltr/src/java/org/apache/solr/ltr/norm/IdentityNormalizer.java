begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.ltr.norm
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|ltr
operator|.
name|norm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_comment
comment|/**  * A Normalizer that normalizes a feature value to itself. This is the  * default normalizer class, if no normalizer is configured then the  * IdentityNormalizer will be used.  */
end_comment

begin_class
DECL|class|IdentityNormalizer
specifier|public
class|class
name|IdentityNormalizer
extends|extends
name|Normalizer
block|{
DECL|field|INSTANCE
specifier|public
specifier|static
specifier|final
name|IdentityNormalizer
name|INSTANCE
init|=
operator|new
name|IdentityNormalizer
argument_list|()
decl_stmt|;
DECL|method|IdentityNormalizer
specifier|public
name|IdentityNormalizer
parameter_list|()
block|{    }
annotation|@
name|Override
DECL|method|normalize
specifier|public
name|float
name|normalize
parameter_list|(
name|float
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
DECL|method|paramsToMap
specifier|public
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|paramsToMap
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|validate
specifier|protected
name|void
name|validate
parameter_list|()
throws|throws
name|NormalizerException
block|{   }
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

