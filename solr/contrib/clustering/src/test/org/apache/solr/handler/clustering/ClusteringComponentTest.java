begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.solr.handler.clustering
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|clustering
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocumentList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CommonParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|SimpleOrderedMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|QueryComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|SearchComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|LocalSolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrRequestHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|DocList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|QueryCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|QueryResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|SolrIndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|RefCounted
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *  *  **/
end_comment

begin_class
DECL|class|ClusteringComponentTest
specifier|public
class|class
name|ClusteringComponentTest
extends|extends
name|AbstractClusteringTestCase
block|{
annotation|@
name|Before
DECL|method|doBefore
specifier|public
name|void
name|doBefore
parameter_list|()
block|{
name|clearIndex
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testComponent
specifier|public
name|void
name|testComponent
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrCore
name|core
init|=
name|h
operator|.
name|getCore
argument_list|()
decl_stmt|;
name|SearchComponent
name|sc
init|=
name|core
operator|.
name|getSearchComponent
argument_list|(
literal|"clustering"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"sc is null and it shouldn't be"
argument_list|,
name|sc
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|ClusteringComponent
operator|.
name|COMPONENT_NAME
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|CommonParams
operator|.
name|Q
argument_list|,
literal|"*:*"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|ClusteringParams
operator|.
name|USE_SEARCH_RESULTS
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|SolrRequestHandler
name|handler
init|=
name|core
operator|.
name|getRequestHandler
argument_list|(
literal|"standard"
argument_list|)
decl_stmt|;
name|SolrQueryResponse
name|rsp
decl_stmt|;
name|rsp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|rsp
operator|.
name|addResponseHeader
argument_list|(
operator|new
name|SimpleOrderedMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|SolrQueryRequest
name|req
init|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
name|core
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|handler
operator|.
name|handleRequest
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|?
argument_list|>
name|values
init|=
name|rsp
operator|.
name|getValues
argument_list|()
decl_stmt|;
name|Object
name|clusters
init|=
name|values
operator|.
name|get
argument_list|(
literal|"clusters"
argument_list|)
decl_stmt|;
comment|//System.out.println("Clusters: " + clusters);
name|assertTrue
argument_list|(
literal|"clusters is null and it shouldn't be"
argument_list|,
name|clusters
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
name|params
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|ClusteringComponent
operator|.
name|COMPONENT_NAME
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|ClusteringParams
operator|.
name|ENGINE_NAME
argument_list|,
literal|"mock"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|ClusteringParams
operator|.
name|USE_COLLECTION
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|QueryComponent
operator|.
name|COMPONENT_NAME
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|handler
operator|=
name|core
operator|.
name|getRequestHandler
argument_list|(
literal|"docClustering"
argument_list|)
expr_stmt|;
name|rsp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|rsp
operator|.
name|addResponseHeader
argument_list|(
operator|new
name|SimpleOrderedMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
name|core
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|handler
operator|.
name|handleRequest
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|values
operator|=
name|rsp
operator|.
name|getValues
argument_list|()
expr_stmt|;
name|clusters
operator|=
name|values
operator|.
name|get
argument_list|(
literal|"clusters"
argument_list|)
expr_stmt|;
comment|//System.out.println("Clusters: " + clusters);
name|assertTrue
argument_list|(
literal|"clusters is null and it shouldn't be"
argument_list|,
name|clusters
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// tests ClusteringComponent.docListToSolrDocumentList
annotation|@
name|Test
DECL|method|testDocListConversion
specifier|public
name|void
name|testDocListConversion
parameter_list|()
throws|throws
name|Exception
block|{
name|assertU
argument_list|(
literal|""
argument_list|,
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"3234"
argument_list|,
literal|"url"
argument_list|,
literal|"ignoreme"
argument_list|,
literal|"val_i"
argument_list|,
literal|"1"
argument_list|,
literal|"val_dynamic"
argument_list|,
literal|"quick red fox"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
literal|""
argument_list|,
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"3235"
argument_list|,
literal|"url"
argument_list|,
literal|"ignoreme"
argument_list|,
literal|"val_i"
argument_list|,
literal|"1"
argument_list|,
literal|"val_dynamic"
argument_list|,
literal|"quick green fox"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
literal|""
argument_list|,
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"3236"
argument_list|,
literal|"url"
argument_list|,
literal|"ignoreme"
argument_list|,
literal|"val_i"
argument_list|,
literal|"1"
argument_list|,
literal|"val_dynamic"
argument_list|,
literal|"quick brown fox"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
literal|""
argument_list|,
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|RefCounted
argument_list|<
name|SolrIndexSearcher
argument_list|>
name|holder
init|=
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getSearcher
argument_list|()
decl_stmt|;
try|try
block|{
name|SolrIndexSearcher
name|srchr
init|=
name|holder
operator|.
name|get
argument_list|()
decl_stmt|;
name|QueryResult
name|qr
init|=
operator|new
name|QueryResult
argument_list|()
decl_stmt|;
name|QueryCommand
name|cmd
init|=
operator|new
name|QueryCommand
argument_list|()
decl_stmt|;
name|cmd
operator|.
name|setQuery
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|setLen
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|qr
operator|=
name|srchr
operator|.
name|search
argument_list|(
name|qr
argument_list|,
name|cmd
argument_list|)
expr_stmt|;
name|DocList
name|docs
init|=
name|qr
operator|.
name|getDocList
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"wrong docs size"
argument_list|,
literal|3
argument_list|,
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|fields
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|fields
operator|.
name|add
argument_list|(
literal|"val_dynamic"
argument_list|)
expr_stmt|;
name|fields
operator|.
name|add
argument_list|(
literal|"dynamic_val"
argument_list|)
expr_stmt|;
name|fields
operator|.
name|add
argument_list|(
literal|"range_facet_l"
argument_list|)
expr_stmt|;
comment|// copied from id
name|SolrDocumentList
name|list
init|=
name|ClusteringComponent
operator|.
name|docListToSolrDocumentList
argument_list|(
name|docs
argument_list|,
name|srchr
argument_list|,
name|fields
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"wrong list Size"
argument_list|,
name|docs
operator|.
name|size
argument_list|()
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|SolrDocument
name|document
range|:
name|list
control|)
block|{
name|assertTrue
argument_list|(
literal|"unexpected field"
argument_list|,
operator|!
name|document
operator|.
name|containsKey
argument_list|(
literal|"val_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"unexpected id field"
argument_list|,
operator|!
name|document
operator|.
name|containsKey
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"original field"
argument_list|,
name|document
operator|.
name|containsKey
argument_list|(
literal|"val_dynamic"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"dyn copy field"
argument_list|,
name|document
operator|.
name|containsKey
argument_list|(
literal|"dynamic_val"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"copy field"
argument_list|,
name|document
operator|.
name|containsKey
argument_list|(
literal|"range_facet_l"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"original field null"
argument_list|,
name|document
operator|.
name|get
argument_list|(
literal|"val_dynamic"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"dyn copy field null"
argument_list|,
name|document
operator|.
name|get
argument_list|(
literal|"dynamic_val"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"copy field null"
argument_list|,
name|document
operator|.
name|get
argument_list|(
literal|"range_facet_l"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
literal|null
operator|!=
name|holder
condition|)
name|holder
operator|.
name|decref
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

