begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Sort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
import|;
end_import

begin_comment
comment|/**  * Provides read-only metadata about a leaf.  * @lucene.experimental  */
end_comment

begin_class
DECL|class|LeafMetaData
specifier|public
specifier|final
class|class
name|LeafMetaData
block|{
DECL|field|createdVersionMajor
specifier|private
specifier|final
name|int
name|createdVersionMajor
decl_stmt|;
DECL|field|minVersion
specifier|private
specifier|final
name|Version
name|minVersion
decl_stmt|;
DECL|field|sort
specifier|private
specifier|final
name|Sort
name|sort
decl_stmt|;
comment|/** Expert: Sole constructor. Public for use by custom {@link LeafReader} impls. */
DECL|method|LeafMetaData
specifier|public
name|LeafMetaData
parameter_list|(
name|int
name|createdVersionMajor
parameter_list|,
name|Version
name|minVersion
parameter_list|,
name|Sort
name|sort
parameter_list|)
block|{
name|this
operator|.
name|createdVersionMajor
operator|=
name|createdVersionMajor
expr_stmt|;
if|if
condition|(
name|createdVersionMajor
operator|>
name|Version
operator|.
name|LATEST
operator|.
name|major
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"createdVersionMajor is in the future: "
operator|+
name|createdVersionMajor
argument_list|)
throw|;
block|}
if|if
condition|(
name|createdVersionMajor
operator|<
literal|6
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"createdVersionMajor must be>= 6, got: "
operator|+
name|createdVersionMajor
argument_list|)
throw|;
block|}
if|if
condition|(
name|minVersion
operator|!=
literal|null
operator|&&
name|minVersion
operator|.
name|onOrAfter
argument_list|(
name|Version
operator|.
name|LUCENE_7_0_0
argument_list|)
operator|==
literal|false
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"minVersion must be>= 7.0.0: "
operator|+
name|minVersion
argument_list|)
throw|;
block|}
if|if
condition|(
name|createdVersionMajor
operator|>=
literal|7
operator|&&
name|minVersion
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"minVersion must be set when createdVersionMajor is>= 7"
argument_list|)
throw|;
block|}
name|this
operator|.
name|minVersion
operator|=
name|minVersion
expr_stmt|;
name|this
operator|.
name|sort
operator|=
name|sort
expr_stmt|;
block|}
comment|/** Get the Lucene version that created this index. This can be used to implement    *  backward compatibility on top of the codec API. A return value of {@code 6}    *  indicates that the created version is unknown. */
DECL|method|getCreatedVersionMajor
specifier|public
name|int
name|getCreatedVersionMajor
parameter_list|()
block|{
return|return
name|createdVersionMajor
return|;
block|}
comment|/**    * Return the minimum Lucene version that contributed documents to this index,    * or {@code null} if this information is not available.    */
DECL|method|getMinVersion
specifier|public
name|Version
name|getMinVersion
parameter_list|()
block|{
return|return
name|minVersion
return|;
block|}
comment|/**    * Return the order in which documents from this index are sorted, or    * {@code null} if documents are in no particular order.    */
DECL|method|getSort
specifier|public
name|Sort
name|getSort
parameter_list|()
block|{
return|return
name|sort
return|;
block|}
block|}
end_class

end_unit

