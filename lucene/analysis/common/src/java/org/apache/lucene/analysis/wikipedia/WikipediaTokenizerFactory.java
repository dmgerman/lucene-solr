begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.lucene.analysis.wikipedia
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|wikipedia
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|TokenizerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|AttributeFactory
import|;
end_import

begin_comment
comment|/**   * Factory for {@link WikipediaTokenizer}.  *<pre class="prettyprint">  *&lt;fieldType name="text_wiki" class="solr.TextField" positionIncrementGap="100"&gt;  *&lt;analyzer&gt;  *&lt;tokenizer class="solr.WikipediaTokenizerFactory"/&gt;  *&lt;/analyzer&gt;  *&lt;/fieldType&gt;</pre>  */
end_comment

begin_class
DECL|class|WikipediaTokenizerFactory
specifier|public
class|class
name|WikipediaTokenizerFactory
extends|extends
name|TokenizerFactory
block|{
DECL|field|TOKEN_OUTPUT
specifier|public
specifier|static
specifier|final
name|String
name|TOKEN_OUTPUT
init|=
literal|"tokenOutput"
decl_stmt|;
DECL|field|UNTOKENIZED_TYPES
specifier|public
specifier|static
specifier|final
name|String
name|UNTOKENIZED_TYPES
init|=
literal|"untokenizedTypes"
decl_stmt|;
DECL|field|tokenOutput
specifier|protected
specifier|final
name|int
name|tokenOutput
decl_stmt|;
DECL|field|untokenizedTypes
specifier|protected
name|Set
argument_list|<
name|String
argument_list|>
name|untokenizedTypes
decl_stmt|;
comment|/** Creates a new WikipediaTokenizerFactory */
DECL|method|WikipediaTokenizerFactory
specifier|public
name|WikipediaTokenizerFactory
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
parameter_list|)
block|{
name|super
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|tokenOutput
operator|=
name|getInt
argument_list|(
name|args
argument_list|,
name|TOKEN_OUTPUT
argument_list|,
name|WikipediaTokenizer
operator|.
name|TOKENS_ONLY
argument_list|)
expr_stmt|;
name|untokenizedTypes
operator|=
name|getSet
argument_list|(
name|args
argument_list|,
name|UNTOKENIZED_TYPES
argument_list|)
expr_stmt|;
if|if
condition|(
name|untokenizedTypes
operator|==
literal|null
condition|)
block|{
name|untokenizedTypes
operator|=
name|Collections
operator|.
name|emptySet
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|args
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown parameters: "
operator|+
name|args
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|create
specifier|public
name|WikipediaTokenizer
name|create
parameter_list|(
name|AttributeFactory
name|factory
parameter_list|)
block|{
return|return
operator|new
name|WikipediaTokenizer
argument_list|(
name|factory
argument_list|,
name|tokenOutput
argument_list|,
name|untokenizedTypes
argument_list|)
return|;
block|}
block|}
end_class

end_unit

