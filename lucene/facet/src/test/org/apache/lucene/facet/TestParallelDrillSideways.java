begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.lucene.facet
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|sortedset
operator|.
name|SortedSetDocValuesReaderState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|TaxonomyReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|NamedThreadFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_class
DECL|class|TestParallelDrillSideways
specifier|public
class|class
name|TestParallelDrillSideways
extends|extends
name|TestDrillSideways
block|{
DECL|field|executor
specifier|private
specifier|static
name|ExecutorService
name|executor
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|prepareExecutor
specifier|public
specifier|static
name|void
name|prepareExecutor
parameter_list|()
block|{
name|executor
operator|=
name|Executors
operator|.
name|newCachedThreadPool
argument_list|(
operator|new
name|NamedThreadFactory
argument_list|(
literal|"TestParallelDrillSideways"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|shutdownExecutor
specifier|public
specifier|static
name|void
name|shutdownExecutor
parameter_list|()
block|{
name|executor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|executor
operator|=
literal|null
expr_stmt|;
block|}
DECL|method|getNewDrillSideways
specifier|protected
name|DrillSideways
name|getNewDrillSideways
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|FacetsConfig
name|config
parameter_list|,
name|SortedSetDocValuesReaderState
name|state
parameter_list|)
block|{
return|return
operator|new
name|DrillSideways
argument_list|(
name|searcher
argument_list|,
name|config
argument_list|,
literal|null
argument_list|,
name|state
argument_list|,
name|executor
argument_list|)
return|;
block|}
DECL|method|getNewDrillSideways
specifier|protected
name|DrillSideways
name|getNewDrillSideways
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|FacetsConfig
name|config
parameter_list|,
name|TaxonomyReader
name|taxoReader
parameter_list|)
block|{
return|return
operator|new
name|DrillSideways
argument_list|(
name|searcher
argument_list|,
name|config
argument_list|,
name|taxoReader
argument_list|,
literal|null
argument_list|,
name|executor
argument_list|)
return|;
block|}
DECL|method|getNewDrillSidewaysScoreSubdocsAtOnce
specifier|protected
name|DrillSideways
name|getNewDrillSidewaysScoreSubdocsAtOnce
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|FacetsConfig
name|config
parameter_list|,
name|TaxonomyReader
name|taxoReader
parameter_list|)
block|{
return|return
operator|new
name|DrillSideways
argument_list|(
name|searcher
argument_list|,
name|config
argument_list|,
name|taxoReader
argument_list|,
literal|null
argument_list|,
name|executor
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|scoreSubDocsAtOnce
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
return|;
block|}
DECL|method|getNewDrillSidewaysBuildFacetsResult
specifier|protected
name|DrillSideways
name|getNewDrillSidewaysBuildFacetsResult
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|FacetsConfig
name|config
parameter_list|,
name|TaxonomyReader
name|taxoReader
parameter_list|)
block|{
return|return
operator|new
name|DrillSideways
argument_list|(
name|searcher
argument_list|,
name|config
argument_list|,
name|taxoReader
argument_list|,
literal|null
argument_list|,
name|executor
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|Facets
name|buildFacetsResult
parameter_list|(
name|FacetsCollector
name|drillDowns
parameter_list|,
name|FacetsCollector
index|[]
name|drillSideways
parameter_list|,
name|String
index|[]
name|drillSidewaysDims
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Facets
argument_list|>
name|drillSidewaysFacets
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Facets
name|drillDownFacets
init|=
name|getTaxonomyFacetCounts
argument_list|(
name|taxoReader
argument_list|,
name|config
argument_list|,
name|drillDowns
argument_list|)
decl_stmt|;
if|if
condition|(
name|drillSideways
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|drillSideways
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|drillSidewaysFacets
operator|.
name|put
argument_list|(
name|drillSidewaysDims
index|[
name|i
index|]
argument_list|,
name|getTaxonomyFacetCounts
argument_list|(
name|taxoReader
argument_list|,
name|config
argument_list|,
name|drillSideways
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|drillSidewaysFacets
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|drillDownFacets
return|;
block|}
else|else
block|{
return|return
operator|new
name|MultiFacets
argument_list|(
name|drillSidewaysFacets
argument_list|,
name|drillDownFacets
argument_list|)
return|;
block|}
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

