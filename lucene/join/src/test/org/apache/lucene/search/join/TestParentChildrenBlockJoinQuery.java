begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.lucene.search.join
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|join
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumericDocValuesField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NumericDocValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|ReaderUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanClause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|BooleanQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ScoreDoc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopDocs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import

begin_class
DECL|class|TestParentChildrenBlockJoinQuery
specifier|public
class|class
name|TestParentChildrenBlockJoinQuery
extends|extends
name|LuceneTestCase
block|{
DECL|method|testParentChildrenBlockJoinQuery
specifier|public
name|void
name|testParentChildrenBlockJoinQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|numParentDocs
init|=
literal|8
operator|+
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|8
argument_list|)
decl_stmt|;
name|int
name|maxChildDocsPerParent
init|=
literal|8
operator|+
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|8
argument_list|)
decl_stmt|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|writer
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numParentDocs
condition|;
name|i
operator|++
control|)
block|{
name|int
name|numChildDocs
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
name|maxChildDocsPerParent
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Document
argument_list|>
name|docs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|numChildDocs
operator|+
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numChildDocs
condition|;
name|j
operator|++
control|)
block|{
name|Document
name|childDoc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|childDoc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"type"
argument_list|,
literal|"child"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|childDoc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"score"
argument_list|,
name|j
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|childDoc
argument_list|)
expr_stmt|;
block|}
name|Document
name|parenDoc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|parenDoc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"type"
argument_list|,
literal|"parent"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|parenDoc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"num_child_docs"
argument_list|,
name|numChildDocs
argument_list|)
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|parenDoc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocuments
argument_list|(
name|docs
argument_list|)
expr_stmt|;
block|}
name|IndexReader
name|reader
init|=
name|writer
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexSearcher
name|searcher
init|=
name|newSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|BitSetProducer
name|parentFilter
init|=
operator|new
name|QueryBitSetProducer
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"type"
argument_list|,
literal|"parent"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|Query
name|childQuery
init|=
operator|new
name|BooleanQuery
operator|.
name|Builder
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"type"
argument_list|,
literal|"child"
argument_list|)
argument_list|)
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|FILTER
argument_list|)
operator|.
name|add
argument_list|(
name|TestJoinUtil
operator|.
name|numericDocValuesScoreQuery
argument_list|(
literal|"score"
argument_list|)
argument_list|,
name|BooleanClause
operator|.
name|Occur
operator|.
name|SHOULD
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|TopDocs
name|parentDocs
init|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"type"
argument_list|,
literal|"parent"
argument_list|)
argument_list|)
argument_list|,
name|numParentDocs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|parentDocs
operator|.
name|scoreDocs
operator|.
name|length
argument_list|,
name|numParentDocs
argument_list|)
expr_stmt|;
for|for
control|(
name|ScoreDoc
name|parentScoreDoc
range|:
name|parentDocs
operator|.
name|scoreDocs
control|)
block|{
name|LeafReaderContext
name|leafReader
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
name|ReaderUtil
operator|.
name|subIndex
argument_list|(
name|parentScoreDoc
operator|.
name|doc
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|NumericDocValues
name|numericDocValuesField
init|=
name|leafReader
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"num_child_docs"
argument_list|)
decl_stmt|;
name|numericDocValuesField
operator|.
name|advance
argument_list|(
name|parentScoreDoc
operator|.
name|doc
operator|-
name|leafReader
operator|.
name|docBase
argument_list|)
expr_stmt|;
name|long
name|expectedChildDocs
init|=
name|numericDocValuesField
operator|.
name|longValue
argument_list|()
decl_stmt|;
name|ParentChildrenBlockJoinQuery
name|parentChildrenBlockJoinQuery
init|=
operator|new
name|ParentChildrenBlockJoinQuery
argument_list|(
name|parentFilter
argument_list|,
name|childQuery
argument_list|,
name|parentScoreDoc
operator|.
name|doc
argument_list|)
decl_stmt|;
name|TopDocs
name|topDocs
init|=
name|searcher
operator|.
name|search
argument_list|(
name|parentChildrenBlockJoinQuery
argument_list|,
name|maxChildDocsPerParent
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedChildDocs
argument_list|,
name|topDocs
operator|.
name|totalHits
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedChildDocs
operator|>
literal|0
condition|)
block|{
name|assertEquals
argument_list|(
name|expectedChildDocs
argument_list|,
name|topDocs
operator|.
name|getMaxScore
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|topDocs
operator|.
name|scoreDocs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ScoreDoc
name|childScoreDoc
init|=
name|topDocs
operator|.
name|scoreDocs
index|[
name|i
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedChildDocs
operator|-
name|i
argument_list|,
name|childScoreDoc
operator|.
name|score
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

